/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.jfshare.finagle.thrift.order;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

// No additional import required for struct/union.

public class DeliverInfo implements TBase<DeliverInfo, DeliverInfo._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("DeliverInfo");

  private static final TField USER_ID_FIELD_DESC = new TField("userId", TType.I32, (short)1);
  private static final TField ORDER_ID_FIELD_DESC = new TField("orderId", TType.STRING, (short)2);
  private static final TField BUYER_COMMENT_FIELD_DESC = new TField("buyerComment", TType.STRING, (short)3);
  private static final TField SELLER_COMMENT_FIELD_DESC = new TField("sellerComment", TType.STRING, (short)4);
  private static final TField RECEIVER_NAME_FIELD_DESC = new TField("receiverName", TType.STRING, (short)5);
  private static final TField RECEIVER_MOBILE_FIELD_DESC = new TField("receiverMobile", TType.STRING, (short)6);
  private static final TField RECEIVER_TELE_FIELD_DESC = new TField("receiverTele", TType.STRING, (short)7);
  private static final TField ADDRESS_ID_FIELD_DESC = new TField("addressId", TType.I32, (short)8);
  private static final TField PROVINCE_ID_FIELD_DESC = new TField("provinceId", TType.I32, (short)9);
  private static final TField CITY_ID_FIELD_DESC = new TField("cityId", TType.I32, (short)10);
  private static final TField COUNTY_ID_FIELD_DESC = new TField("countyId", TType.I32, (short)11);
  private static final TField PROVINCE_NAME_FIELD_DESC = new TField("provinceName", TType.STRING, (short)12);
  private static final TField CITY_NAME_FIELD_DESC = new TField("cityName", TType.STRING, (short)13);
  private static final TField COUNTY_NAME_FIELD_DESC = new TField("countyName", TType.STRING, (short)14);
  private static final TField RECEIVER_ADDRESS_FIELD_DESC = new TField("receiverAddress", TType.STRING, (short)15);
  private static final TField POST_CODE_FIELD_DESC = new TField("postCode", TType.STRING, (short)16);
  private static final TField EXPRESS_ID_FIELD_DESC = new TField("expressId", TType.STRING, (short)17);
  private static final TField EXPRESS_NAME_FIELD_DESC = new TField("expressName", TType.STRING, (short)18);
  private static final TField EXPRESS_QUERY_URL_FIELD_DESC = new TField("expressQueryUrl", TType.STRING, (short)19);
  private static final TField EXPRESS_NO_FIELD_DESC = new TField("expressNo", TType.STRING, (short)20);
  private static final TField EXPRESS_DNF_TEL_FIELD_DESC = new TField("expressDnfTel", TType.STRING, (short)21);
  private static final TField EXPRESS_TYPE_STATE_FIELD_DESC = new TField("expressTypeState", TType.I32, (short)22);


  public int userId;
  public String orderId;
  public String buyerComment;
  public String sellerComment;
  public String receiverName;
  public String receiverMobile;
  public String receiverTele;
  public int addressId;
  public int provinceId;
  public int cityId;
  public int countyId;
  public String provinceName;
  public String cityName;
  public String countyName;
  public String receiverAddress;
  public String postCode;
  public String expressId;
  public String expressName;
  public String expressQueryUrl;
  public String expressNo;
  public String expressDnfTel;
  public int expressTypeState;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    USER_ID((short)1, "userId"),
    ORDER_ID((short)2, "orderId"),
    BUYER_COMMENT((short)3, "buyerComment"),
    SELLER_COMMENT((short)4, "sellerComment"),
    RECEIVER_NAME((short)5, "receiverName"),
    RECEIVER_MOBILE((short)6, "receiverMobile"),
    RECEIVER_TELE((short)7, "receiverTele"),
    ADDRESS_ID((short)8, "addressId"),
    PROVINCE_ID((short)9, "provinceId"),
    CITY_ID((short)10, "cityId"),
    COUNTY_ID((short)11, "countyId"),
    PROVINCE_NAME((short)12, "provinceName"),
    CITY_NAME((short)13, "cityName"),
    COUNTY_NAME((short)14, "countyName"),
    RECEIVER_ADDRESS((short)15, "receiverAddress"),
    POST_CODE((short)16, "postCode"),
    EXPRESS_ID((short)17, "expressId"),
    EXPRESS_NAME((short)18, "expressName"),
    EXPRESS_QUERY_URL((short)19, "expressQueryUrl"),
    EXPRESS_NO((short)20, "expressNo"),
    EXPRESS_DNF_TEL((short)21, "expressDnfTel"),
    EXPRESS_TYPE_STATE((short)22, "expressTypeState");
  
    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
  
    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USER_ID
  	return USER_ID;
        case 2: // ORDER_ID
  	return ORDER_ID;
        case 3: // BUYER_COMMENT
  	return BUYER_COMMENT;
        case 4: // SELLER_COMMENT
  	return SELLER_COMMENT;
        case 5: // RECEIVER_NAME
  	return RECEIVER_NAME;
        case 6: // RECEIVER_MOBILE
  	return RECEIVER_MOBILE;
        case 7: // RECEIVER_TELE
  	return RECEIVER_TELE;
        case 8: // ADDRESS_ID
  	return ADDRESS_ID;
        case 9: // PROVINCE_ID
  	return PROVINCE_ID;
        case 10: // CITY_ID
  	return CITY_ID;
        case 11: // COUNTY_ID
  	return COUNTY_ID;
        case 12: // PROVINCE_NAME
  	return PROVINCE_NAME;
        case 13: // CITY_NAME
  	return CITY_NAME;
        case 14: // COUNTY_NAME
  	return COUNTY_NAME;
        case 15: // RECEIVER_ADDRESS
  	return RECEIVER_ADDRESS;
        case 16: // POST_CODE
  	return POST_CODE;
        case 17: // EXPRESS_ID
  	return EXPRESS_ID;
        case 18: // EXPRESS_NAME
  	return EXPRESS_NAME;
        case 19: // EXPRESS_QUERY_URL
  	return EXPRESS_QUERY_URL;
        case 20: // EXPRESS_NO
  	return EXPRESS_NO;
        case 21: // EXPRESS_DNF_TEL
  	return EXPRESS_DNF_TEL;
        case 22: // EXPRESS_TYPE_STATE
  	return EXPRESS_TYPE_STATE;
        default:
  	return null;
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }
  
    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }
  
    private final short _thriftId;
    private final String _fieldName;
  
    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }
  
    public short getThriftFieldId() {
      return _thriftId;
    }
  
    public String getFieldName() {
      return _fieldName;
    }
  }


  // isset id assignments
  private static final int __USERID_ISSET_ID = 0;
  private static final int __ADDRESSID_ISSET_ID = 1;
  private static final int __PROVINCEID_ISSET_ID = 2;
  private static final int __CITYID_ISSET_ID = 3;
  private static final int __COUNTYID_ISSET_ID = 4;
  private static final int __EXPRESSTYPESTATE_ISSET_ID = 5;
  private BitSet __isset_bit_vector = new BitSet(6);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USER_ID, new FieldMetaData("userId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.ORDER_ID, new FieldMetaData("orderId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.BUYER_COMMENT, new FieldMetaData("buyerComment", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SELLER_COMMENT, new FieldMetaData("sellerComment", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.RECEIVER_NAME, new FieldMetaData("receiverName", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.RECEIVER_MOBILE, new FieldMetaData("receiverMobile", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.RECEIVER_TELE, new FieldMetaData("receiverTele", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.ADDRESS_ID, new FieldMetaData("addressId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.PROVINCE_ID, new FieldMetaData("provinceId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.CITY_ID, new FieldMetaData("cityId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.COUNTY_ID, new FieldMetaData("countyId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.PROVINCE_NAME, new FieldMetaData("provinceName", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CITY_NAME, new FieldMetaData("cityName", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.COUNTY_NAME, new FieldMetaData("countyName", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.RECEIVER_ADDRESS, new FieldMetaData("receiverAddress", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.POST_CODE, new FieldMetaData("postCode", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXPRESS_ID, new FieldMetaData("expressId", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXPRESS_NAME, new FieldMetaData("expressName", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXPRESS_QUERY_URL, new FieldMetaData("expressQueryUrl", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXPRESS_NO, new FieldMetaData("expressNo", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXPRESS_DNF_TEL, new FieldMetaData("expressDnfTel", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXPRESS_TYPE_STATE, new FieldMetaData("expressTypeState", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(DeliverInfo.class, metaDataMap);
  }


  public DeliverInfo() {
  }

  public DeliverInfo(
    int userId,
    String orderId,
    String buyerComment,
    String sellerComment,
    String receiverName,
    String receiverMobile,
    String receiverTele,
    int addressId,
    int provinceId,
    int cityId,
    int countyId,
    String provinceName,
    String cityName,
    String countyName,
    String receiverAddress)
  {
    this();
    this.userId = userId;
    setUserIdIsSet(true);
    this.orderId = orderId;
    this.buyerComment = buyerComment;
    this.sellerComment = sellerComment;
    this.receiverName = receiverName;
    this.receiverMobile = receiverMobile;
    this.receiverTele = receiverTele;
    this.addressId = addressId;
    setAddressIdIsSet(true);
    this.provinceId = provinceId;
    setProvinceIdIsSet(true);
    this.cityId = cityId;
    setCityIdIsSet(true);
    this.countyId = countyId;
    setCountyIdIsSet(true);
    this.provinceName = provinceName;
    this.cityName = cityName;
    this.countyName = countyName;
    this.receiverAddress = receiverAddress;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public DeliverInfo(DeliverInfo other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.userId = other.userId;
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    if (other.isSetBuyerComment()) {
      this.buyerComment = other.buyerComment;
    }
    if (other.isSetSellerComment()) {
      this.sellerComment = other.sellerComment;
    }
    if (other.isSetReceiverName()) {
      this.receiverName = other.receiverName;
    }
    if (other.isSetReceiverMobile()) {
      this.receiverMobile = other.receiverMobile;
    }
    if (other.isSetReceiverTele()) {
      this.receiverTele = other.receiverTele;
    }
    this.addressId = other.addressId;
    this.provinceId = other.provinceId;
    this.cityId = other.cityId;
    this.countyId = other.countyId;
    if (other.isSetProvinceName()) {
      this.provinceName = other.provinceName;
    }
    if (other.isSetCityName()) {
      this.cityName = other.cityName;
    }
    if (other.isSetCountyName()) {
      this.countyName = other.countyName;
    }
    if (other.isSetReceiverAddress()) {
      this.receiverAddress = other.receiverAddress;
    }
    if (other.isSetPostCode()) {
      this.postCode = other.postCode;
    }
    if (other.isSetExpressId()) {
      this.expressId = other.expressId;
    }
    if (other.isSetExpressName()) {
      this.expressName = other.expressName;
    }
    if (other.isSetExpressQueryUrl()) {
      this.expressQueryUrl = other.expressQueryUrl;
    }
    if (other.isSetExpressNo()) {
      this.expressNo = other.expressNo;
    }
    if (other.isSetExpressDnfTel()) {
      this.expressDnfTel = other.expressDnfTel;
    }
    this.expressTypeState = other.expressTypeState;
  }

  public DeliverInfo deepCopy() {
    return new DeliverInfo(this);
  }

  @Override
  public void clear() {
    setUserIdIsSet(false);
    this.userId = 0;
    this.orderId = null;
    this.buyerComment = null;
    this.sellerComment = null;
    this.receiverName = null;
    this.receiverMobile = null;
    this.receiverTele = null;
    setAddressIdIsSet(false);
    this.addressId = 0;
    setProvinceIdIsSet(false);
    this.provinceId = 0;
    setCityIdIsSet(false);
    this.cityId = 0;
    setCountyIdIsSet(false);
    this.countyId = 0;
    this.provinceName = null;
    this.cityName = null;
    this.countyName = null;
    this.receiverAddress = null;
    this.postCode = null;
    this.expressId = null;
    this.expressName = null;
    this.expressQueryUrl = null;
    this.expressNo = null;
    this.expressDnfTel = null;
    setExpressTypeStateIsSet(false);
    this.expressTypeState = 0;
  }

  public int getUserId() {
    return this.userId;
  }

  public DeliverInfo setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);

    return this;
  }

  public void unsetUserId() {
  __isset_bit_vector.clear(__USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been asigned a value) and false otherwise */
  public boolean isSetUserId() {
    return __isset_bit_vector.get(__USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bit_vector.set(__USERID_ISSET_ID, value);
  }

  public String getOrderId() {
    return this.orderId;
  }

  public DeliverInfo setOrderId(String orderId) {
    this.orderId = orderId;
    
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been asigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  public String getBuyerComment() {
    return this.buyerComment;
  }

  public DeliverInfo setBuyerComment(String buyerComment) {
    this.buyerComment = buyerComment;
    
    return this;
  }

  public void unsetBuyerComment() {
    this.buyerComment = null;
  }

  /** Returns true if field buyerComment is set (has been asigned a value) and false otherwise */
  public boolean isSetBuyerComment() {
    return this.buyerComment != null;
  }

  public void setBuyerCommentIsSet(boolean value) {
    if (!value) {
      this.buyerComment = null;
    }
  }

  public String getSellerComment() {
    return this.sellerComment;
  }

  public DeliverInfo setSellerComment(String sellerComment) {
    this.sellerComment = sellerComment;
    
    return this;
  }

  public void unsetSellerComment() {
    this.sellerComment = null;
  }

  /** Returns true if field sellerComment is set (has been asigned a value) and false otherwise */
  public boolean isSetSellerComment() {
    return this.sellerComment != null;
  }

  public void setSellerCommentIsSet(boolean value) {
    if (!value) {
      this.sellerComment = null;
    }
  }

  public String getReceiverName() {
    return this.receiverName;
  }

  public DeliverInfo setReceiverName(String receiverName) {
    this.receiverName = receiverName;
    
    return this;
  }

  public void unsetReceiverName() {
    this.receiverName = null;
  }

  /** Returns true if field receiverName is set (has been asigned a value) and false otherwise */
  public boolean isSetReceiverName() {
    return this.receiverName != null;
  }

  public void setReceiverNameIsSet(boolean value) {
    if (!value) {
      this.receiverName = null;
    }
  }

  public String getReceiverMobile() {
    return this.receiverMobile;
  }

  public DeliverInfo setReceiverMobile(String receiverMobile) {
    this.receiverMobile = receiverMobile;
    
    return this;
  }

  public void unsetReceiverMobile() {
    this.receiverMobile = null;
  }

  /** Returns true if field receiverMobile is set (has been asigned a value) and false otherwise */
  public boolean isSetReceiverMobile() {
    return this.receiverMobile != null;
  }

  public void setReceiverMobileIsSet(boolean value) {
    if (!value) {
      this.receiverMobile = null;
    }
  }

  public String getReceiverTele() {
    return this.receiverTele;
  }

  public DeliverInfo setReceiverTele(String receiverTele) {
    this.receiverTele = receiverTele;
    
    return this;
  }

  public void unsetReceiverTele() {
    this.receiverTele = null;
  }

  /** Returns true if field receiverTele is set (has been asigned a value) and false otherwise */
  public boolean isSetReceiverTele() {
    return this.receiverTele != null;
  }

  public void setReceiverTeleIsSet(boolean value) {
    if (!value) {
      this.receiverTele = null;
    }
  }

  public int getAddressId() {
    return this.addressId;
  }

  public DeliverInfo setAddressId(int addressId) {
    this.addressId = addressId;
    setAddressIdIsSet(true);

    return this;
  }

  public void unsetAddressId() {
  __isset_bit_vector.clear(__ADDRESSID_ISSET_ID);
  }

  /** Returns true if field addressId is set (has been asigned a value) and false otherwise */
  public boolean isSetAddressId() {
    return __isset_bit_vector.get(__ADDRESSID_ISSET_ID);
  }

  public void setAddressIdIsSet(boolean value) {
    __isset_bit_vector.set(__ADDRESSID_ISSET_ID, value);
  }

  public int getProvinceId() {
    return this.provinceId;
  }

  public DeliverInfo setProvinceId(int provinceId) {
    this.provinceId = provinceId;
    setProvinceIdIsSet(true);

    return this;
  }

  public void unsetProvinceId() {
  __isset_bit_vector.clear(__PROVINCEID_ISSET_ID);
  }

  /** Returns true if field provinceId is set (has been asigned a value) and false otherwise */
  public boolean isSetProvinceId() {
    return __isset_bit_vector.get(__PROVINCEID_ISSET_ID);
  }

  public void setProvinceIdIsSet(boolean value) {
    __isset_bit_vector.set(__PROVINCEID_ISSET_ID, value);
  }

  public int getCityId() {
    return this.cityId;
  }

  public DeliverInfo setCityId(int cityId) {
    this.cityId = cityId;
    setCityIdIsSet(true);

    return this;
  }

  public void unsetCityId() {
  __isset_bit_vector.clear(__CITYID_ISSET_ID);
  }

  /** Returns true if field cityId is set (has been asigned a value) and false otherwise */
  public boolean isSetCityId() {
    return __isset_bit_vector.get(__CITYID_ISSET_ID);
  }

  public void setCityIdIsSet(boolean value) {
    __isset_bit_vector.set(__CITYID_ISSET_ID, value);
  }

  public int getCountyId() {
    return this.countyId;
  }

  public DeliverInfo setCountyId(int countyId) {
    this.countyId = countyId;
    setCountyIdIsSet(true);

    return this;
  }

  public void unsetCountyId() {
  __isset_bit_vector.clear(__COUNTYID_ISSET_ID);
  }

  /** Returns true if field countyId is set (has been asigned a value) and false otherwise */
  public boolean isSetCountyId() {
    return __isset_bit_vector.get(__COUNTYID_ISSET_ID);
  }

  public void setCountyIdIsSet(boolean value) {
    __isset_bit_vector.set(__COUNTYID_ISSET_ID, value);
  }

  public String getProvinceName() {
    return this.provinceName;
  }

  public DeliverInfo setProvinceName(String provinceName) {
    this.provinceName = provinceName;
    
    return this;
  }

  public void unsetProvinceName() {
    this.provinceName = null;
  }

  /** Returns true if field provinceName is set (has been asigned a value) and false otherwise */
  public boolean isSetProvinceName() {
    return this.provinceName != null;
  }

  public void setProvinceNameIsSet(boolean value) {
    if (!value) {
      this.provinceName = null;
    }
  }

  public String getCityName() {
    return this.cityName;
  }

  public DeliverInfo setCityName(String cityName) {
    this.cityName = cityName;
    
    return this;
  }

  public void unsetCityName() {
    this.cityName = null;
  }

  /** Returns true if field cityName is set (has been asigned a value) and false otherwise */
  public boolean isSetCityName() {
    return this.cityName != null;
  }

  public void setCityNameIsSet(boolean value) {
    if (!value) {
      this.cityName = null;
    }
  }

  public String getCountyName() {
    return this.countyName;
  }

  public DeliverInfo setCountyName(String countyName) {
    this.countyName = countyName;
    
    return this;
  }

  public void unsetCountyName() {
    this.countyName = null;
  }

  /** Returns true if field countyName is set (has been asigned a value) and false otherwise */
  public boolean isSetCountyName() {
    return this.countyName != null;
  }

  public void setCountyNameIsSet(boolean value) {
    if (!value) {
      this.countyName = null;
    }
  }

  public String getReceiverAddress() {
    return this.receiverAddress;
  }

  public DeliverInfo setReceiverAddress(String receiverAddress) {
    this.receiverAddress = receiverAddress;
    
    return this;
  }

  public void unsetReceiverAddress() {
    this.receiverAddress = null;
  }

  /** Returns true if field receiverAddress is set (has been asigned a value) and false otherwise */
  public boolean isSetReceiverAddress() {
    return this.receiverAddress != null;
  }

  public void setReceiverAddressIsSet(boolean value) {
    if (!value) {
      this.receiverAddress = null;
    }
  }

  public String getPostCode() {
    return this.postCode;
  }

  public DeliverInfo setPostCode(String postCode) {
    this.postCode = postCode;
    
    return this;
  }

  public void unsetPostCode() {
    this.postCode = null;
  }

  /** Returns true if field postCode is set (has been asigned a value) and false otherwise */
  public boolean isSetPostCode() {
    return this.postCode != null;
  }

  public void setPostCodeIsSet(boolean value) {
    if (!value) {
      this.postCode = null;
    }
  }

  public String getExpressId() {
    return this.expressId;
  }

  public DeliverInfo setExpressId(String expressId) {
    this.expressId = expressId;
    
    return this;
  }

  public void unsetExpressId() {
    this.expressId = null;
  }

  /** Returns true if field expressId is set (has been asigned a value) and false otherwise */
  public boolean isSetExpressId() {
    return this.expressId != null;
  }

  public void setExpressIdIsSet(boolean value) {
    if (!value) {
      this.expressId = null;
    }
  }

  public String getExpressName() {
    return this.expressName;
  }

  public DeliverInfo setExpressName(String expressName) {
    this.expressName = expressName;
    
    return this;
  }

  public void unsetExpressName() {
    this.expressName = null;
  }

  /** Returns true if field expressName is set (has been asigned a value) and false otherwise */
  public boolean isSetExpressName() {
    return this.expressName != null;
  }

  public void setExpressNameIsSet(boolean value) {
    if (!value) {
      this.expressName = null;
    }
  }

  public String getExpressQueryUrl() {
    return this.expressQueryUrl;
  }

  public DeliverInfo setExpressQueryUrl(String expressQueryUrl) {
    this.expressQueryUrl = expressQueryUrl;
    
    return this;
  }

  public void unsetExpressQueryUrl() {
    this.expressQueryUrl = null;
  }

  /** Returns true if field expressQueryUrl is set (has been asigned a value) and false otherwise */
  public boolean isSetExpressQueryUrl() {
    return this.expressQueryUrl != null;
  }

  public void setExpressQueryUrlIsSet(boolean value) {
    if (!value) {
      this.expressQueryUrl = null;
    }
  }

  public String getExpressNo() {
    return this.expressNo;
  }

  public DeliverInfo setExpressNo(String expressNo) {
    this.expressNo = expressNo;
    
    return this;
  }

  public void unsetExpressNo() {
    this.expressNo = null;
  }

  /** Returns true if field expressNo is set (has been asigned a value) and false otherwise */
  public boolean isSetExpressNo() {
    return this.expressNo != null;
  }

  public void setExpressNoIsSet(boolean value) {
    if (!value) {
      this.expressNo = null;
    }
  }

  public String getExpressDnfTel() {
    return this.expressDnfTel;
  }

  public DeliverInfo setExpressDnfTel(String expressDnfTel) {
    this.expressDnfTel = expressDnfTel;
    
    return this;
  }

  public void unsetExpressDnfTel() {
    this.expressDnfTel = null;
  }

  /** Returns true if field expressDnfTel is set (has been asigned a value) and false otherwise */
  public boolean isSetExpressDnfTel() {
    return this.expressDnfTel != null;
  }

  public void setExpressDnfTelIsSet(boolean value) {
    if (!value) {
      this.expressDnfTel = null;
    }
  }

  public int getExpressTypeState() {
    return this.expressTypeState;
  }

  public DeliverInfo setExpressTypeState(int expressTypeState) {
    this.expressTypeState = expressTypeState;
    setExpressTypeStateIsSet(true);

    return this;
  }

  public void unsetExpressTypeState() {
  __isset_bit_vector.clear(__EXPRESSTYPESTATE_ISSET_ID);
  }

  /** Returns true if field expressTypeState is set (has been asigned a value) and false otherwise */
  public boolean isSetExpressTypeState() {
    return __isset_bit_vector.get(__EXPRESSTYPESTATE_ISSET_ID);
  }

  public void setExpressTypeStateIsSet(boolean value) {
    __isset_bit_vector.set(__EXPRESSTYPESTATE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;
    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;
    case BUYER_COMMENT:
      if (value == null) {
        unsetBuyerComment();
      } else {
        setBuyerComment((String)value);
      }
      break;
    case SELLER_COMMENT:
      if (value == null) {
        unsetSellerComment();
      } else {
        setSellerComment((String)value);
      }
      break;
    case RECEIVER_NAME:
      if (value == null) {
        unsetReceiverName();
      } else {
        setReceiverName((String)value);
      }
      break;
    case RECEIVER_MOBILE:
      if (value == null) {
        unsetReceiverMobile();
      } else {
        setReceiverMobile((String)value);
      }
      break;
    case RECEIVER_TELE:
      if (value == null) {
        unsetReceiverTele();
      } else {
        setReceiverTele((String)value);
      }
      break;
    case ADDRESS_ID:
      if (value == null) {
        unsetAddressId();
      } else {
        setAddressId((Integer)value);
      }
      break;
    case PROVINCE_ID:
      if (value == null) {
        unsetProvinceId();
      } else {
        setProvinceId((Integer)value);
      }
      break;
    case CITY_ID:
      if (value == null) {
        unsetCityId();
      } else {
        setCityId((Integer)value);
      }
      break;
    case COUNTY_ID:
      if (value == null) {
        unsetCountyId();
      } else {
        setCountyId((Integer)value);
      }
      break;
    case PROVINCE_NAME:
      if (value == null) {
        unsetProvinceName();
      } else {
        setProvinceName((String)value);
      }
      break;
    case CITY_NAME:
      if (value == null) {
        unsetCityName();
      } else {
        setCityName((String)value);
      }
      break;
    case COUNTY_NAME:
      if (value == null) {
        unsetCountyName();
      } else {
        setCountyName((String)value);
      }
      break;
    case RECEIVER_ADDRESS:
      if (value == null) {
        unsetReceiverAddress();
      } else {
        setReceiverAddress((String)value);
      }
      break;
    case POST_CODE:
      if (value == null) {
        unsetPostCode();
      } else {
        setPostCode((String)value);
      }
      break;
    case EXPRESS_ID:
      if (value == null) {
        unsetExpressId();
      } else {
        setExpressId((String)value);
      }
      break;
    case EXPRESS_NAME:
      if (value == null) {
        unsetExpressName();
      } else {
        setExpressName((String)value);
      }
      break;
    case EXPRESS_QUERY_URL:
      if (value == null) {
        unsetExpressQueryUrl();
      } else {
        setExpressQueryUrl((String)value);
      }
      break;
    case EXPRESS_NO:
      if (value == null) {
        unsetExpressNo();
      } else {
        setExpressNo((String)value);
      }
      break;
    case EXPRESS_DNF_TEL:
      if (value == null) {
        unsetExpressDnfTel();
      } else {
        setExpressDnfTel((String)value);
      }
      break;
    case EXPRESS_TYPE_STATE:
      if (value == null) {
        unsetExpressTypeState();
      } else {
        setExpressTypeState((Integer)value);
      }
      break;
    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case USER_ID:
      return new Integer(getUserId());
    case ORDER_ID:
      return getOrderId();
    case BUYER_COMMENT:
      return getBuyerComment();
    case SELLER_COMMENT:
      return getSellerComment();
    case RECEIVER_NAME:
      return getReceiverName();
    case RECEIVER_MOBILE:
      return getReceiverMobile();
    case RECEIVER_TELE:
      return getReceiverTele();
    case ADDRESS_ID:
      return new Integer(getAddressId());
    case PROVINCE_ID:
      return new Integer(getProvinceId());
    case CITY_ID:
      return new Integer(getCityId());
    case COUNTY_ID:
      return new Integer(getCountyId());
    case PROVINCE_NAME:
      return getProvinceName();
    case CITY_NAME:
      return getCityName();
    case COUNTY_NAME:
      return getCountyName();
    case RECEIVER_ADDRESS:
      return getReceiverAddress();
    case POST_CODE:
      return getPostCode();
    case EXPRESS_ID:
      return getExpressId();
    case EXPRESS_NAME:
      return getExpressName();
    case EXPRESS_QUERY_URL:
      return getExpressQueryUrl();
    case EXPRESS_NO:
      return getExpressNo();
    case EXPRESS_DNF_TEL:
      return getExpressDnfTel();
    case EXPRESS_TYPE_STATE:
      return new Integer(getExpressTypeState());
    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case USER_ID:
      return isSetUserId();
    case ORDER_ID:
      return isSetOrderId();
    case BUYER_COMMENT:
      return isSetBuyerComment();
    case SELLER_COMMENT:
      return isSetSellerComment();
    case RECEIVER_NAME:
      return isSetReceiverName();
    case RECEIVER_MOBILE:
      return isSetReceiverMobile();
    case RECEIVER_TELE:
      return isSetReceiverTele();
    case ADDRESS_ID:
      return isSetAddressId();
    case PROVINCE_ID:
      return isSetProvinceId();
    case CITY_ID:
      return isSetCityId();
    case COUNTY_ID:
      return isSetCountyId();
    case PROVINCE_NAME:
      return isSetProvinceName();
    case CITY_NAME:
      return isSetCityName();
    case COUNTY_NAME:
      return isSetCountyName();
    case RECEIVER_ADDRESS:
      return isSetReceiverAddress();
    case POST_CODE:
      return isSetPostCode();
    case EXPRESS_ID:
      return isSetExpressId();
    case EXPRESS_NAME:
      return isSetExpressName();
    case EXPRESS_QUERY_URL:
      return isSetExpressQueryUrl();
    case EXPRESS_NO:
      return isSetExpressNo();
    case EXPRESS_DNF_TEL:
      return isSetExpressDnfTel();
    case EXPRESS_TYPE_STATE:
      return isSetExpressTypeState();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof DeliverInfo)
      return this.equals((DeliverInfo)that);
    return false;
  }

  public boolean equals(DeliverInfo that) {
    if (that == null)
      return false;
    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }
    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }
    boolean this_present_buyerComment = true && this.isSetBuyerComment();
    boolean that_present_buyerComment = true && that.isSetBuyerComment();
    if (this_present_buyerComment || that_present_buyerComment) {
      if (!(this_present_buyerComment && that_present_buyerComment))
        return false;
      if (!this.buyerComment.equals(that.buyerComment))
        return false;
    }
    boolean this_present_sellerComment = true && this.isSetSellerComment();
    boolean that_present_sellerComment = true && that.isSetSellerComment();
    if (this_present_sellerComment || that_present_sellerComment) {
      if (!(this_present_sellerComment && that_present_sellerComment))
        return false;
      if (!this.sellerComment.equals(that.sellerComment))
        return false;
    }
    boolean this_present_receiverName = true && this.isSetReceiverName();
    boolean that_present_receiverName = true && that.isSetReceiverName();
    if (this_present_receiverName || that_present_receiverName) {
      if (!(this_present_receiverName && that_present_receiverName))
        return false;
      if (!this.receiverName.equals(that.receiverName))
        return false;
    }
    boolean this_present_receiverMobile = true && this.isSetReceiverMobile();
    boolean that_present_receiverMobile = true && that.isSetReceiverMobile();
    if (this_present_receiverMobile || that_present_receiverMobile) {
      if (!(this_present_receiverMobile && that_present_receiverMobile))
        return false;
      if (!this.receiverMobile.equals(that.receiverMobile))
        return false;
    }
    boolean this_present_receiverTele = true && this.isSetReceiverTele();
    boolean that_present_receiverTele = true && that.isSetReceiverTele();
    if (this_present_receiverTele || that_present_receiverTele) {
      if (!(this_present_receiverTele && that_present_receiverTele))
        return false;
      if (!this.receiverTele.equals(that.receiverTele))
        return false;
    }
    boolean this_present_addressId = true;
    boolean that_present_addressId = true;
    if (this_present_addressId || that_present_addressId) {
      if (!(this_present_addressId && that_present_addressId))
        return false;
      if (this.addressId != that.addressId)
        return false;
    }
    boolean this_present_provinceId = true;
    boolean that_present_provinceId = true;
    if (this_present_provinceId || that_present_provinceId) {
      if (!(this_present_provinceId && that_present_provinceId))
        return false;
      if (this.provinceId != that.provinceId)
        return false;
    }
    boolean this_present_cityId = true;
    boolean that_present_cityId = true;
    if (this_present_cityId || that_present_cityId) {
      if (!(this_present_cityId && that_present_cityId))
        return false;
      if (this.cityId != that.cityId)
        return false;
    }
    boolean this_present_countyId = true;
    boolean that_present_countyId = true;
    if (this_present_countyId || that_present_countyId) {
      if (!(this_present_countyId && that_present_countyId))
        return false;
      if (this.countyId != that.countyId)
        return false;
    }
    boolean this_present_provinceName = true && this.isSetProvinceName();
    boolean that_present_provinceName = true && that.isSetProvinceName();
    if (this_present_provinceName || that_present_provinceName) {
      if (!(this_present_provinceName && that_present_provinceName))
        return false;
      if (!this.provinceName.equals(that.provinceName))
        return false;
    }
    boolean this_present_cityName = true && this.isSetCityName();
    boolean that_present_cityName = true && that.isSetCityName();
    if (this_present_cityName || that_present_cityName) {
      if (!(this_present_cityName && that_present_cityName))
        return false;
      if (!this.cityName.equals(that.cityName))
        return false;
    }
    boolean this_present_countyName = true && this.isSetCountyName();
    boolean that_present_countyName = true && that.isSetCountyName();
    if (this_present_countyName || that_present_countyName) {
      if (!(this_present_countyName && that_present_countyName))
        return false;
      if (!this.countyName.equals(that.countyName))
        return false;
    }
    boolean this_present_receiverAddress = true && this.isSetReceiverAddress();
    boolean that_present_receiverAddress = true && that.isSetReceiverAddress();
    if (this_present_receiverAddress || that_present_receiverAddress) {
      if (!(this_present_receiverAddress && that_present_receiverAddress))
        return false;
      if (!this.receiverAddress.equals(that.receiverAddress))
        return false;
    }
    boolean this_present_postCode = true && this.isSetPostCode();
    boolean that_present_postCode = true && that.isSetPostCode();
    if (this_present_postCode || that_present_postCode) {
      if (!(this_present_postCode && that_present_postCode))
        return false;
      if (!this.postCode.equals(that.postCode))
        return false;
    }
    boolean this_present_expressId = true && this.isSetExpressId();
    boolean that_present_expressId = true && that.isSetExpressId();
    if (this_present_expressId || that_present_expressId) {
      if (!(this_present_expressId && that_present_expressId))
        return false;
      if (!this.expressId.equals(that.expressId))
        return false;
    }
    boolean this_present_expressName = true && this.isSetExpressName();
    boolean that_present_expressName = true && that.isSetExpressName();
    if (this_present_expressName || that_present_expressName) {
      if (!(this_present_expressName && that_present_expressName))
        return false;
      if (!this.expressName.equals(that.expressName))
        return false;
    }
    boolean this_present_expressQueryUrl = true && this.isSetExpressQueryUrl();
    boolean that_present_expressQueryUrl = true && that.isSetExpressQueryUrl();
    if (this_present_expressQueryUrl || that_present_expressQueryUrl) {
      if (!(this_present_expressQueryUrl && that_present_expressQueryUrl))
        return false;
      if (!this.expressQueryUrl.equals(that.expressQueryUrl))
        return false;
    }
    boolean this_present_expressNo = true && this.isSetExpressNo();
    boolean that_present_expressNo = true && that.isSetExpressNo();
    if (this_present_expressNo || that_present_expressNo) {
      if (!(this_present_expressNo && that_present_expressNo))
        return false;
      if (!this.expressNo.equals(that.expressNo))
        return false;
    }
    boolean this_present_expressDnfTel = true && this.isSetExpressDnfTel();
    boolean that_present_expressDnfTel = true && that.isSetExpressDnfTel();
    if (this_present_expressDnfTel || that_present_expressDnfTel) {
      if (!(this_present_expressDnfTel && that_present_expressDnfTel))
        return false;
      if (!this.expressDnfTel.equals(that.expressDnfTel))
        return false;
    }
    boolean this_present_expressTypeState = true && this.isSetExpressTypeState();
    boolean that_present_expressTypeState = true && that.isSetExpressTypeState();
    if (this_present_expressTypeState || that_present_expressTypeState) {
      if (!(this_present_expressTypeState && that_present_expressTypeState))
        return false;
      if (this.expressTypeState != that.expressTypeState)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();
    boolean present_userId = true;
    builder.append(present_userId);
    if (present_userId)
      builder.append(userId);
    boolean present_orderId = true && (isSetOrderId());
    builder.append(present_orderId);
    if (present_orderId)
      builder.append(orderId);
    boolean present_buyerComment = true && (isSetBuyerComment());
    builder.append(present_buyerComment);
    if (present_buyerComment)
      builder.append(buyerComment);
    boolean present_sellerComment = true && (isSetSellerComment());
    builder.append(present_sellerComment);
    if (present_sellerComment)
      builder.append(sellerComment);
    boolean present_receiverName = true && (isSetReceiverName());
    builder.append(present_receiverName);
    if (present_receiverName)
      builder.append(receiverName);
    boolean present_receiverMobile = true && (isSetReceiverMobile());
    builder.append(present_receiverMobile);
    if (present_receiverMobile)
      builder.append(receiverMobile);
    boolean present_receiverTele = true && (isSetReceiverTele());
    builder.append(present_receiverTele);
    if (present_receiverTele)
      builder.append(receiverTele);
    boolean present_addressId = true;
    builder.append(present_addressId);
    if (present_addressId)
      builder.append(addressId);
    boolean present_provinceId = true;
    builder.append(present_provinceId);
    if (present_provinceId)
      builder.append(provinceId);
    boolean present_cityId = true;
    builder.append(present_cityId);
    if (present_cityId)
      builder.append(cityId);
    boolean present_countyId = true;
    builder.append(present_countyId);
    if (present_countyId)
      builder.append(countyId);
    boolean present_provinceName = true && (isSetProvinceName());
    builder.append(present_provinceName);
    if (present_provinceName)
      builder.append(provinceName);
    boolean present_cityName = true && (isSetCityName());
    builder.append(present_cityName);
    if (present_cityName)
      builder.append(cityName);
    boolean present_countyName = true && (isSetCountyName());
    builder.append(present_countyName);
    if (present_countyName)
      builder.append(countyName);
    boolean present_receiverAddress = true && (isSetReceiverAddress());
    builder.append(present_receiverAddress);
    if (present_receiverAddress)
      builder.append(receiverAddress);
    boolean present_postCode = true && (isSetPostCode());
    builder.append(present_postCode);
    if (present_postCode)
      builder.append(postCode);
    boolean present_expressId = true && (isSetExpressId());
    builder.append(present_expressId);
    if (present_expressId)
      builder.append(expressId);
    boolean present_expressName = true && (isSetExpressName());
    builder.append(present_expressName);
    if (present_expressName)
      builder.append(expressName);
    boolean present_expressQueryUrl = true && (isSetExpressQueryUrl());
    builder.append(present_expressQueryUrl);
    if (present_expressQueryUrl)
      builder.append(expressQueryUrl);
    boolean present_expressNo = true && (isSetExpressNo());
    builder.append(present_expressNo);
    if (present_expressNo)
      builder.append(expressNo);
    boolean present_expressDnfTel = true && (isSetExpressDnfTel());
    builder.append(present_expressDnfTel);
    if (present_expressDnfTel)
      builder.append(expressDnfTel);
    boolean present_expressTypeState = true && (isSetExpressTypeState());
    builder.append(present_expressTypeState);
    if (present_expressTypeState)
      builder.append(expressTypeState);
    return builder.toHashCode();
  }

  public int compareTo(DeliverInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    DeliverInfo typedOther = (DeliverInfo)other;

    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(typedOther.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = TBaseHelper.compareTo(this.userId, typedOther.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(typedOther.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = TBaseHelper.compareTo(this.orderId, typedOther.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyerComment()).compareTo(typedOther.isSetBuyerComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyerComment()) {
      lastComparison = TBaseHelper.compareTo(this.buyerComment, typedOther.buyerComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerComment()).compareTo(typedOther.isSetSellerComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerComment()) {
      lastComparison = TBaseHelper.compareTo(this.sellerComment, typedOther.sellerComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReceiverName()).compareTo(typedOther.isSetReceiverName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReceiverName()) {
      lastComparison = TBaseHelper.compareTo(this.receiverName, typedOther.receiverName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReceiverMobile()).compareTo(typedOther.isSetReceiverMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReceiverMobile()) {
      lastComparison = TBaseHelper.compareTo(this.receiverMobile, typedOther.receiverMobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReceiverTele()).compareTo(typedOther.isSetReceiverTele());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReceiverTele()) {
      lastComparison = TBaseHelper.compareTo(this.receiverTele, typedOther.receiverTele);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddressId()).compareTo(typedOther.isSetAddressId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddressId()) {
      lastComparison = TBaseHelper.compareTo(this.addressId, typedOther.addressId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceId()).compareTo(typedOther.isSetProvinceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceId()) {
      lastComparison = TBaseHelper.compareTo(this.provinceId, typedOther.provinceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityId()).compareTo(typedOther.isSetCityId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityId()) {
      lastComparison = TBaseHelper.compareTo(this.cityId, typedOther.cityId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyId()).compareTo(typedOther.isSetCountyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyId()) {
      lastComparison = TBaseHelper.compareTo(this.countyId, typedOther.countyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceName()).compareTo(typedOther.isSetProvinceName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceName()) {
      lastComparison = TBaseHelper.compareTo(this.provinceName, typedOther.provinceName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityName()).compareTo(typedOther.isSetCityName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityName()) {
      lastComparison = TBaseHelper.compareTo(this.cityName, typedOther.cityName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyName()).compareTo(typedOther.isSetCountyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyName()) {
      lastComparison = TBaseHelper.compareTo(this.countyName, typedOther.countyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReceiverAddress()).compareTo(typedOther.isSetReceiverAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReceiverAddress()) {
      lastComparison = TBaseHelper.compareTo(this.receiverAddress, typedOther.receiverAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPostCode()).compareTo(typedOther.isSetPostCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPostCode()) {
      lastComparison = TBaseHelper.compareTo(this.postCode, typedOther.postCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpressId()).compareTo(typedOther.isSetExpressId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpressId()) {
      lastComparison = TBaseHelper.compareTo(this.expressId, typedOther.expressId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpressName()).compareTo(typedOther.isSetExpressName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpressName()) {
      lastComparison = TBaseHelper.compareTo(this.expressName, typedOther.expressName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpressQueryUrl()).compareTo(typedOther.isSetExpressQueryUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpressQueryUrl()) {
      lastComparison = TBaseHelper.compareTo(this.expressQueryUrl, typedOther.expressQueryUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpressNo()).compareTo(typedOther.isSetExpressNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpressNo()) {
      lastComparison = TBaseHelper.compareTo(this.expressNo, typedOther.expressNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpressDnfTel()).compareTo(typedOther.isSetExpressDnfTel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpressDnfTel()) {
      lastComparison = TBaseHelper.compareTo(this.expressDnfTel, typedOther.expressDnfTel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpressTypeState()).compareTo(typedOther.isSetExpressTypeState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpressTypeState()) {
      lastComparison = TBaseHelper.compareTo(this.expressTypeState, typedOther.expressTypeState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case 1: // USER_ID
          if (field.type == TType.I32) {
            this.userId = iprot.readI32();
            setUserIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // ORDER_ID
          if (field.type == TType.STRING) {
            this.orderId = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // BUYER_COMMENT
          if (field.type == TType.STRING) {
            this.buyerComment = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // SELLER_COMMENT
          if (field.type == TType.STRING) {
            this.sellerComment = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // RECEIVER_NAME
          if (field.type == TType.STRING) {
            this.receiverName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // RECEIVER_MOBILE
          if (field.type == TType.STRING) {
            this.receiverMobile = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // RECEIVER_TELE
          if (field.type == TType.STRING) {
            this.receiverTele = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // ADDRESS_ID
          if (field.type == TType.I32) {
            this.addressId = iprot.readI32();
            setAddressIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // PROVINCE_ID
          if (field.type == TType.I32) {
            this.provinceId = iprot.readI32();
            setProvinceIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // CITY_ID
          if (field.type == TType.I32) {
            this.cityId = iprot.readI32();
            setCityIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // COUNTY_ID
          if (field.type == TType.I32) {
            this.countyId = iprot.readI32();
            setCountyIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // PROVINCE_NAME
          if (field.type == TType.STRING) {
            this.provinceName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // CITY_NAME
          if (field.type == TType.STRING) {
            this.cityName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // COUNTY_NAME
          if (field.type == TType.STRING) {
            this.countyName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // RECEIVER_ADDRESS
          if (field.type == TType.STRING) {
            this.receiverAddress = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // POST_CODE
          if (field.type == TType.STRING) {
            this.postCode = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // EXPRESS_ID
          if (field.type == TType.STRING) {
            this.expressId = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 18: // EXPRESS_NAME
          if (field.type == TType.STRING) {
            this.expressName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 19: // EXPRESS_QUERY_URL
          if (field.type == TType.STRING) {
            this.expressQueryUrl = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // EXPRESS_NO
          if (field.type == TType.STRING) {
            this.expressNo = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 21: // EXPRESS_DNF_TEL
          if (field.type == TType.STRING) {
            this.expressDnfTel = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 22: // EXPRESS_TYPE_STATE
          if (field.type == TType.I32) {
            this.expressTypeState = iprot.readI32();
            setExpressTypeStateIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();
    
    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(USER_ID_FIELD_DESC);
    oprot.writeI32(this.userId);
    oprot.writeFieldEnd();
    if (this.orderId != null) {
      oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
      oprot.writeString(this.orderId);
      oprot.writeFieldEnd();
    }
    if (this.buyerComment != null) {
      oprot.writeFieldBegin(BUYER_COMMENT_FIELD_DESC);
      oprot.writeString(this.buyerComment);
      oprot.writeFieldEnd();
    }
    if (this.sellerComment != null) {
      oprot.writeFieldBegin(SELLER_COMMENT_FIELD_DESC);
      oprot.writeString(this.sellerComment);
      oprot.writeFieldEnd();
    }
    if (this.receiverName != null) {
      oprot.writeFieldBegin(RECEIVER_NAME_FIELD_DESC);
      oprot.writeString(this.receiverName);
      oprot.writeFieldEnd();
    }
    if (this.receiverMobile != null) {
      oprot.writeFieldBegin(RECEIVER_MOBILE_FIELD_DESC);
      oprot.writeString(this.receiverMobile);
      oprot.writeFieldEnd();
    }
    if (this.receiverTele != null) {
      oprot.writeFieldBegin(RECEIVER_TELE_FIELD_DESC);
      oprot.writeString(this.receiverTele);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(ADDRESS_ID_FIELD_DESC);
    oprot.writeI32(this.addressId);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PROVINCE_ID_FIELD_DESC);
    oprot.writeI32(this.provinceId);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CITY_ID_FIELD_DESC);
    oprot.writeI32(this.cityId);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(COUNTY_ID_FIELD_DESC);
    oprot.writeI32(this.countyId);
    oprot.writeFieldEnd();
    if (this.provinceName != null) {
      oprot.writeFieldBegin(PROVINCE_NAME_FIELD_DESC);
      oprot.writeString(this.provinceName);
      oprot.writeFieldEnd();
    }
    if (this.cityName != null) {
      oprot.writeFieldBegin(CITY_NAME_FIELD_DESC);
      oprot.writeString(this.cityName);
      oprot.writeFieldEnd();
    }
    if (this.countyName != null) {
      oprot.writeFieldBegin(COUNTY_NAME_FIELD_DESC);
      oprot.writeString(this.countyName);
      oprot.writeFieldEnd();
    }
    if (this.receiverAddress != null) {
      oprot.writeFieldBegin(RECEIVER_ADDRESS_FIELD_DESC);
      oprot.writeString(this.receiverAddress);
      oprot.writeFieldEnd();
    }
    if (this.postCode != null) {
      if (isSetPostCode()) {
        oprot.writeFieldBegin(POST_CODE_FIELD_DESC);
        oprot.writeString(this.postCode);
        oprot.writeFieldEnd();
      }
    }
    if (this.expressId != null) {
      if (isSetExpressId()) {
        oprot.writeFieldBegin(EXPRESS_ID_FIELD_DESC);
        oprot.writeString(this.expressId);
        oprot.writeFieldEnd();
      }
    }
    if (this.expressName != null) {
      if (isSetExpressName()) {
        oprot.writeFieldBegin(EXPRESS_NAME_FIELD_DESC);
        oprot.writeString(this.expressName);
        oprot.writeFieldEnd();
      }
    }
    if (this.expressQueryUrl != null) {
      if (isSetExpressQueryUrl()) {
        oprot.writeFieldBegin(EXPRESS_QUERY_URL_FIELD_DESC);
        oprot.writeString(this.expressQueryUrl);
        oprot.writeFieldEnd();
      }
    }
    if (this.expressNo != null) {
      if (isSetExpressNo()) {
        oprot.writeFieldBegin(EXPRESS_NO_FIELD_DESC);
        oprot.writeString(this.expressNo);
        oprot.writeFieldEnd();
      }
    }
    if (this.expressDnfTel != null) {
      if (isSetExpressDnfTel()) {
        oprot.writeFieldBegin(EXPRESS_DNF_TEL_FIELD_DESC);
        oprot.writeString(this.expressDnfTel);
        oprot.writeFieldEnd();
      }
    }
    if (isSetExpressTypeState()) {
      oprot.writeFieldBegin(EXPRESS_TYPE_STATE_FIELD_DESC);
      oprot.writeI32(this.expressTypeState);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("DeliverInfo(");
    boolean first = true;
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buyerComment:");
    if (this.buyerComment == null) {
      sb.append("null");
    } else {
      sb.append(this.buyerComment);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerComment:");
    if (this.sellerComment == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerComment);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("receiverName:");
    if (this.receiverName == null) {
      sb.append("null");
    } else {
      sb.append(this.receiverName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("receiverMobile:");
    if (this.receiverMobile == null) {
      sb.append("null");
    } else {
      sb.append(this.receiverMobile);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("receiverTele:");
    if (this.receiverTele == null) {
      sb.append("null");
    } else {
      sb.append(this.receiverTele);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("addressId:");
    sb.append(this.addressId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("provinceId:");
    sb.append(this.provinceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cityId:");
    sb.append(this.cityId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("countyId:");
    sb.append(this.countyId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("provinceName:");
    if (this.provinceName == null) {
      sb.append("null");
    } else {
      sb.append(this.provinceName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cityName:");
    if (this.cityName == null) {
      sb.append("null");
    } else {
      sb.append(this.cityName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("countyName:");
    if (this.countyName == null) {
      sb.append("null");
    } else {
      sb.append(this.countyName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("receiverAddress:");
    if (this.receiverAddress == null) {
      sb.append("null");
    } else {
      sb.append(this.receiverAddress);
    }
    first = false;
    if (isSetPostCode()) {
      if (!first) sb.append(", ");
      sb.append("postCode:");
      if (this.postCode == null) {
        sb.append("null");
      } else {
        sb.append(this.postCode);
      }
      first = false;
      }
    if (isSetExpressId()) {
      if (!first) sb.append(", ");
      sb.append("expressId:");
      if (this.expressId == null) {
        sb.append("null");
      } else {
        sb.append(this.expressId);
      }
      first = false;
      }
    if (isSetExpressName()) {
      if (!first) sb.append(", ");
      sb.append("expressName:");
      if (this.expressName == null) {
        sb.append("null");
      } else {
        sb.append(this.expressName);
      }
      first = false;
      }
    if (isSetExpressQueryUrl()) {
      if (!first) sb.append(", ");
      sb.append("expressQueryUrl:");
      if (this.expressQueryUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.expressQueryUrl);
      }
      first = false;
      }
    if (isSetExpressNo()) {
      if (!first) sb.append(", ");
      sb.append("expressNo:");
      if (this.expressNo == null) {
        sb.append("null");
      } else {
        sb.append(this.expressNo);
      }
      first = false;
      }
    if (isSetExpressDnfTel()) {
      if (!first) sb.append(", ");
      sb.append("expressDnfTel:");
      if (this.expressDnfTel == null) {
        sb.append("null");
      } else {
        sb.append(this.expressDnfTel);
      }
      first = false;
      }
    if (isSetExpressTypeState()) {
      if (!first) sb.append(", ");
      sb.append("expressTypeState:");
      sb.append(this.expressTypeState);
      first = false;
      }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }
}
