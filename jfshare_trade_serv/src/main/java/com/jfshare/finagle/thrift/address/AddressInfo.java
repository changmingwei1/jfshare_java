/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.jfshare.finagle.thrift.address;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

// No additional import required for struct/union.

public class AddressInfo implements TBase<AddressInfo, AddressInfo._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("AddressInfo");

  private static final TField USER_ID_FIELD_DESC = new TField("userId", TType.I32, (short)1);
  private static final TField ID_FIELD_DESC = new TField("id", TType.I32, (short)2);
  private static final TField RECEIVER_NAME_FIELD_DESC = new TField("receiverName", TType.STRING, (short)3);
  private static final TField MOBILE_FIELD_DESC = new TField("mobile", TType.STRING, (short)4);
  private static final TField TEL_CODE_FIELD_DESC = new TField("telCode", TType.STRING, (short)5);
  private static final TField TEL_FIELD_DESC = new TField("tel", TType.STRING, (short)6);
  private static final TField TEL_EXT_NUMBER_FIELD_DESC = new TField("telExtNumber", TType.STRING, (short)7);
  private static final TField PROVINCE_ID_FIELD_DESC = new TField("provinceId", TType.I32, (short)8);
  private static final TField PROVINCE_NAME_FIELD_DESC = new TField("provinceName", TType.STRING, (short)9);
  private static final TField CITY_ID_FIELD_DESC = new TField("cityId", TType.I32, (short)10);
  private static final TField CITY_NAME_FIELD_DESC = new TField("cityName", TType.STRING, (short)11);
  private static final TField COUNTY_ID_FIELD_DESC = new TField("countyId", TType.I32, (short)12);
  private static final TField COUNTY_NAME_FIELD_DESC = new TField("countyName", TType.STRING, (short)13);
  private static final TField ADDRESS_FIELD_DESC = new TField("address", TType.STRING, (short)14);
  private static final TField POST_CODE_FIELD_DESC = new TField("postCode", TType.STRING, (short)15);
  private static final TField IS_DEFAULT_FIELD_DESC = new TField("isDefault", TType.I32, (short)16);
  private static final TField EMAIL_FIELD_DESC = new TField("email", TType.STRING, (short)17);
  private static final TField INDEX_FIELD_DESC = new TField("index", TType.I32, (short)18);


  public int userId;
  public int id;
  public String receiverName;
  public String mobile;
  public String telCode;
  public String tel;
  public String telExtNumber;
  public int provinceId;
  public String provinceName;
  public int cityId;
  public String cityName;
  public int countyId;
  public String countyName;
  public String address;
  public String postCode;
  public int isDefault;
  public String email;
  public int index;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    USER_ID((short)1, "userId"),
    ID((short)2, "id"),
    RECEIVER_NAME((short)3, "receiverName"),
    MOBILE((short)4, "mobile"),
    TEL_CODE((short)5, "telCode"),
    TEL((short)6, "tel"),
    TEL_EXT_NUMBER((short)7, "telExtNumber"),
    PROVINCE_ID((short)8, "provinceId"),
    PROVINCE_NAME((short)9, "provinceName"),
    CITY_ID((short)10, "cityId"),
    CITY_NAME((short)11, "cityName"),
    COUNTY_ID((short)12, "countyId"),
    COUNTY_NAME((short)13, "countyName"),
    ADDRESS((short)14, "address"),
    POST_CODE((short)15, "postCode"),
    IS_DEFAULT((short)16, "isDefault"),
    EMAIL((short)17, "email"),
    INDEX((short)18, "index");
  
    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
  
    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USER_ID
  	return USER_ID;
        case 2: // ID
  	return ID;
        case 3: // RECEIVER_NAME
  	return RECEIVER_NAME;
        case 4: // MOBILE
  	return MOBILE;
        case 5: // TEL_CODE
  	return TEL_CODE;
        case 6: // TEL
  	return TEL;
        case 7: // TEL_EXT_NUMBER
  	return TEL_EXT_NUMBER;
        case 8: // PROVINCE_ID
  	return PROVINCE_ID;
        case 9: // PROVINCE_NAME
  	return PROVINCE_NAME;
        case 10: // CITY_ID
  	return CITY_ID;
        case 11: // CITY_NAME
  	return CITY_NAME;
        case 12: // COUNTY_ID
  	return COUNTY_ID;
        case 13: // COUNTY_NAME
  	return COUNTY_NAME;
        case 14: // ADDRESS
  	return ADDRESS;
        case 15: // POST_CODE
  	return POST_CODE;
        case 16: // IS_DEFAULT
  	return IS_DEFAULT;
        case 17: // EMAIL
  	return EMAIL;
        case 18: // INDEX
  	return INDEX;
        default:
  	return null;
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }
  
    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }
  
    private final short _thriftId;
    private final String _fieldName;
  
    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }
  
    public short getThriftFieldId() {
      return _thriftId;
    }
  
    public String getFieldName() {
      return _fieldName;
    }
  }


  // isset id assignments
  private static final int __USERID_ISSET_ID = 0;
  private static final int __ID_ISSET_ID = 1;
  private static final int __PROVINCEID_ISSET_ID = 2;
  private static final int __CITYID_ISSET_ID = 3;
  private static final int __COUNTYID_ISSET_ID = 4;
  private static final int __ISDEFAULT_ISSET_ID = 5;
  private static final int __INDEX_ISSET_ID = 6;
  private BitSet __isset_bit_vector = new BitSet(7);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USER_ID, new FieldMetaData("userId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.ID, new FieldMetaData("id", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.RECEIVER_NAME, new FieldMetaData("receiverName", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.MOBILE, new FieldMetaData("mobile", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.TEL_CODE, new FieldMetaData("telCode", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.TEL, new FieldMetaData("tel", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.TEL_EXT_NUMBER, new FieldMetaData("telExtNumber", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.PROVINCE_ID, new FieldMetaData("provinceId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.PROVINCE_NAME, new FieldMetaData("provinceName", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CITY_ID, new FieldMetaData("cityId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.CITY_NAME, new FieldMetaData("cityName", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.COUNTY_ID, new FieldMetaData("countyId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.COUNTY_NAME, new FieldMetaData("countyName", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new FieldMetaData("address", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.POST_CODE, new FieldMetaData("postCode", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.IS_DEFAULT, new FieldMetaData("isDefault", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.EMAIL, new FieldMetaData("email", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.INDEX, new FieldMetaData("index", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(AddressInfo.class, metaDataMap);
  }


  public AddressInfo() {
  }

  public AddressInfo(
    int userId,
    int id,
    String receiverName,
    String mobile,
    String telCode,
    String tel,
    String telExtNumber,
    int provinceId,
    String provinceName,
    int cityId,
    String cityName,
    int countyId,
    String countyName,
    String address,
    String postCode,
    int isDefault,
    String email)
  {
    this();
    this.userId = userId;
    setUserIdIsSet(true);
    this.id = id;
    setIdIsSet(true);
    this.receiverName = receiverName;
    this.mobile = mobile;
    this.telCode = telCode;
    this.tel = tel;
    this.telExtNumber = telExtNumber;
    this.provinceId = provinceId;
    setProvinceIdIsSet(true);
    this.provinceName = provinceName;
    this.cityId = cityId;
    setCityIdIsSet(true);
    this.cityName = cityName;
    this.countyId = countyId;
    setCountyIdIsSet(true);
    this.countyName = countyName;
    this.address = address;
    this.postCode = postCode;
    this.isDefault = isDefault;
    setIsDefaultIsSet(true);
    this.email = email;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AddressInfo(AddressInfo other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.userId = other.userId;
    this.id = other.id;
    if (other.isSetReceiverName()) {
      this.receiverName = other.receiverName;
    }
    if (other.isSetMobile()) {
      this.mobile = other.mobile;
    }
    if (other.isSetTelCode()) {
      this.telCode = other.telCode;
    }
    if (other.isSetTel()) {
      this.tel = other.tel;
    }
    if (other.isSetTelExtNumber()) {
      this.telExtNumber = other.telExtNumber;
    }
    this.provinceId = other.provinceId;
    if (other.isSetProvinceName()) {
      this.provinceName = other.provinceName;
    }
    this.cityId = other.cityId;
    if (other.isSetCityName()) {
      this.cityName = other.cityName;
    }
    this.countyId = other.countyId;
    if (other.isSetCountyName()) {
      this.countyName = other.countyName;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetPostCode()) {
      this.postCode = other.postCode;
    }
    this.isDefault = other.isDefault;
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    this.index = other.index;
  }

  public AddressInfo deepCopy() {
    return new AddressInfo(this);
  }

  @Override
  public void clear() {
    setUserIdIsSet(false);
    this.userId = 0;
    setIdIsSet(false);
    this.id = 0;
    this.receiverName = null;
    this.mobile = null;
    this.telCode = null;
    this.tel = null;
    this.telExtNumber = null;
    setProvinceIdIsSet(false);
    this.provinceId = 0;
    this.provinceName = null;
    setCityIdIsSet(false);
    this.cityId = 0;
    this.cityName = null;
    setCountyIdIsSet(false);
    this.countyId = 0;
    this.countyName = null;
    this.address = null;
    this.postCode = null;
    setIsDefaultIsSet(false);
    this.isDefault = 0;
    this.email = null;
    setIndexIsSet(false);
    this.index = 0;
  }

  public int getUserId() {
    return this.userId;
  }

  public AddressInfo setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);

    return this;
  }

  public void unsetUserId() {
  __isset_bit_vector.clear(__USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been asigned a value) and false otherwise */
  public boolean isSetUserId() {
    return __isset_bit_vector.get(__USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bit_vector.set(__USERID_ISSET_ID, value);
  }

  public int getId() {
    return this.id;
  }

  public AddressInfo setId(int id) {
    this.id = id;
    setIdIsSet(true);

    return this;
  }

  public void unsetId() {
  __isset_bit_vector.clear(__ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been asigned a value) and false otherwise */
  public boolean isSetId() {
    return __isset_bit_vector.get(__ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bit_vector.set(__ID_ISSET_ID, value);
  }

  public String getReceiverName() {
    return this.receiverName;
  }

  public AddressInfo setReceiverName(String receiverName) {
    this.receiverName = receiverName;
    
    return this;
  }

  public void unsetReceiverName() {
    this.receiverName = null;
  }

  /** Returns true if field receiverName is set (has been asigned a value) and false otherwise */
  public boolean isSetReceiverName() {
    return this.receiverName != null;
  }

  public void setReceiverNameIsSet(boolean value) {
    if (!value) {
      this.receiverName = null;
    }
  }

  public String getMobile() {
    return this.mobile;
  }

  public AddressInfo setMobile(String mobile) {
    this.mobile = mobile;
    
    return this;
  }

  public void unsetMobile() {
    this.mobile = null;
  }

  /** Returns true if field mobile is set (has been asigned a value) and false otherwise */
  public boolean isSetMobile() {
    return this.mobile != null;
  }

  public void setMobileIsSet(boolean value) {
    if (!value) {
      this.mobile = null;
    }
  }

  public String getTelCode() {
    return this.telCode;
  }

  public AddressInfo setTelCode(String telCode) {
    this.telCode = telCode;
    
    return this;
  }

  public void unsetTelCode() {
    this.telCode = null;
  }

  /** Returns true if field telCode is set (has been asigned a value) and false otherwise */
  public boolean isSetTelCode() {
    return this.telCode != null;
  }

  public void setTelCodeIsSet(boolean value) {
    if (!value) {
      this.telCode = null;
    }
  }

  public String getTel() {
    return this.tel;
  }

  public AddressInfo setTel(String tel) {
    this.tel = tel;
    
    return this;
  }

  public void unsetTel() {
    this.tel = null;
  }

  /** Returns true if field tel is set (has been asigned a value) and false otherwise */
  public boolean isSetTel() {
    return this.tel != null;
  }

  public void setTelIsSet(boolean value) {
    if (!value) {
      this.tel = null;
    }
  }

  public String getTelExtNumber() {
    return this.telExtNumber;
  }

  public AddressInfo setTelExtNumber(String telExtNumber) {
    this.telExtNumber = telExtNumber;
    
    return this;
  }

  public void unsetTelExtNumber() {
    this.telExtNumber = null;
  }

  /** Returns true if field telExtNumber is set (has been asigned a value) and false otherwise */
  public boolean isSetTelExtNumber() {
    return this.telExtNumber != null;
  }

  public void setTelExtNumberIsSet(boolean value) {
    if (!value) {
      this.telExtNumber = null;
    }
  }

  public int getProvinceId() {
    return this.provinceId;
  }

  public AddressInfo setProvinceId(int provinceId) {
    this.provinceId = provinceId;
    setProvinceIdIsSet(true);

    return this;
  }

  public void unsetProvinceId() {
  __isset_bit_vector.clear(__PROVINCEID_ISSET_ID);
  }

  /** Returns true if field provinceId is set (has been asigned a value) and false otherwise */
  public boolean isSetProvinceId() {
    return __isset_bit_vector.get(__PROVINCEID_ISSET_ID);
  }

  public void setProvinceIdIsSet(boolean value) {
    __isset_bit_vector.set(__PROVINCEID_ISSET_ID, value);
  }

  public String getProvinceName() {
    return this.provinceName;
  }

  public AddressInfo setProvinceName(String provinceName) {
    this.provinceName = provinceName;
    
    return this;
  }

  public void unsetProvinceName() {
    this.provinceName = null;
  }

  /** Returns true if field provinceName is set (has been asigned a value) and false otherwise */
  public boolean isSetProvinceName() {
    return this.provinceName != null;
  }

  public void setProvinceNameIsSet(boolean value) {
    if (!value) {
      this.provinceName = null;
    }
  }

  public int getCityId() {
    return this.cityId;
  }

  public AddressInfo setCityId(int cityId) {
    this.cityId = cityId;
    setCityIdIsSet(true);

    return this;
  }

  public void unsetCityId() {
  __isset_bit_vector.clear(__CITYID_ISSET_ID);
  }

  /** Returns true if field cityId is set (has been asigned a value) and false otherwise */
  public boolean isSetCityId() {
    return __isset_bit_vector.get(__CITYID_ISSET_ID);
  }

  public void setCityIdIsSet(boolean value) {
    __isset_bit_vector.set(__CITYID_ISSET_ID, value);
  }

  public String getCityName() {
    return this.cityName;
  }

  public AddressInfo setCityName(String cityName) {
    this.cityName = cityName;
    
    return this;
  }

  public void unsetCityName() {
    this.cityName = null;
  }

  /** Returns true if field cityName is set (has been asigned a value) and false otherwise */
  public boolean isSetCityName() {
    return this.cityName != null;
  }

  public void setCityNameIsSet(boolean value) {
    if (!value) {
      this.cityName = null;
    }
  }

  public int getCountyId() {
    return this.countyId;
  }

  public AddressInfo setCountyId(int countyId) {
    this.countyId = countyId;
    setCountyIdIsSet(true);

    return this;
  }

  public void unsetCountyId() {
  __isset_bit_vector.clear(__COUNTYID_ISSET_ID);
  }

  /** Returns true if field countyId is set (has been asigned a value) and false otherwise */
  public boolean isSetCountyId() {
    return __isset_bit_vector.get(__COUNTYID_ISSET_ID);
  }

  public void setCountyIdIsSet(boolean value) {
    __isset_bit_vector.set(__COUNTYID_ISSET_ID, value);
  }

  public String getCountyName() {
    return this.countyName;
  }

  public AddressInfo setCountyName(String countyName) {
    this.countyName = countyName;
    
    return this;
  }

  public void unsetCountyName() {
    this.countyName = null;
  }

  /** Returns true if field countyName is set (has been asigned a value) and false otherwise */
  public boolean isSetCountyName() {
    return this.countyName != null;
  }

  public void setCountyNameIsSet(boolean value) {
    if (!value) {
      this.countyName = null;
    }
  }

  public String getAddress() {
    return this.address;
  }

  public AddressInfo setAddress(String address) {
    this.address = address;
    
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been asigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public String getPostCode() {
    return this.postCode;
  }

  public AddressInfo setPostCode(String postCode) {
    this.postCode = postCode;
    
    return this;
  }

  public void unsetPostCode() {
    this.postCode = null;
  }

  /** Returns true if field postCode is set (has been asigned a value) and false otherwise */
  public boolean isSetPostCode() {
    return this.postCode != null;
  }

  public void setPostCodeIsSet(boolean value) {
    if (!value) {
      this.postCode = null;
    }
  }

  public int getIsDefault() {
    return this.isDefault;
  }

  public AddressInfo setIsDefault(int isDefault) {
    this.isDefault = isDefault;
    setIsDefaultIsSet(true);

    return this;
  }

  public void unsetIsDefault() {
  __isset_bit_vector.clear(__ISDEFAULT_ISSET_ID);
  }

  /** Returns true if field isDefault is set (has been asigned a value) and false otherwise */
  public boolean isSetIsDefault() {
    return __isset_bit_vector.get(__ISDEFAULT_ISSET_ID);
  }

  public void setIsDefaultIsSet(boolean value) {
    __isset_bit_vector.set(__ISDEFAULT_ISSET_ID, value);
  }

  public String getEmail() {
    return this.email;
  }

  public AddressInfo setEmail(String email) {
    this.email = email;
    
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been asigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public int getIndex() {
    return this.index;
  }

  public AddressInfo setIndex(int index) {
    this.index = index;
    setIndexIsSet(true);

    return this;
  }

  public void unsetIndex() {
  __isset_bit_vector.clear(__INDEX_ISSET_ID);
  }

  /** Returns true if field index is set (has been asigned a value) and false otherwise */
  public boolean isSetIndex() {
    return __isset_bit_vector.get(__INDEX_ISSET_ID);
  }

  public void setIndexIsSet(boolean value) {
    __isset_bit_vector.set(__INDEX_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;
    case RECEIVER_NAME:
      if (value == null) {
        unsetReceiverName();
      } else {
        setReceiverName((String)value);
      }
      break;
    case MOBILE:
      if (value == null) {
        unsetMobile();
      } else {
        setMobile((String)value);
      }
      break;
    case TEL_CODE:
      if (value == null) {
        unsetTelCode();
      } else {
        setTelCode((String)value);
      }
      break;
    case TEL:
      if (value == null) {
        unsetTel();
      } else {
        setTel((String)value);
      }
      break;
    case TEL_EXT_NUMBER:
      if (value == null) {
        unsetTelExtNumber();
      } else {
        setTelExtNumber((String)value);
      }
      break;
    case PROVINCE_ID:
      if (value == null) {
        unsetProvinceId();
      } else {
        setProvinceId((Integer)value);
      }
      break;
    case PROVINCE_NAME:
      if (value == null) {
        unsetProvinceName();
      } else {
        setProvinceName((String)value);
      }
      break;
    case CITY_ID:
      if (value == null) {
        unsetCityId();
      } else {
        setCityId((Integer)value);
      }
      break;
    case CITY_NAME:
      if (value == null) {
        unsetCityName();
      } else {
        setCityName((String)value);
      }
      break;
    case COUNTY_ID:
      if (value == null) {
        unsetCountyId();
      } else {
        setCountyId((Integer)value);
      }
      break;
    case COUNTY_NAME:
      if (value == null) {
        unsetCountyName();
      } else {
        setCountyName((String)value);
      }
      break;
    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;
    case POST_CODE:
      if (value == null) {
        unsetPostCode();
      } else {
        setPostCode((String)value);
      }
      break;
    case IS_DEFAULT:
      if (value == null) {
        unsetIsDefault();
      } else {
        setIsDefault((Integer)value);
      }
      break;
    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;
    case INDEX:
      if (value == null) {
        unsetIndex();
      } else {
        setIndex((Integer)value);
      }
      break;
    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case USER_ID:
      return new Integer(getUserId());
    case ID:
      return new Integer(getId());
    case RECEIVER_NAME:
      return getReceiverName();
    case MOBILE:
      return getMobile();
    case TEL_CODE:
      return getTelCode();
    case TEL:
      return getTel();
    case TEL_EXT_NUMBER:
      return getTelExtNumber();
    case PROVINCE_ID:
      return new Integer(getProvinceId());
    case PROVINCE_NAME:
      return getProvinceName();
    case CITY_ID:
      return new Integer(getCityId());
    case CITY_NAME:
      return getCityName();
    case COUNTY_ID:
      return new Integer(getCountyId());
    case COUNTY_NAME:
      return getCountyName();
    case ADDRESS:
      return getAddress();
    case POST_CODE:
      return getPostCode();
    case IS_DEFAULT:
      return new Integer(getIsDefault());
    case EMAIL:
      return getEmail();
    case INDEX:
      return new Integer(getIndex());
    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case USER_ID:
      return isSetUserId();
    case ID:
      return isSetId();
    case RECEIVER_NAME:
      return isSetReceiverName();
    case MOBILE:
      return isSetMobile();
    case TEL_CODE:
      return isSetTelCode();
    case TEL:
      return isSetTel();
    case TEL_EXT_NUMBER:
      return isSetTelExtNumber();
    case PROVINCE_ID:
      return isSetProvinceId();
    case PROVINCE_NAME:
      return isSetProvinceName();
    case CITY_ID:
      return isSetCityId();
    case CITY_NAME:
      return isSetCityName();
    case COUNTY_ID:
      return isSetCountyId();
    case COUNTY_NAME:
      return isSetCountyName();
    case ADDRESS:
      return isSetAddress();
    case POST_CODE:
      return isSetPostCode();
    case IS_DEFAULT:
      return isSetIsDefault();
    case EMAIL:
      return isSetEmail();
    case INDEX:
      return isSetIndex();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AddressInfo)
      return this.equals((AddressInfo)that);
    return false;
  }

  public boolean equals(AddressInfo that) {
    if (that == null)
      return false;
    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }
    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }
    boolean this_present_receiverName = true && this.isSetReceiverName();
    boolean that_present_receiverName = true && that.isSetReceiverName();
    if (this_present_receiverName || that_present_receiverName) {
      if (!(this_present_receiverName && that_present_receiverName))
        return false;
      if (!this.receiverName.equals(that.receiverName))
        return false;
    }
    boolean this_present_mobile = true && this.isSetMobile();
    boolean that_present_mobile = true && that.isSetMobile();
    if (this_present_mobile || that_present_mobile) {
      if (!(this_present_mobile && that_present_mobile))
        return false;
      if (!this.mobile.equals(that.mobile))
        return false;
    }
    boolean this_present_telCode = true && this.isSetTelCode();
    boolean that_present_telCode = true && that.isSetTelCode();
    if (this_present_telCode || that_present_telCode) {
      if (!(this_present_telCode && that_present_telCode))
        return false;
      if (!this.telCode.equals(that.telCode))
        return false;
    }
    boolean this_present_tel = true && this.isSetTel();
    boolean that_present_tel = true && that.isSetTel();
    if (this_present_tel || that_present_tel) {
      if (!(this_present_tel && that_present_tel))
        return false;
      if (!this.tel.equals(that.tel))
        return false;
    }
    boolean this_present_telExtNumber = true && this.isSetTelExtNumber();
    boolean that_present_telExtNumber = true && that.isSetTelExtNumber();
    if (this_present_telExtNumber || that_present_telExtNumber) {
      if (!(this_present_telExtNumber && that_present_telExtNumber))
        return false;
      if (!this.telExtNumber.equals(that.telExtNumber))
        return false;
    }
    boolean this_present_provinceId = true;
    boolean that_present_provinceId = true;
    if (this_present_provinceId || that_present_provinceId) {
      if (!(this_present_provinceId && that_present_provinceId))
        return false;
      if (this.provinceId != that.provinceId)
        return false;
    }
    boolean this_present_provinceName = true && this.isSetProvinceName();
    boolean that_present_provinceName = true && that.isSetProvinceName();
    if (this_present_provinceName || that_present_provinceName) {
      if (!(this_present_provinceName && that_present_provinceName))
        return false;
      if (!this.provinceName.equals(that.provinceName))
        return false;
    }
    boolean this_present_cityId = true;
    boolean that_present_cityId = true;
    if (this_present_cityId || that_present_cityId) {
      if (!(this_present_cityId && that_present_cityId))
        return false;
      if (this.cityId != that.cityId)
        return false;
    }
    boolean this_present_cityName = true && this.isSetCityName();
    boolean that_present_cityName = true && that.isSetCityName();
    if (this_present_cityName || that_present_cityName) {
      if (!(this_present_cityName && that_present_cityName))
        return false;
      if (!this.cityName.equals(that.cityName))
        return false;
    }
    boolean this_present_countyId = true;
    boolean that_present_countyId = true;
    if (this_present_countyId || that_present_countyId) {
      if (!(this_present_countyId && that_present_countyId))
        return false;
      if (this.countyId != that.countyId)
        return false;
    }
    boolean this_present_countyName = true && this.isSetCountyName();
    boolean that_present_countyName = true && that.isSetCountyName();
    if (this_present_countyName || that_present_countyName) {
      if (!(this_present_countyName && that_present_countyName))
        return false;
      if (!this.countyName.equals(that.countyName))
        return false;
    }
    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }
    boolean this_present_postCode = true && this.isSetPostCode();
    boolean that_present_postCode = true && that.isSetPostCode();
    if (this_present_postCode || that_present_postCode) {
      if (!(this_present_postCode && that_present_postCode))
        return false;
      if (!this.postCode.equals(that.postCode))
        return false;
    }
    boolean this_present_isDefault = true;
    boolean that_present_isDefault = true;
    if (this_present_isDefault || that_present_isDefault) {
      if (!(this_present_isDefault && that_present_isDefault))
        return false;
      if (this.isDefault != that.isDefault)
        return false;
    }
    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }
    boolean this_present_index = true && this.isSetIndex();
    boolean that_present_index = true && that.isSetIndex();
    if (this_present_index || that_present_index) {
      if (!(this_present_index && that_present_index))
        return false;
      if (this.index != that.index)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();
    boolean present_userId = true;
    builder.append(present_userId);
    if (present_userId)
      builder.append(userId);
    boolean present_id = true;
    builder.append(present_id);
    if (present_id)
      builder.append(id);
    boolean present_receiverName = true && (isSetReceiverName());
    builder.append(present_receiverName);
    if (present_receiverName)
      builder.append(receiverName);
    boolean present_mobile = true && (isSetMobile());
    builder.append(present_mobile);
    if (present_mobile)
      builder.append(mobile);
    boolean present_telCode = true && (isSetTelCode());
    builder.append(present_telCode);
    if (present_telCode)
      builder.append(telCode);
    boolean present_tel = true && (isSetTel());
    builder.append(present_tel);
    if (present_tel)
      builder.append(tel);
    boolean present_telExtNumber = true && (isSetTelExtNumber());
    builder.append(present_telExtNumber);
    if (present_telExtNumber)
      builder.append(telExtNumber);
    boolean present_provinceId = true;
    builder.append(present_provinceId);
    if (present_provinceId)
      builder.append(provinceId);
    boolean present_provinceName = true && (isSetProvinceName());
    builder.append(present_provinceName);
    if (present_provinceName)
      builder.append(provinceName);
    boolean present_cityId = true;
    builder.append(present_cityId);
    if (present_cityId)
      builder.append(cityId);
    boolean present_cityName = true && (isSetCityName());
    builder.append(present_cityName);
    if (present_cityName)
      builder.append(cityName);
    boolean present_countyId = true;
    builder.append(present_countyId);
    if (present_countyId)
      builder.append(countyId);
    boolean present_countyName = true && (isSetCountyName());
    builder.append(present_countyName);
    if (present_countyName)
      builder.append(countyName);
    boolean present_address = true && (isSetAddress());
    builder.append(present_address);
    if (present_address)
      builder.append(address);
    boolean present_postCode = true && (isSetPostCode());
    builder.append(present_postCode);
    if (present_postCode)
      builder.append(postCode);
    boolean present_isDefault = true;
    builder.append(present_isDefault);
    if (present_isDefault)
      builder.append(isDefault);
    boolean present_email = true && (isSetEmail());
    builder.append(present_email);
    if (present_email)
      builder.append(email);
    boolean present_index = true && (isSetIndex());
    builder.append(present_index);
    if (present_index)
      builder.append(index);
    return builder.toHashCode();
  }

  public int compareTo(AddressInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    AddressInfo typedOther = (AddressInfo)other;

    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(typedOther.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = TBaseHelper.compareTo(this.userId, typedOther.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetId()).compareTo(typedOther.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = TBaseHelper.compareTo(this.id, typedOther.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReceiverName()).compareTo(typedOther.isSetReceiverName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReceiverName()) {
      lastComparison = TBaseHelper.compareTo(this.receiverName, typedOther.receiverName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMobile()).compareTo(typedOther.isSetMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobile()) {
      lastComparison = TBaseHelper.compareTo(this.mobile, typedOther.mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTelCode()).compareTo(typedOther.isSetTelCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelCode()) {
      lastComparison = TBaseHelper.compareTo(this.telCode, typedOther.telCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTel()).compareTo(typedOther.isSetTel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTel()) {
      lastComparison = TBaseHelper.compareTo(this.tel, typedOther.tel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTelExtNumber()).compareTo(typedOther.isSetTelExtNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelExtNumber()) {
      lastComparison = TBaseHelper.compareTo(this.telExtNumber, typedOther.telExtNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceId()).compareTo(typedOther.isSetProvinceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceId()) {
      lastComparison = TBaseHelper.compareTo(this.provinceId, typedOther.provinceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceName()).compareTo(typedOther.isSetProvinceName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceName()) {
      lastComparison = TBaseHelper.compareTo(this.provinceName, typedOther.provinceName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityId()).compareTo(typedOther.isSetCityId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityId()) {
      lastComparison = TBaseHelper.compareTo(this.cityId, typedOther.cityId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityName()).compareTo(typedOther.isSetCityName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityName()) {
      lastComparison = TBaseHelper.compareTo(this.cityName, typedOther.cityName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyId()).compareTo(typedOther.isSetCountyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyId()) {
      lastComparison = TBaseHelper.compareTo(this.countyId, typedOther.countyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyName()).compareTo(typedOther.isSetCountyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyName()) {
      lastComparison = TBaseHelper.compareTo(this.countyName, typedOther.countyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(typedOther.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = TBaseHelper.compareTo(this.address, typedOther.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPostCode()).compareTo(typedOther.isSetPostCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPostCode()) {
      lastComparison = TBaseHelper.compareTo(this.postCode, typedOther.postCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsDefault()).compareTo(typedOther.isSetIsDefault());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsDefault()) {
      lastComparison = TBaseHelper.compareTo(this.isDefault, typedOther.isDefault);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(typedOther.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = TBaseHelper.compareTo(this.email, typedOther.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIndex()).compareTo(typedOther.isSetIndex());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIndex()) {
      lastComparison = TBaseHelper.compareTo(this.index, typedOther.index);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case 1: // USER_ID
          if (field.type == TType.I32) {
            this.userId = iprot.readI32();
            setUserIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // ID
          if (field.type == TType.I32) {
            this.id = iprot.readI32();
            setIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // RECEIVER_NAME
          if (field.type == TType.STRING) {
            this.receiverName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // MOBILE
          if (field.type == TType.STRING) {
            this.mobile = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // TEL_CODE
          if (field.type == TType.STRING) {
            this.telCode = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // TEL
          if (field.type == TType.STRING) {
            this.tel = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // TEL_EXT_NUMBER
          if (field.type == TType.STRING) {
            this.telExtNumber = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // PROVINCE_ID
          if (field.type == TType.I32) {
            this.provinceId = iprot.readI32();
            setProvinceIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // PROVINCE_NAME
          if (field.type == TType.STRING) {
            this.provinceName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // CITY_ID
          if (field.type == TType.I32) {
            this.cityId = iprot.readI32();
            setCityIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // CITY_NAME
          if (field.type == TType.STRING) {
            this.cityName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // COUNTY_ID
          if (field.type == TType.I32) {
            this.countyId = iprot.readI32();
            setCountyIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // COUNTY_NAME
          if (field.type == TType.STRING) {
            this.countyName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // ADDRESS
          if (field.type == TType.STRING) {
            this.address = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // POST_CODE
          if (field.type == TType.STRING) {
            this.postCode = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // IS_DEFAULT
          if (field.type == TType.I32) {
            this.isDefault = iprot.readI32();
            setIsDefaultIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // EMAIL
          if (field.type == TType.STRING) {
            this.email = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 18: // INDEX
          if (field.type == TType.I32) {
            this.index = iprot.readI32();
            setIndexIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();
    
    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(USER_ID_FIELD_DESC);
    oprot.writeI32(this.userId);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(ID_FIELD_DESC);
    oprot.writeI32(this.id);
    oprot.writeFieldEnd();
    if (this.receiverName != null) {
      oprot.writeFieldBegin(RECEIVER_NAME_FIELD_DESC);
      oprot.writeString(this.receiverName);
      oprot.writeFieldEnd();
    }
    if (this.mobile != null) {
      oprot.writeFieldBegin(MOBILE_FIELD_DESC);
      oprot.writeString(this.mobile);
      oprot.writeFieldEnd();
    }
    if (this.telCode != null) {
      oprot.writeFieldBegin(TEL_CODE_FIELD_DESC);
      oprot.writeString(this.telCode);
      oprot.writeFieldEnd();
    }
    if (this.tel != null) {
      oprot.writeFieldBegin(TEL_FIELD_DESC);
      oprot.writeString(this.tel);
      oprot.writeFieldEnd();
    }
    if (this.telExtNumber != null) {
      oprot.writeFieldBegin(TEL_EXT_NUMBER_FIELD_DESC);
      oprot.writeString(this.telExtNumber);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(PROVINCE_ID_FIELD_DESC);
    oprot.writeI32(this.provinceId);
    oprot.writeFieldEnd();
    if (this.provinceName != null) {
      oprot.writeFieldBegin(PROVINCE_NAME_FIELD_DESC);
      oprot.writeString(this.provinceName);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(CITY_ID_FIELD_DESC);
    oprot.writeI32(this.cityId);
    oprot.writeFieldEnd();
    if (this.cityName != null) {
      oprot.writeFieldBegin(CITY_NAME_FIELD_DESC);
      oprot.writeString(this.cityName);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(COUNTY_ID_FIELD_DESC);
    oprot.writeI32(this.countyId);
    oprot.writeFieldEnd();
    if (this.countyName != null) {
      oprot.writeFieldBegin(COUNTY_NAME_FIELD_DESC);
      oprot.writeString(this.countyName);
      oprot.writeFieldEnd();
    }
    if (this.address != null) {
      oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
      oprot.writeString(this.address);
      oprot.writeFieldEnd();
    }
    if (this.postCode != null) {
      oprot.writeFieldBegin(POST_CODE_FIELD_DESC);
      oprot.writeString(this.postCode);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(IS_DEFAULT_FIELD_DESC);
    oprot.writeI32(this.isDefault);
    oprot.writeFieldEnd();
    if (this.email != null) {
      oprot.writeFieldBegin(EMAIL_FIELD_DESC);
      oprot.writeString(this.email);
      oprot.writeFieldEnd();
    }
    if (isSetIndex()) {
      oprot.writeFieldBegin(INDEX_FIELD_DESC);
      oprot.writeI32(this.index);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AddressInfo(");
    boolean first = true;
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("receiverName:");
    if (this.receiverName == null) {
      sb.append("null");
    } else {
      sb.append(this.receiverName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mobile:");
    if (this.mobile == null) {
      sb.append("null");
    } else {
      sb.append(this.mobile);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("telCode:");
    if (this.telCode == null) {
      sb.append("null");
    } else {
      sb.append(this.telCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("tel:");
    if (this.tel == null) {
      sb.append("null");
    } else {
      sb.append(this.tel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("telExtNumber:");
    if (this.telExtNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.telExtNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("provinceId:");
    sb.append(this.provinceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("provinceName:");
    if (this.provinceName == null) {
      sb.append("null");
    } else {
      sb.append(this.provinceName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cityId:");
    sb.append(this.cityId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cityName:");
    if (this.cityName == null) {
      sb.append("null");
    } else {
      sb.append(this.cityName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("countyId:");
    sb.append(this.countyId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("countyName:");
    if (this.countyName == null) {
      sb.append("null");
    } else {
      sb.append(this.countyName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("address:");
    if (this.address == null) {
      sb.append("null");
    } else {
      sb.append(this.address);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("postCode:");
    if (this.postCode == null) {
      sb.append("null");
    } else {
      sb.append(this.postCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("isDefault:");
    sb.append(this.isDefault);
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (isSetIndex()) {
      if (!first) sb.append(", ");
      sb.append("index:");
      sb.append(this.index);
      first = false;
      }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }
}
