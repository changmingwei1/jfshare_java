/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.jfshare.finagle.thrift.baseTemplate;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

// No additional import required for struct/union.

public class CalculatePostageResult implements TBase<CalculatePostageResult, CalculatePostageResult._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("CalculatePostageResult");

  private static final TField RESULT_FIELD_DESC = new TField("result", TType.STRUCT, (short)1);
  private static final TField SELLER_POSTAGE_RETURN_LIST_FIELD_DESC = new TField("sellerPostageReturnList", TType.LIST, (short)2);
  private static final TField TOTAL_POSTAGE_FIELD_DESC = new TField("totalPostage", TType.STRING, (short)3);


  public com.jfshare.finagle.thrift.result.Result result;
  public List<SellerPostageReturn> sellerPostageReturnList;
  public String totalPostage;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    RESULT((short)1, "result"),
    SELLER_POSTAGE_RETURN_LIST((short)2, "sellerPostageReturnList"),
    TOTAL_POSTAGE((short)3, "totalPostage");
  
    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
  
    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RESULT
  	return RESULT;
        case 2: // SELLER_POSTAGE_RETURN_LIST
  	return SELLER_POSTAGE_RETURN_LIST;
        case 3: // TOTAL_POSTAGE
  	return TOTAL_POSTAGE;
        default:
  	return null;
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }
  
    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }
  
    private final short _thriftId;
    private final String _fieldName;
  
    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }
  
    public short getThriftFieldId() {
      return _thriftId;
    }
  
    public String getFieldName() {
      return _fieldName;
    }
  }


  // isset id assignments

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RESULT, new FieldMetaData("result", TFieldRequirementType.DEFAULT,
      new StructMetaData(TType.STRUCT, com.jfshare.finagle.thrift.result.Result.class)));
    tmpMap.put(_Fields.SELLER_POSTAGE_RETURN_LIST, new FieldMetaData("sellerPostageReturnList", TFieldRequirementType.DEFAULT,
      new ListMetaData(TType.LIST,
                new StructMetaData(TType.STRUCT, SellerPostageReturn.class))));
    tmpMap.put(_Fields.TOTAL_POSTAGE, new FieldMetaData("totalPostage", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(CalculatePostageResult.class, metaDataMap);
  }


  public CalculatePostageResult() {
  }

  public CalculatePostageResult(
    com.jfshare.finagle.thrift.result.Result result,
    List<SellerPostageReturn> sellerPostageReturnList,
    String totalPostage)
  {
    this();
    this.result = result;
    this.sellerPostageReturnList = sellerPostageReturnList;
    this.totalPostage = totalPostage;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CalculatePostageResult(CalculatePostageResult other) {
    if (other.isSetResult()) {
      this.result = new com.jfshare.finagle.thrift.result.Result(other.result);
    }
    if (other.isSetSellerPostageReturnList()) {
      List<SellerPostageReturn> __this__sellerPostageReturnList = new ArrayList<SellerPostageReturn>();
      for (SellerPostageReturn other_element : other.sellerPostageReturnList) {
        __this__sellerPostageReturnList.add(new SellerPostageReturn(other_element));
      }
      this.sellerPostageReturnList = __this__sellerPostageReturnList;
    }
    if (other.isSetTotalPostage()) {
      this.totalPostage = other.totalPostage;
    }
  }

  public CalculatePostageResult deepCopy() {
    return new CalculatePostageResult(this);
  }

  @Override
  public void clear() {
    this.result = null;
    this.sellerPostageReturnList = null;
    this.totalPostage = null;
  }

  public com.jfshare.finagle.thrift.result.Result getResult() {
    return this.result;
  }

  public CalculatePostageResult setResult(com.jfshare.finagle.thrift.result.Result result) {
    this.result = result;
    
    return this;
  }

  public void unsetResult() {
    this.result = null;
  }

  /** Returns true if field result is set (has been asigned a value) and false otherwise */
  public boolean isSetResult() {
    return this.result != null;
  }

  public void setResultIsSet(boolean value) {
    if (!value) {
      this.result = null;
    }
  }

  public int getSellerPostageReturnListSize() {
    return (this.sellerPostageReturnList == null) ? 0 : this.sellerPostageReturnList.size();
  }

  public java.util.Iterator<SellerPostageReturn> getSellerPostageReturnListIterator() {
    return (this.sellerPostageReturnList == null) ? null : this.sellerPostageReturnList.iterator();
  }

  public void addToSellerPostageReturnList(SellerPostageReturn elem) {
    if (this.sellerPostageReturnList == null) {
      this.sellerPostageReturnList = new ArrayList<SellerPostageReturn>();
    }
    this.sellerPostageReturnList.add(elem);
  }

  public List<SellerPostageReturn> getSellerPostageReturnList() {
    return this.sellerPostageReturnList;
  }

  public CalculatePostageResult setSellerPostageReturnList(List<SellerPostageReturn> sellerPostageReturnList) {
    this.sellerPostageReturnList = sellerPostageReturnList;
    
    return this;
  }

  public void unsetSellerPostageReturnList() {
    this.sellerPostageReturnList = null;
  }

  /** Returns true if field sellerPostageReturnList is set (has been asigned a value) and false otherwise */
  public boolean isSetSellerPostageReturnList() {
    return this.sellerPostageReturnList != null;
  }

  public void setSellerPostageReturnListIsSet(boolean value) {
    if (!value) {
      this.sellerPostageReturnList = null;
    }
  }

  public String getTotalPostage() {
    return this.totalPostage;
  }

  public CalculatePostageResult setTotalPostage(String totalPostage) {
    this.totalPostage = totalPostage;
    
    return this;
  }

  public void unsetTotalPostage() {
    this.totalPostage = null;
  }

  /** Returns true if field totalPostage is set (has been asigned a value) and false otherwise */
  public boolean isSetTotalPostage() {
    return this.totalPostage != null;
  }

  public void setTotalPostageIsSet(boolean value) {
    if (!value) {
      this.totalPostage = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RESULT:
      if (value == null) {
        unsetResult();
      } else {
        setResult((com.jfshare.finagle.thrift.result.Result)value);
      }
      break;
    case SELLER_POSTAGE_RETURN_LIST:
      if (value == null) {
        unsetSellerPostageReturnList();
      } else {
        setSellerPostageReturnList((List<SellerPostageReturn>)value);
      }
      break;
    case TOTAL_POSTAGE:
      if (value == null) {
        unsetTotalPostage();
      } else {
        setTotalPostage((String)value);
      }
      break;
    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RESULT:
      return getResult();
    case SELLER_POSTAGE_RETURN_LIST:
      return getSellerPostageReturnList();
    case TOTAL_POSTAGE:
      return getTotalPostage();
    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RESULT:
      return isSetResult();
    case SELLER_POSTAGE_RETURN_LIST:
      return isSetSellerPostageReturnList();
    case TOTAL_POSTAGE:
      return isSetTotalPostage();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CalculatePostageResult)
      return this.equals((CalculatePostageResult)that);
    return false;
  }

  public boolean equals(CalculatePostageResult that) {
    if (that == null)
      return false;
    boolean this_present_result = true && this.isSetResult();
    boolean that_present_result = true && that.isSetResult();
    if (this_present_result || that_present_result) {
      if (!(this_present_result && that_present_result))
        return false;
      if (!this.result.equals(that.result))
        return false;
    }
    boolean this_present_sellerPostageReturnList = true && this.isSetSellerPostageReturnList();
    boolean that_present_sellerPostageReturnList = true && that.isSetSellerPostageReturnList();
    if (this_present_sellerPostageReturnList || that_present_sellerPostageReturnList) {
      if (!(this_present_sellerPostageReturnList && that_present_sellerPostageReturnList))
        return false;
      if (!this.sellerPostageReturnList.equals(that.sellerPostageReturnList))
        return false;
    }
    boolean this_present_totalPostage = true && this.isSetTotalPostage();
    boolean that_present_totalPostage = true && that.isSetTotalPostage();
    if (this_present_totalPostage || that_present_totalPostage) {
      if (!(this_present_totalPostage && that_present_totalPostage))
        return false;
      if (!this.totalPostage.equals(that.totalPostage))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();
    boolean present_result = true && (isSetResult());
    builder.append(present_result);
    if (present_result)
      builder.append(result);
    boolean present_sellerPostageReturnList = true && (isSetSellerPostageReturnList());
    builder.append(present_sellerPostageReturnList);
    if (present_sellerPostageReturnList)
      builder.append(sellerPostageReturnList);
    boolean present_totalPostage = true && (isSetTotalPostage());
    builder.append(present_totalPostage);
    if (present_totalPostage)
      builder.append(totalPostage);
    return builder.toHashCode();
  }

  public int compareTo(CalculatePostageResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    CalculatePostageResult typedOther = (CalculatePostageResult)other;

    lastComparison = Boolean.valueOf(isSetResult()).compareTo(typedOther.isSetResult());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult()) {
      lastComparison = TBaseHelper.compareTo(this.result, typedOther.result);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerPostageReturnList()).compareTo(typedOther.isSetSellerPostageReturnList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerPostageReturnList()) {
      lastComparison = TBaseHelper.compareTo(this.sellerPostageReturnList, typedOther.sellerPostageReturnList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalPostage()).compareTo(typedOther.isSetTotalPostage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalPostage()) {
      lastComparison = TBaseHelper.compareTo(this.totalPostage, typedOther.totalPostage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case 1: // RESULT
          if (field.type == TType.STRUCT) {
            this.result = new com.jfshare.finagle.thrift.result.Result();
            this.result.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // SELLER_POSTAGE_RETURN_LIST
          if (field.type == TType.LIST) {
            {
            TList _list28 = iprot.readListBegin();
            this.sellerPostageReturnList = new ArrayList<SellerPostageReturn>(_list28.size);
            for (int _i29 = 0; _i29 < _list28.size; ++_i29)
            {
              SellerPostageReturn _elem30;
              _elem30 = new SellerPostageReturn();
              _elem30.read(iprot);
              this.sellerPostageReturnList.add(_elem30);
            }
            iprot.readListEnd();
            }
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // TOTAL_POSTAGE
          if (field.type == TType.STRING) {
            this.totalPostage = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();
    
    oprot.writeStructBegin(STRUCT_DESC);
    if (this.result != null) {
      oprot.writeFieldBegin(RESULT_FIELD_DESC);
      this.result.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.sellerPostageReturnList != null) {
      oprot.writeFieldBegin(SELLER_POSTAGE_RETURN_LIST_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRUCT, this.sellerPostageReturnList.size()));
        for (SellerPostageReturn _iter31 : this.sellerPostageReturnList)
        {
          _iter31.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.totalPostage != null) {
      oprot.writeFieldBegin(TOTAL_POSTAGE_FIELD_DESC);
      oprot.writeString(this.totalPostage);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CalculatePostageResult(");
    boolean first = true;
    sb.append("result:");
    if (this.result == null) {
      sb.append("null");
    } else {
      sb.append(this.result);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerPostageReturnList:");
    if (this.sellerPostageReturnList == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerPostageReturnList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalPostage:");
    if (this.totalPostage == null) {
      sb.append("null");
    } else {
      sb.append(this.totalPostage);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }
}
