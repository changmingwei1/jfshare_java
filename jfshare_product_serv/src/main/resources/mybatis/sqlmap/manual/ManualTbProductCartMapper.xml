<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jfshare.product.model.mapper.manual.ManualTbProductCardMapper">

    <resultMap id="statisticsResultMap" type="com.jfshare.product.model.manual.ProductCardStatisticsModel">
        <result column="product_id" property="productId" jdbcType="VARCHAR"/>
        <result column="name" property="productName" jdbcType="VARCHAR"/>
        <result column="total" property="total" jdbcType="INTEGER"/>
        <result column="unused" property="unusedNum" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectAvailableCard" parameterType="map" resultType="com.jfshare.product.model.TbProductCard">
        select
        <include refid="com.jfshare.product.model.mapper.TbProductCardMapper.Base_Column_List"/>
        from tb_product_card
        <where>
            and product_id = #{productId} and state != 1 and transaction_id = #{transactionId}
        </where>
    </select>

    <update id="lockProductCard" parameterType="map">
		UPDATE tb_product_card
		SET transaction_id = #{transactionId}, state = 2
		WHERE state = 1 and product_id = #{productId}
		ORDER BY create_time asc
		limit #{num}
	</update>

    <update id="releaseProductCard" parameterType="map">
		update tb_product_card
		SET transaction_id = '', state = 1
		WHERE transaction_id = #{transactionId} and product_id = #{productId}
	</update>

    <select id="queryProductCardViewListCount" parameterType="map" resultType="int">
        select
        count(*)
        from tb_product_card
        <where>
            and product_id = #{productId} and seller_id = #{sellerId}
            <if test="cardNumber != null">
                and card_number like concat{'%',#{cardNumber} ,'%'}
            </if>
            <if test="state != 0">
                and state = #{state}
            </if>
        </where>
    </select>

    <select id="queryProductCardViewList" parameterType="map" resultType="com.jfshare.product.model.TbProductCard">
        select
        <include refid="com.jfshare.product.model.mapper.TbProductCardMapper.Base_Column_List"/>
        from tb_product_card
        <where>
            and product_id = #{productId} and seller_id = #{sellerId}
            <if test="cardNumber != null">
                and card_number like concat{'%',#{cardNumber} ,'%'}
            </if>
            <if test="state != 0">
                and state = #{state}
            </if>
        </where>
        order by id
        limit #{start}, #{count}
    </select>

    <select id="statisticsProductCard" parameterType="map" resultMap="statisticsResultMap">
		SELECT
          t.product_id,
          t.sku_num,
          p.name,
          t.create_time,
          COUNT(*) total,
          SUM(
            CASE
              WHEN t.state = 1
              THEN 1
              ELSE 0
            END) AS unused
        FROM
          tb_product_card t , tb_product p
          <where>
              AND t.product_id = p.id AND t.seller_id = #{sellerId}
              <if test="productName != null">
                  p.name like concat{'%',#{productName} ,'%'}
              </if>
          </where>
        GROUP BY t.product_id, t.sku_num
        ORDER BY t.product_id asc, create_time asc
        LIMIT #{start}, #{count}
	</select>

    <select id="statisticsProductCardCount" parameterType="map" resultType="int">
        SELECT
        COUNT(*)
        FROM
        tb_product_card t , tb_product p
        <where>
            AND t.product_id = p.id AND t.seller_id = #{sellerId}
            <if test="productName != null">
                p.name like concat{'%',#{productName} ,'%'}
            </if>
        </where>
    </select>
</mapper>