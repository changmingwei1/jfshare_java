/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.jfshare.finagle.thrift.product;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

// No additional import required for struct/union.

public class DayCaptchaListResult implements TBase<DayCaptchaListResult, DayCaptchaListResult._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("DayCaptchaListResult");

  private static final TField RESULT_FIELD_DESC = new TField("result", TType.STRUCT, (short)1);
  private static final TField SOLD_NUM_FIELD_DESC = new TField("soldNum", TType.I32, (short)2);
  private static final TField CHECKED_NUM_FIELD_DESC = new TField("checkedNum", TType.I32, (short)3);
  private static final TField PAGINATION_FIELD_DESC = new TField("pagination", TType.STRUCT, (short)4);
  private static final TField DAY_ALD_CAPTCHA_COUNT_LIST_FIELD_DESC = new TField("dayAldCaptchaCountList", TType.LIST, (short)5);


  public com.jfshare.finagle.thrift.result.Result result;
  public int soldNum;
  public int checkedNum;
  public com.jfshare.finagle.thrift.pagination.Pagination pagination;
  public List<DayAldCaptchaCount> dayAldCaptchaCountList;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    RESULT((short)1, "result"),
    SOLD_NUM((short)2, "soldNum"),
    CHECKED_NUM((short)3, "checkedNum"),
    PAGINATION((short)4, "pagination"),
    DAY_ALD_CAPTCHA_COUNT_LIST((short)5, "dayAldCaptchaCountList");
  
    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
  
    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RESULT
  	return RESULT;
        case 2: // SOLD_NUM
  	return SOLD_NUM;
        case 3: // CHECKED_NUM
  	return CHECKED_NUM;
        case 4: // PAGINATION
  	return PAGINATION;
        case 5: // DAY_ALD_CAPTCHA_COUNT_LIST
  	return DAY_ALD_CAPTCHA_COUNT_LIST;
        default:
  	return null;
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }
  
    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }
  
    private final short _thriftId;
    private final String _fieldName;
  
    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }
  
    public short getThriftFieldId() {
      return _thriftId;
    }
  
    public String getFieldName() {
      return _fieldName;
    }
  }


  // isset id assignments
  private static final int __SOLDNUM_ISSET_ID = 0;
  private static final int __CHECKEDNUM_ISSET_ID = 1;
  private BitSet __isset_bit_vector = new BitSet(2);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RESULT, new FieldMetaData("result", TFieldRequirementType.DEFAULT,
      new StructMetaData(TType.STRUCT, com.jfshare.finagle.thrift.result.Result.class)));
    tmpMap.put(_Fields.SOLD_NUM, new FieldMetaData("soldNum", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.CHECKED_NUM, new FieldMetaData("checkedNum", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.PAGINATION, new FieldMetaData("pagination", TFieldRequirementType.DEFAULT,
      new StructMetaData(TType.STRUCT, com.jfshare.finagle.thrift.pagination.Pagination.class)));
    tmpMap.put(_Fields.DAY_ALD_CAPTCHA_COUNT_LIST, new FieldMetaData("dayAldCaptchaCountList", TFieldRequirementType.DEFAULT,
      new ListMetaData(TType.LIST,
                new StructMetaData(TType.STRUCT, DayAldCaptchaCount.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(DayCaptchaListResult.class, metaDataMap);
  }


  public DayCaptchaListResult() {
  }

  public DayCaptchaListResult(
    com.jfshare.finagle.thrift.result.Result result,
    int soldNum,
    int checkedNum,
    com.jfshare.finagle.thrift.pagination.Pagination pagination,
    List<DayAldCaptchaCount> dayAldCaptchaCountList)
  {
    this();
    this.result = result;
    this.soldNum = soldNum;
    setSoldNumIsSet(true);
    this.checkedNum = checkedNum;
    setCheckedNumIsSet(true);
    this.pagination = pagination;
    this.dayAldCaptchaCountList = dayAldCaptchaCountList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public DayCaptchaListResult(DayCaptchaListResult other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    if (other.isSetResult()) {
      this.result = new com.jfshare.finagle.thrift.result.Result(other.result);
    }
    this.soldNum = other.soldNum;
    this.checkedNum = other.checkedNum;
    if (other.isSetPagination()) {
      this.pagination = new com.jfshare.finagle.thrift.pagination.Pagination(other.pagination);
    }
    if (other.isSetDayAldCaptchaCountList()) {
      List<DayAldCaptchaCount> __this__dayAldCaptchaCountList = new ArrayList<DayAldCaptchaCount>();
      for (DayAldCaptchaCount other_element : other.dayAldCaptchaCountList) {
        __this__dayAldCaptchaCountList.add(new DayAldCaptchaCount(other_element));
      }
      this.dayAldCaptchaCountList = __this__dayAldCaptchaCountList;
    }
  }

  public DayCaptchaListResult deepCopy() {
    return new DayCaptchaListResult(this);
  }

  @Override
  public void clear() {
    this.result = null;
    setSoldNumIsSet(false);
    this.soldNum = 0;
    setCheckedNumIsSet(false);
    this.checkedNum = 0;
    this.pagination = null;
    this.dayAldCaptchaCountList = null;
  }

  public com.jfshare.finagle.thrift.result.Result getResult() {
    return this.result;
  }

  public DayCaptchaListResult setResult(com.jfshare.finagle.thrift.result.Result result) {
    this.result = result;
    
    return this;
  }

  public void unsetResult() {
    this.result = null;
  }

  /** Returns true if field result is set (has been asigned a value) and false otherwise */
  public boolean isSetResult() {
    return this.result != null;
  }

  public void setResultIsSet(boolean value) {
    if (!value) {
      this.result = null;
    }
  }

  public int getSoldNum() {
    return this.soldNum;
  }

  public DayCaptchaListResult setSoldNum(int soldNum) {
    this.soldNum = soldNum;
    setSoldNumIsSet(true);

    return this;
  }

  public void unsetSoldNum() {
  __isset_bit_vector.clear(__SOLDNUM_ISSET_ID);
  }

  /** Returns true if field soldNum is set (has been asigned a value) and false otherwise */
  public boolean isSetSoldNum() {
    return __isset_bit_vector.get(__SOLDNUM_ISSET_ID);
  }

  public void setSoldNumIsSet(boolean value) {
    __isset_bit_vector.set(__SOLDNUM_ISSET_ID, value);
  }

  public int getCheckedNum() {
    return this.checkedNum;
  }

  public DayCaptchaListResult setCheckedNum(int checkedNum) {
    this.checkedNum = checkedNum;
    setCheckedNumIsSet(true);

    return this;
  }

  public void unsetCheckedNum() {
  __isset_bit_vector.clear(__CHECKEDNUM_ISSET_ID);
  }

  /** Returns true if field checkedNum is set (has been asigned a value) and false otherwise */
  public boolean isSetCheckedNum() {
    return __isset_bit_vector.get(__CHECKEDNUM_ISSET_ID);
  }

  public void setCheckedNumIsSet(boolean value) {
    __isset_bit_vector.set(__CHECKEDNUM_ISSET_ID, value);
  }

  public com.jfshare.finagle.thrift.pagination.Pagination getPagination() {
    return this.pagination;
  }

  public DayCaptchaListResult setPagination(com.jfshare.finagle.thrift.pagination.Pagination pagination) {
    this.pagination = pagination;
    
    return this;
  }

  public void unsetPagination() {
    this.pagination = null;
  }

  /** Returns true if field pagination is set (has been asigned a value) and false otherwise */
  public boolean isSetPagination() {
    return this.pagination != null;
  }

  public void setPaginationIsSet(boolean value) {
    if (!value) {
      this.pagination = null;
    }
  }

  public int getDayAldCaptchaCountListSize() {
    return (this.dayAldCaptchaCountList == null) ? 0 : this.dayAldCaptchaCountList.size();
  }

  public java.util.Iterator<DayAldCaptchaCount> getDayAldCaptchaCountListIterator() {
    return (this.dayAldCaptchaCountList == null) ? null : this.dayAldCaptchaCountList.iterator();
  }

  public void addToDayAldCaptchaCountList(DayAldCaptchaCount elem) {
    if (this.dayAldCaptchaCountList == null) {
      this.dayAldCaptchaCountList = new ArrayList<DayAldCaptchaCount>();
    }
    this.dayAldCaptchaCountList.add(elem);
  }

  public List<DayAldCaptchaCount> getDayAldCaptchaCountList() {
    return this.dayAldCaptchaCountList;
  }

  public DayCaptchaListResult setDayAldCaptchaCountList(List<DayAldCaptchaCount> dayAldCaptchaCountList) {
    this.dayAldCaptchaCountList = dayAldCaptchaCountList;
    
    return this;
  }

  public void unsetDayAldCaptchaCountList() {
    this.dayAldCaptchaCountList = null;
  }

  /** Returns true if field dayAldCaptchaCountList is set (has been asigned a value) and false otherwise */
  public boolean isSetDayAldCaptchaCountList() {
    return this.dayAldCaptchaCountList != null;
  }

  public void setDayAldCaptchaCountListIsSet(boolean value) {
    if (!value) {
      this.dayAldCaptchaCountList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RESULT:
      if (value == null) {
        unsetResult();
      } else {
        setResult((com.jfshare.finagle.thrift.result.Result)value);
      }
      break;
    case SOLD_NUM:
      if (value == null) {
        unsetSoldNum();
      } else {
        setSoldNum((Integer)value);
      }
      break;
    case CHECKED_NUM:
      if (value == null) {
        unsetCheckedNum();
      } else {
        setCheckedNum((Integer)value);
      }
      break;
    case PAGINATION:
      if (value == null) {
        unsetPagination();
      } else {
        setPagination((com.jfshare.finagle.thrift.pagination.Pagination)value);
      }
      break;
    case DAY_ALD_CAPTCHA_COUNT_LIST:
      if (value == null) {
        unsetDayAldCaptchaCountList();
      } else {
        setDayAldCaptchaCountList((List<DayAldCaptchaCount>)value);
      }
      break;
    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RESULT:
      return getResult();
    case SOLD_NUM:
      return new Integer(getSoldNum());
    case CHECKED_NUM:
      return new Integer(getCheckedNum());
    case PAGINATION:
      return getPagination();
    case DAY_ALD_CAPTCHA_COUNT_LIST:
      return getDayAldCaptchaCountList();
    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RESULT:
      return isSetResult();
    case SOLD_NUM:
      return isSetSoldNum();
    case CHECKED_NUM:
      return isSetCheckedNum();
    case PAGINATION:
      return isSetPagination();
    case DAY_ALD_CAPTCHA_COUNT_LIST:
      return isSetDayAldCaptchaCountList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof DayCaptchaListResult)
      return this.equals((DayCaptchaListResult)that);
    return false;
  }

  public boolean equals(DayCaptchaListResult that) {
    if (that == null)
      return false;
    boolean this_present_result = true && this.isSetResult();
    boolean that_present_result = true && that.isSetResult();
    if (this_present_result || that_present_result) {
      if (!(this_present_result && that_present_result))
        return false;
      if (!this.result.equals(that.result))
        return false;
    }
    boolean this_present_soldNum = true;
    boolean that_present_soldNum = true;
    if (this_present_soldNum || that_present_soldNum) {
      if (!(this_present_soldNum && that_present_soldNum))
        return false;
      if (this.soldNum != that.soldNum)
        return false;
    }
    boolean this_present_checkedNum = true;
    boolean that_present_checkedNum = true;
    if (this_present_checkedNum || that_present_checkedNum) {
      if (!(this_present_checkedNum && that_present_checkedNum))
        return false;
      if (this.checkedNum != that.checkedNum)
        return false;
    }
    boolean this_present_pagination = true && this.isSetPagination();
    boolean that_present_pagination = true && that.isSetPagination();
    if (this_present_pagination || that_present_pagination) {
      if (!(this_present_pagination && that_present_pagination))
        return false;
      if (!this.pagination.equals(that.pagination))
        return false;
    }
    boolean this_present_dayAldCaptchaCountList = true && this.isSetDayAldCaptchaCountList();
    boolean that_present_dayAldCaptchaCountList = true && that.isSetDayAldCaptchaCountList();
    if (this_present_dayAldCaptchaCountList || that_present_dayAldCaptchaCountList) {
      if (!(this_present_dayAldCaptchaCountList && that_present_dayAldCaptchaCountList))
        return false;
      if (!this.dayAldCaptchaCountList.equals(that.dayAldCaptchaCountList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();
    boolean present_result = true && (isSetResult());
    builder.append(present_result);
    if (present_result)
      builder.append(result);
    boolean present_soldNum = true;
    builder.append(present_soldNum);
    if (present_soldNum)
      builder.append(soldNum);
    boolean present_checkedNum = true;
    builder.append(present_checkedNum);
    if (present_checkedNum)
      builder.append(checkedNum);
    boolean present_pagination = true && (isSetPagination());
    builder.append(present_pagination);
    if (present_pagination)
      builder.append(pagination);
    boolean present_dayAldCaptchaCountList = true && (isSetDayAldCaptchaCountList());
    builder.append(present_dayAldCaptchaCountList);
    if (present_dayAldCaptchaCountList)
      builder.append(dayAldCaptchaCountList);
    return builder.toHashCode();
  }

  public int compareTo(DayCaptchaListResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    DayCaptchaListResult typedOther = (DayCaptchaListResult)other;

    lastComparison = Boolean.valueOf(isSetResult()).compareTo(typedOther.isSetResult());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult()) {
      lastComparison = TBaseHelper.compareTo(this.result, typedOther.result);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSoldNum()).compareTo(typedOther.isSetSoldNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSoldNum()) {
      lastComparison = TBaseHelper.compareTo(this.soldNum, typedOther.soldNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCheckedNum()).compareTo(typedOther.isSetCheckedNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCheckedNum()) {
      lastComparison = TBaseHelper.compareTo(this.checkedNum, typedOther.checkedNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPagination()).compareTo(typedOther.isSetPagination());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPagination()) {
      lastComparison = TBaseHelper.compareTo(this.pagination, typedOther.pagination);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDayAldCaptchaCountList()).compareTo(typedOther.isSetDayAldCaptchaCountList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDayAldCaptchaCountList()) {
      lastComparison = TBaseHelper.compareTo(this.dayAldCaptchaCountList, typedOther.dayAldCaptchaCountList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case 1: // RESULT
          if (field.type == TType.STRUCT) {
            this.result = new com.jfshare.finagle.thrift.result.Result();
            this.result.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // SOLD_NUM
          if (field.type == TType.I32) {
            this.soldNum = iprot.readI32();
            setSoldNumIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // CHECKED_NUM
          if (field.type == TType.I32) {
            this.checkedNum = iprot.readI32();
            setCheckedNumIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // PAGINATION
          if (field.type == TType.STRUCT) {
            this.pagination = new com.jfshare.finagle.thrift.pagination.Pagination();
            this.pagination.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // DAY_ALD_CAPTCHA_COUNT_LIST
          if (field.type == TType.LIST) {
            {
            TList _list44 = iprot.readListBegin();
            this.dayAldCaptchaCountList = new ArrayList<DayAldCaptchaCount>(_list44.size);
            for (int _i45 = 0; _i45 < _list44.size; ++_i45)
            {
              DayAldCaptchaCount _elem46;
              _elem46 = new DayAldCaptchaCount();
              _elem46.read(iprot);
              this.dayAldCaptchaCountList.add(_elem46);
            }
            iprot.readListEnd();
            }
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();
    
    oprot.writeStructBegin(STRUCT_DESC);
    if (this.result != null) {
      oprot.writeFieldBegin(RESULT_FIELD_DESC);
      this.result.write(oprot);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(SOLD_NUM_FIELD_DESC);
    oprot.writeI32(this.soldNum);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CHECKED_NUM_FIELD_DESC);
    oprot.writeI32(this.checkedNum);
    oprot.writeFieldEnd();
    if (this.pagination != null) {
      oprot.writeFieldBegin(PAGINATION_FIELD_DESC);
      this.pagination.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.dayAldCaptchaCountList != null) {
      oprot.writeFieldBegin(DAY_ALD_CAPTCHA_COUNT_LIST_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRUCT, this.dayAldCaptchaCountList.size()));
        for (DayAldCaptchaCount _iter47 : this.dayAldCaptchaCountList)
        {
          _iter47.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("DayCaptchaListResult(");
    boolean first = true;
    sb.append("result:");
    if (this.result == null) {
      sb.append("null");
    } else {
      sb.append(this.result);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("soldNum:");
    sb.append(this.soldNum);
    first = false;
    if (!first) sb.append(", ");
    sb.append("checkedNum:");
    sb.append(this.checkedNum);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pagination:");
    if (this.pagination == null) {
      sb.append("null");
    } else {
      sb.append(this.pagination);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dayAldCaptchaCountList:");
    if (this.dayAldCaptchaCountList == null) {
      sb.append("null");
    } else {
      sb.append(this.dayAldCaptchaCountList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }
}
