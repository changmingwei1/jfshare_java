/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.jfshare.finagle.thrift.order;

import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.thrift.*;
import org.apache.thrift.meta_data.FieldMetaData;
import org.apache.thrift.meta_data.FieldValueMetaData;
import org.apache.thrift.meta_data.ListMetaData;
import org.apache.thrift.protocol.*;

import java.util.*;

// No additional import required for struct/union.

public class OrderQueryConditions implements TBase<OrderQueryConditions, OrderQueryConditions._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("OrderQueryConditions");

  private static final TField SELLER_ID_FIELD_DESC = new TField("sellerId", TType.I32, (short)1);
  private static final TField PRODUCT_NAME_FIELD_DESC = new TField("productName", TType.STRING, (short)2);
  private static final TField ORDER_ID_FIELD_DESC = new TField("orderId", TType.STRING, (short)3);
  private static final TField ORDER_STATE_FIELD_DESC = new TField("orderState", TType.I32, (short)4);
  private static final TField USER_NAME_FIELD_DESC = new TField("userName", TType.STRING, (short)5);
  private static final TField MOBILE_FIELD_DESC = new TField("mobile", TType.STRING, (short)6);
  private static final TField ORDER_TYPE_FIELD_DESC = new TField("orderType", TType.I32, (short)7);
  private static final TField PROVINCE_ID_FIELD_DESC = new TField("provinceId", TType.I32, (short)8);
  private static final TField CITY_ID_FIELD_DESC = new TField("cityId", TType.I32, (short)9);
  private static final TField COUNTY_ID_FIELD_DESC = new TField("countyId", TType.I32, (short)10);
  private static final TField START_TIME_FIELD_DESC = new TField("startTime", TType.STRING, (short)11);
  private static final TField END_TIME_FIELD_DESC = new TField("endTime", TType.STRING, (short)12);
  private static final TField COUNT_FIELD_DESC = new TField("count", TType.I32, (short)13);
  private static final TField CUR_PAGE_FIELD_DESC = new TField("curPage", TType.I32, (short)14);
  private static final TField EXPRESS_NO_FIELD_DESC = new TField("expressNo", TType.STRING, (short)15);
  private static final TField EXPRESS_ID_FIELD_DESC = new TField("expressId", TType.I32, (short)16);
  private static final TField NICK_NAME_FIELD_DESC = new TField("nickName", TType.STRING, (short)17);
  private static final TField PRODUCT_ID_FIELD_DESC = new TField("productId", TType.STRING, (short)18);
  private static final TField USER_ID_FIELD_DESC = new TField("userId", TType.I32, (short)19);
  private static final TField SORT_RULE_FIELD_DESC = new TField("sortRule", TType.I32, (short)20);
  private static final TField PAY_TIME_START_FIELD_DESC = new TField("payTimeStart", TType.STRING, (short)21);
  private static final TField PAY_TIME_END_FIELD_DESC = new TField("payTimeEnd", TType.STRING, (short)22);
  private static final TField DELIVER_TIME_START_FIELD_DESC = new TField("deliverTimeStart", TType.STRING, (short)23);
  private static final TField DELIVER_TIME_END_FIELD_DESC = new TField("deliverTimeEnd", TType.STRING, (short)24);
  private static final TField SUCCESS_TIME_START_FIELD_DESC = new TField("successTimeStart", TType.STRING, (short)25);
  private static final TField SUCCESS_TIME_END_FIELD_DESC = new TField("successTimeEnd", TType.STRING, (short)26);
  private static final TField LAST_UPDATE_TIME_START_FIELD_DESC = new TField("lastUpdateTimeStart", TType.STRING, (short)27);
  private static final TField LAST_UPDATE_TIME_END_FIELD_DESC = new TField("lastUpdateTimeEnd", TType.STRING, (short)28);
  private static final TField ORDER_TAG_FIELD_DESC = new TField("orderTag", TType.I32, (short)29);
  private static final TField DELIVER_LIMIT_TIME_STATE_FIELD_DESC = new TField("deliverLimitTimeState", TType.I32, (short)30);
  private static final TField IS_HAVE_BUYER_COMMENT_FIELD_DESC = new TField("isHaveBuyerComment", TType.I32, (short)31);
  private static final TField IS_HAVE_SELLER_COMMENT_FIELD_DESC = new TField("isHaveSellerComment", TType.I32, (short)32);
  private static final TField DOWN_TYPE_FIELD_DESC = new TField("downType", TType.I32, (short)33);
  private static final TField ORDER_IDS_FIELD_DESC = new TField("orderIds", TType.LIST, (short)34);


  public int sellerId;
  public String productName;
  public String orderId;
  public int orderState;
  public String userName;
  public String mobile;
  public int orderType;
  public int provinceId;
  public int cityId;
  public int countyId;
  public String startTime;
  public String endTime;
  public int count;
  public int curPage;
  public String expressNo;
  public int expressId;
  public String nickName;
  public String productId;
  public int userId;
  public int sortRule;
  public String payTimeStart;
  public String payTimeEnd;
  public String deliverTimeStart;
  public String deliverTimeEnd;
  public String successTimeStart;
  public String successTimeEnd;
  public String lastUpdateTimeStart;
  public String lastUpdateTimeEnd;
  public int orderTag;
  public int deliverLimitTimeState;
  public int isHaveBuyerComment;
  public int isHaveSellerComment;
  public int downType;
  public List<String> orderIds;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    SELLER_ID((short)1, "sellerId"),
    PRODUCT_NAME((short)2, "productName"),
    ORDER_ID((short)3, "orderId"),
    ORDER_STATE((short)4, "orderState"),
    USER_NAME((short)5, "userName"),
    MOBILE((short)6, "mobile"),
    ORDER_TYPE((short)7, "orderType"),
    PROVINCE_ID((short)8, "provinceId"),
    CITY_ID((short)9, "cityId"),
    COUNTY_ID((short)10, "countyId"),
    START_TIME((short)11, "startTime"),
    END_TIME((short)12, "endTime"),
    COUNT((short)13, "count"),
    CUR_PAGE((short)14, "curPage"),
    EXPRESS_NO((short)15, "expressNo"),
    EXPRESS_ID((short)16, "expressId"),
    NICK_NAME((short)17, "nickName"),
    PRODUCT_ID((short)18, "productId"),
    USER_ID((short)19, "userId"),
    SORT_RULE((short)20, "sortRule"),
    PAY_TIME_START((short)21, "payTimeStart"),
    PAY_TIME_END((short)22, "payTimeEnd"),
    DELIVER_TIME_START((short)23, "deliverTimeStart"),
    DELIVER_TIME_END((short)24, "deliverTimeEnd"),
    SUCCESS_TIME_START((short)25, "successTimeStart"),
    SUCCESS_TIME_END((short)26, "successTimeEnd"),
    LAST_UPDATE_TIME_START((short)27, "lastUpdateTimeStart"),
    LAST_UPDATE_TIME_END((short)28, "lastUpdateTimeEnd"),
    ORDER_TAG((short)29, "orderTag"),
    DELIVER_LIMIT_TIME_STATE((short)30, "deliverLimitTimeState"),
    IS_HAVE_BUYER_COMMENT((short)31, "isHaveBuyerComment"),
    IS_HAVE_SELLER_COMMENT((short)32, "isHaveSellerComment"),
    DOWN_TYPE((short)33, "downType"),
    ORDER_IDS((short)34, "orderIds");
  
    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
  
    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SELLER_ID
  	return SELLER_ID;
        case 2: // PRODUCT_NAME
  	return PRODUCT_NAME;
        case 3: // ORDER_ID
  	return ORDER_ID;
        case 4: // ORDER_STATE
  	return ORDER_STATE;
        case 5: // USER_NAME
  	return USER_NAME;
        case 6: // MOBILE
  	return MOBILE;
        case 7: // ORDER_TYPE
  	return ORDER_TYPE;
        case 8: // PROVINCE_ID
  	return PROVINCE_ID;
        case 9: // CITY_ID
  	return CITY_ID;
        case 10: // COUNTY_ID
  	return COUNTY_ID;
        case 11: // START_TIME
  	return START_TIME;
        case 12: // END_TIME
  	return END_TIME;
        case 13: // COUNT
  	return COUNT;
        case 14: // CUR_PAGE
  	return CUR_PAGE;
        case 15: // EXPRESS_NO
  	return EXPRESS_NO;
        case 16: // EXPRESS_ID
  	return EXPRESS_ID;
        case 17: // NICK_NAME
  	return NICK_NAME;
        case 18: // PRODUCT_ID
  	return PRODUCT_ID;
        case 19: // USER_ID
  	return USER_ID;
        case 20: // SORT_RULE
  	return SORT_RULE;
        case 21: // PAY_TIME_START
  	return PAY_TIME_START;
        case 22: // PAY_TIME_END
  	return PAY_TIME_END;
        case 23: // DELIVER_TIME_START
  	return DELIVER_TIME_START;
        case 24: // DELIVER_TIME_END
  	return DELIVER_TIME_END;
        case 25: // SUCCESS_TIME_START
  	return SUCCESS_TIME_START;
        case 26: // SUCCESS_TIME_END
  	return SUCCESS_TIME_END;
        case 27: // LAST_UPDATE_TIME_START
  	return LAST_UPDATE_TIME_START;
        case 28: // LAST_UPDATE_TIME_END
  	return LAST_UPDATE_TIME_END;
        case 29: // ORDER_TAG
  	return ORDER_TAG;
        case 30: // DELIVER_LIMIT_TIME_STATE
  	return DELIVER_LIMIT_TIME_STATE;
        case 31: // IS_HAVE_BUYER_COMMENT
  	return IS_HAVE_BUYER_COMMENT;
        case 32: // IS_HAVE_SELLER_COMMENT
  	return IS_HAVE_SELLER_COMMENT;
        case 33: // DOWN_TYPE
  	return DOWN_TYPE;
        case 34: // ORDER_IDS
  	return ORDER_IDS;
        default:
  	return null;
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }
  
    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }
  
    private final short _thriftId;
    private final String _fieldName;
  
    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }
  
    public short getThriftFieldId() {
      return _thriftId;
    }
  
    public String getFieldName() {
      return _fieldName;
    }
  }


  // isset id assignments
  private static final int __SELLERID_ISSET_ID = 0;
  private static final int __ORDERSTATE_ISSET_ID = 1;
  private static final int __ORDERTYPE_ISSET_ID = 2;
  private static final int __PROVINCEID_ISSET_ID = 3;
  private static final int __CITYID_ISSET_ID = 4;
  private static final int __COUNTYID_ISSET_ID = 5;
  private static final int __COUNT_ISSET_ID = 6;
  private static final int __CURPAGE_ISSET_ID = 7;
  private static final int __EXPRESSID_ISSET_ID = 8;
  private static final int __USERID_ISSET_ID = 9;
  private static final int __SORTRULE_ISSET_ID = 10;
  private static final int __ORDERTAG_ISSET_ID = 11;
  private static final int __DELIVERLIMITTIMESTATE_ISSET_ID = 12;
  private static final int __ISHAVEBUYERCOMMENT_ISSET_ID = 13;
  private static final int __ISHAVESELLERCOMMENT_ISSET_ID = 14;
  private static final int __DOWNTYPE_ISSET_ID = 15;
  private BitSet __isset_bit_vector = new BitSet(16);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SELLER_ID, new FieldMetaData("sellerId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.PRODUCT_NAME, new FieldMetaData("productName", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.ORDER_ID, new FieldMetaData("orderId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.ORDER_STATE, new FieldMetaData("orderState", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.USER_NAME, new FieldMetaData("userName", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.MOBILE, new FieldMetaData("mobile", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.ORDER_TYPE, new FieldMetaData("orderType", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.PROVINCE_ID, new FieldMetaData("provinceId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.CITY_ID, new FieldMetaData("cityId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.COUNTY_ID, new FieldMetaData("countyId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.START_TIME, new FieldMetaData("startTime", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.END_TIME, new FieldMetaData("endTime", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.COUNT, new FieldMetaData("count", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.CUR_PAGE, new FieldMetaData("curPage", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.EXPRESS_NO, new FieldMetaData("expressNo", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXPRESS_ID, new FieldMetaData("expressId", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.NICK_NAME, new FieldMetaData("nickName", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_ID, new FieldMetaData("productId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.USER_ID, new FieldMetaData("userId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.SORT_RULE, new FieldMetaData("sortRule", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.PAY_TIME_START, new FieldMetaData("payTimeStart", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.PAY_TIME_END, new FieldMetaData("payTimeEnd", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.DELIVER_TIME_START, new FieldMetaData("deliverTimeStart", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.DELIVER_TIME_END, new FieldMetaData("deliverTimeEnd", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SUCCESS_TIME_START, new FieldMetaData("successTimeStart", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.SUCCESS_TIME_END, new FieldMetaData("successTimeEnd", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.LAST_UPDATE_TIME_START, new FieldMetaData("lastUpdateTimeStart", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.LAST_UPDATE_TIME_END, new FieldMetaData("lastUpdateTimeEnd", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.ORDER_TAG, new FieldMetaData("orderTag", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.DELIVER_LIMIT_TIME_STATE, new FieldMetaData("deliverLimitTimeState", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.IS_HAVE_BUYER_COMMENT, new FieldMetaData("isHaveBuyerComment", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.IS_HAVE_SELLER_COMMENT, new FieldMetaData("isHaveSellerComment", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.DOWN_TYPE, new FieldMetaData("downType", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.ORDER_IDS, new FieldMetaData("orderIds", TFieldRequirementType.OPTIONAL,
      new ListMetaData(TType.LIST,
                new FieldValueMetaData(TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(OrderQueryConditions.class, metaDataMap);
  }


  public OrderQueryConditions() {
  }

  public OrderQueryConditions(
    int sellerId,
    String productName,
    String orderId,
    int orderState,
    String userName,
    String mobile,
    int orderType,
    int provinceId,
    int cityId,
    int countyId,
    String startTime,
    String endTime,
    int count,
    int curPage,
    String productId,
    int userId)
  {
    this();
    this.sellerId = sellerId;
    setSellerIdIsSet(true);
    this.productName = productName;
    this.orderId = orderId;
    this.orderState = orderState;
    setOrderStateIsSet(true);
    this.userName = userName;
    this.mobile = mobile;
    this.orderType = orderType;
    setOrderTypeIsSet(true);
    this.provinceId = provinceId;
    setProvinceIdIsSet(true);
    this.cityId = cityId;
    setCityIdIsSet(true);
    this.countyId = countyId;
    setCountyIdIsSet(true);
    this.startTime = startTime;
    this.endTime = endTime;
    this.count = count;
    setCountIsSet(true);
    this.curPage = curPage;
    setCurPageIsSet(true);
    this.productId = productId;
    this.userId = userId;
    setUserIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrderQueryConditions(OrderQueryConditions other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.sellerId = other.sellerId;
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    this.orderState = other.orderState;
    if (other.isSetUserName()) {
      this.userName = other.userName;
    }
    if (other.isSetMobile()) {
      this.mobile = other.mobile;
    }
    this.orderType = other.orderType;
    this.provinceId = other.provinceId;
    this.cityId = other.cityId;
    this.countyId = other.countyId;
    if (other.isSetStartTime()) {
      this.startTime = other.startTime;
    }
    if (other.isSetEndTime()) {
      this.endTime = other.endTime;
    }
    this.count = other.count;
    this.curPage = other.curPage;
    if (other.isSetExpressNo()) {
      this.expressNo = other.expressNo;
    }
    this.expressId = other.expressId;
    if (other.isSetNickName()) {
      this.nickName = other.nickName;
    }
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    this.userId = other.userId;
    this.sortRule = other.sortRule;
    if (other.isSetPayTimeStart()) {
      this.payTimeStart = other.payTimeStart;
    }
    if (other.isSetPayTimeEnd()) {
      this.payTimeEnd = other.payTimeEnd;
    }
    if (other.isSetDeliverTimeStart()) {
      this.deliverTimeStart = other.deliverTimeStart;
    }
    if (other.isSetDeliverTimeEnd()) {
      this.deliverTimeEnd = other.deliverTimeEnd;
    }
    if (other.isSetSuccessTimeStart()) {
      this.successTimeStart = other.successTimeStart;
    }
    if (other.isSetSuccessTimeEnd()) {
      this.successTimeEnd = other.successTimeEnd;
    }
    if (other.isSetLastUpdateTimeStart()) {
      this.lastUpdateTimeStart = other.lastUpdateTimeStart;
    }
    if (other.isSetLastUpdateTimeEnd()) {
      this.lastUpdateTimeEnd = other.lastUpdateTimeEnd;
    }
    this.orderTag = other.orderTag;
    this.deliverLimitTimeState = other.deliverLimitTimeState;
    this.isHaveBuyerComment = other.isHaveBuyerComment;
    this.isHaveSellerComment = other.isHaveSellerComment;
    this.downType = other.downType;
    if (other.isSetOrderIds()) {
      List<String> __this__orderIds = new ArrayList<String>();
      for (String other_element : other.orderIds) {
        __this__orderIds.add(other_element);
      }
      this.orderIds = __this__orderIds;
    }
  }

  public OrderQueryConditions deepCopy() {
    return new OrderQueryConditions(this);
  }

  @Override
  public void clear() {
    setSellerIdIsSet(false);
    this.sellerId = 0;
    this.productName = null;
    this.orderId = null;
    setOrderStateIsSet(false);
    this.orderState = 0;
    this.userName = null;
    this.mobile = null;
    setOrderTypeIsSet(false);
    this.orderType = 0;
    setProvinceIdIsSet(false);
    this.provinceId = 0;
    setCityIdIsSet(false);
    this.cityId = 0;
    setCountyIdIsSet(false);
    this.countyId = 0;
    this.startTime = null;
    this.endTime = null;
    setCountIsSet(false);
    this.count = 0;
    setCurPageIsSet(false);
    this.curPage = 0;
    this.expressNo = null;
    setExpressIdIsSet(false);
    this.expressId = 0;
    this.nickName = null;
    this.productId = null;
    setUserIdIsSet(false);
    this.userId = 0;
    setSortRuleIsSet(false);
    this.sortRule = 0;
    this.payTimeStart = null;
    this.payTimeEnd = null;
    this.deliverTimeStart = null;
    this.deliverTimeEnd = null;
    this.successTimeStart = null;
    this.successTimeEnd = null;
    this.lastUpdateTimeStart = null;
    this.lastUpdateTimeEnd = null;
    setOrderTagIsSet(false);
    this.orderTag = 0;
    setDeliverLimitTimeStateIsSet(false);
    this.deliverLimitTimeState = 0;
    setIsHaveBuyerCommentIsSet(false);
    this.isHaveBuyerComment = 0;
    setIsHaveSellerCommentIsSet(false);
    this.isHaveSellerComment = 0;
    setDownTypeIsSet(false);
    this.downType = 0;
    this.orderIds = null;
  }

  public int getSellerId() {
    return this.sellerId;
  }

  public OrderQueryConditions setSellerId(int sellerId) {
    this.sellerId = sellerId;
    setSellerIdIsSet(true);

    return this;
  }

  public void unsetSellerId() {
  __isset_bit_vector.clear(__SELLERID_ISSET_ID);
  }

  /** Returns true if field sellerId is set (has been asigned a value) and false otherwise */
  public boolean isSetSellerId() {
    return __isset_bit_vector.get(__SELLERID_ISSET_ID);
  }

  public void setSellerIdIsSet(boolean value) {
    __isset_bit_vector.set(__SELLERID_ISSET_ID, value);
  }

  public String getProductName() {
    return this.productName;
  }

  public OrderQueryConditions setProductName(String productName) {
    this.productName = productName;
    
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been asigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  public String getOrderId() {
    return this.orderId;
  }

  public OrderQueryConditions setOrderId(String orderId) {
    this.orderId = orderId;
    
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been asigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  public int getOrderState() {
    return this.orderState;
  }

  public OrderQueryConditions setOrderState(int orderState) {
    this.orderState = orderState;
    setOrderStateIsSet(true);

    return this;
  }

  public void unsetOrderState() {
  __isset_bit_vector.clear(__ORDERSTATE_ISSET_ID);
  }

  /** Returns true if field orderState is set (has been asigned a value) and false otherwise */
  public boolean isSetOrderState() {
    return __isset_bit_vector.get(__ORDERSTATE_ISSET_ID);
  }

  public void setOrderStateIsSet(boolean value) {
    __isset_bit_vector.set(__ORDERSTATE_ISSET_ID, value);
  }

  public String getUserName() {
    return this.userName;
  }

  public OrderQueryConditions setUserName(String userName) {
    this.userName = userName;
    
    return this;
  }

  public void unsetUserName() {
    this.userName = null;
  }

  /** Returns true if field userName is set (has been asigned a value) and false otherwise */
  public boolean isSetUserName() {
    return this.userName != null;
  }

  public void setUserNameIsSet(boolean value) {
    if (!value) {
      this.userName = null;
    }
  }

  public String getMobile() {
    return this.mobile;
  }

  public OrderQueryConditions setMobile(String mobile) {
    this.mobile = mobile;
    
    return this;
  }

  public void unsetMobile() {
    this.mobile = null;
  }

  /** Returns true if field mobile is set (has been asigned a value) and false otherwise */
  public boolean isSetMobile() {
    return this.mobile != null;
  }

  public void setMobileIsSet(boolean value) {
    if (!value) {
      this.mobile = null;
    }
  }

  public int getOrderType() {
    return this.orderType;
  }

  public OrderQueryConditions setOrderType(int orderType) {
    this.orderType = orderType;
    setOrderTypeIsSet(true);

    return this;
  }

  public void unsetOrderType() {
  __isset_bit_vector.clear(__ORDERTYPE_ISSET_ID);
  }

  /** Returns true if field orderType is set (has been asigned a value) and false otherwise */
  public boolean isSetOrderType() {
    return __isset_bit_vector.get(__ORDERTYPE_ISSET_ID);
  }

  public void setOrderTypeIsSet(boolean value) {
    __isset_bit_vector.set(__ORDERTYPE_ISSET_ID, value);
  }

  public int getProvinceId() {
    return this.provinceId;
  }

  public OrderQueryConditions setProvinceId(int provinceId) {
    this.provinceId = provinceId;
    setProvinceIdIsSet(true);

    return this;
  }

  public void unsetProvinceId() {
  __isset_bit_vector.clear(__PROVINCEID_ISSET_ID);
  }

  /** Returns true if field provinceId is set (has been asigned a value) and false otherwise */
  public boolean isSetProvinceId() {
    return __isset_bit_vector.get(__PROVINCEID_ISSET_ID);
  }

  public void setProvinceIdIsSet(boolean value) {
    __isset_bit_vector.set(__PROVINCEID_ISSET_ID, value);
  }

  public int getCityId() {
    return this.cityId;
  }

  public OrderQueryConditions setCityId(int cityId) {
    this.cityId = cityId;
    setCityIdIsSet(true);

    return this;
  }

  public void unsetCityId() {
  __isset_bit_vector.clear(__CITYID_ISSET_ID);
  }

  /** Returns true if field cityId is set (has been asigned a value) and false otherwise */
  public boolean isSetCityId() {
    return __isset_bit_vector.get(__CITYID_ISSET_ID);
  }

  public void setCityIdIsSet(boolean value) {
    __isset_bit_vector.set(__CITYID_ISSET_ID, value);
  }

  public int getCountyId() {
    return this.countyId;
  }

  public OrderQueryConditions setCountyId(int countyId) {
    this.countyId = countyId;
    setCountyIdIsSet(true);

    return this;
  }

  public void unsetCountyId() {
  __isset_bit_vector.clear(__COUNTYID_ISSET_ID);
  }

  /** Returns true if field countyId is set (has been asigned a value) and false otherwise */
  public boolean isSetCountyId() {
    return __isset_bit_vector.get(__COUNTYID_ISSET_ID);
  }

  public void setCountyIdIsSet(boolean value) {
    __isset_bit_vector.set(__COUNTYID_ISSET_ID, value);
  }

  public String getStartTime() {
    return this.startTime;
  }

  public OrderQueryConditions setStartTime(String startTime) {
    this.startTime = startTime;
    
    return this;
  }

  public void unsetStartTime() {
    this.startTime = null;
  }

  /** Returns true if field startTime is set (has been asigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return this.startTime != null;
  }

  public void setStartTimeIsSet(boolean value) {
    if (!value) {
      this.startTime = null;
    }
  }

  public String getEndTime() {
    return this.endTime;
  }

  public OrderQueryConditions setEndTime(String endTime) {
    this.endTime = endTime;
    
    return this;
  }

  public void unsetEndTime() {
    this.endTime = null;
  }

  /** Returns true if field endTime is set (has been asigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return this.endTime != null;
  }

  public void setEndTimeIsSet(boolean value) {
    if (!value) {
      this.endTime = null;
    }
  }

  public int getCount() {
    return this.count;
  }

  public OrderQueryConditions setCount(int count) {
    this.count = count;
    setCountIsSet(true);

    return this;
  }

  public void unsetCount() {
  __isset_bit_vector.clear(__COUNT_ISSET_ID);
  }

  /** Returns true if field count is set (has been asigned a value) and false otherwise */
  public boolean isSetCount() {
    return __isset_bit_vector.get(__COUNT_ISSET_ID);
  }

  public void setCountIsSet(boolean value) {
    __isset_bit_vector.set(__COUNT_ISSET_ID, value);
  }

  public int getCurPage() {
    return this.curPage;
  }

  public OrderQueryConditions setCurPage(int curPage) {
    this.curPage = curPage;
    setCurPageIsSet(true);

    return this;
  }

  public void unsetCurPage() {
  __isset_bit_vector.clear(__CURPAGE_ISSET_ID);
  }

  /** Returns true if field curPage is set (has been asigned a value) and false otherwise */
  public boolean isSetCurPage() {
    return __isset_bit_vector.get(__CURPAGE_ISSET_ID);
  }

  public void setCurPageIsSet(boolean value) {
    __isset_bit_vector.set(__CURPAGE_ISSET_ID, value);
  }

  public String getExpressNo() {
    return this.expressNo;
  }

  public OrderQueryConditions setExpressNo(String expressNo) {
    this.expressNo = expressNo;
    
    return this;
  }

  public void unsetExpressNo() {
    this.expressNo = null;
  }

  /** Returns true if field expressNo is set (has been asigned a value) and false otherwise */
  public boolean isSetExpressNo() {
    return this.expressNo != null;
  }

  public void setExpressNoIsSet(boolean value) {
    if (!value) {
      this.expressNo = null;
    }
  }

  public int getExpressId() {
    return this.expressId;
  }

  public OrderQueryConditions setExpressId(int expressId) {
    this.expressId = expressId;
    setExpressIdIsSet(true);

    return this;
  }

  public void unsetExpressId() {
  __isset_bit_vector.clear(__EXPRESSID_ISSET_ID);
  }

  /** Returns true if field expressId is set (has been asigned a value) and false otherwise */
  public boolean isSetExpressId() {
    return __isset_bit_vector.get(__EXPRESSID_ISSET_ID);
  }

  public void setExpressIdIsSet(boolean value) {
    __isset_bit_vector.set(__EXPRESSID_ISSET_ID, value);
  }

  public String getNickName() {
    return this.nickName;
  }

  public OrderQueryConditions setNickName(String nickName) {
    this.nickName = nickName;
    
    return this;
  }

  public void unsetNickName() {
    this.nickName = null;
  }

  /** Returns true if field nickName is set (has been asigned a value) and false otherwise */
  public boolean isSetNickName() {
    return this.nickName != null;
  }

  public void setNickNameIsSet(boolean value) {
    if (!value) {
      this.nickName = null;
    }
  }

  public String getProductId() {
    return this.productId;
  }

  public OrderQueryConditions setProductId(String productId) {
    this.productId = productId;
    
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been asigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  public int getUserId() {
    return this.userId;
  }

  public OrderQueryConditions setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);

    return this;
  }

  public void unsetUserId() {
  __isset_bit_vector.clear(__USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been asigned a value) and false otherwise */
  public boolean isSetUserId() {
    return __isset_bit_vector.get(__USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bit_vector.set(__USERID_ISSET_ID, value);
  }

  public int getSortRule() {
    return this.sortRule;
  }

  public OrderQueryConditions setSortRule(int sortRule) {
    this.sortRule = sortRule;
    setSortRuleIsSet(true);

    return this;
  }

  public void unsetSortRule() {
  __isset_bit_vector.clear(__SORTRULE_ISSET_ID);
  }

  /** Returns true if field sortRule is set (has been asigned a value) and false otherwise */
  public boolean isSetSortRule() {
    return __isset_bit_vector.get(__SORTRULE_ISSET_ID);
  }

  public void setSortRuleIsSet(boolean value) {
    __isset_bit_vector.set(__SORTRULE_ISSET_ID, value);
  }

  public String getPayTimeStart() {
    return this.payTimeStart;
  }

  public OrderQueryConditions setPayTimeStart(String payTimeStart) {
    this.payTimeStart = payTimeStart;
    
    return this;
  }

  public void unsetPayTimeStart() {
    this.payTimeStart = null;
  }

  /** Returns true if field payTimeStart is set (has been asigned a value) and false otherwise */
  public boolean isSetPayTimeStart() {
    return this.payTimeStart != null;
  }

  public void setPayTimeStartIsSet(boolean value) {
    if (!value) {
      this.payTimeStart = null;
    }
  }

  public String getPayTimeEnd() {
    return this.payTimeEnd;
  }

  public OrderQueryConditions setPayTimeEnd(String payTimeEnd) {
    this.payTimeEnd = payTimeEnd;
    
    return this;
  }

  public void unsetPayTimeEnd() {
    this.payTimeEnd = null;
  }

  /** Returns true if field payTimeEnd is set (has been asigned a value) and false otherwise */
  public boolean isSetPayTimeEnd() {
    return this.payTimeEnd != null;
  }

  public void setPayTimeEndIsSet(boolean value) {
    if (!value) {
      this.payTimeEnd = null;
    }
  }

  public String getDeliverTimeStart() {
    return this.deliverTimeStart;
  }

  public OrderQueryConditions setDeliverTimeStart(String deliverTimeStart) {
    this.deliverTimeStart = deliverTimeStart;
    
    return this;
  }

  public void unsetDeliverTimeStart() {
    this.deliverTimeStart = null;
  }

  /** Returns true if field deliverTimeStart is set (has been asigned a value) and false otherwise */
  public boolean isSetDeliverTimeStart() {
    return this.deliverTimeStart != null;
  }

  public void setDeliverTimeStartIsSet(boolean value) {
    if (!value) {
      this.deliverTimeStart = null;
    }
  }

  public String getDeliverTimeEnd() {
    return this.deliverTimeEnd;
  }

  public OrderQueryConditions setDeliverTimeEnd(String deliverTimeEnd) {
    this.deliverTimeEnd = deliverTimeEnd;
    
    return this;
  }

  public void unsetDeliverTimeEnd() {
    this.deliverTimeEnd = null;
  }

  /** Returns true if field deliverTimeEnd is set (has been asigned a value) and false otherwise */
  public boolean isSetDeliverTimeEnd() {
    return this.deliverTimeEnd != null;
  }

  public void setDeliverTimeEndIsSet(boolean value) {
    if (!value) {
      this.deliverTimeEnd = null;
    }
  }

  public String getSuccessTimeStart() {
    return this.successTimeStart;
  }

  public OrderQueryConditions setSuccessTimeStart(String successTimeStart) {
    this.successTimeStart = successTimeStart;
    
    return this;
  }

  public void unsetSuccessTimeStart() {
    this.successTimeStart = null;
  }

  /** Returns true if field successTimeStart is set (has been asigned a value) and false otherwise */
  public boolean isSetSuccessTimeStart() {
    return this.successTimeStart != null;
  }

  public void setSuccessTimeStartIsSet(boolean value) {
    if (!value) {
      this.successTimeStart = null;
    }
  }

  public String getSuccessTimeEnd() {
    return this.successTimeEnd;
  }

  public OrderQueryConditions setSuccessTimeEnd(String successTimeEnd) {
    this.successTimeEnd = successTimeEnd;
    
    return this;
  }

  public void unsetSuccessTimeEnd() {
    this.successTimeEnd = null;
  }

  /** Returns true if field successTimeEnd is set (has been asigned a value) and false otherwise */
  public boolean isSetSuccessTimeEnd() {
    return this.successTimeEnd != null;
  }

  public void setSuccessTimeEndIsSet(boolean value) {
    if (!value) {
      this.successTimeEnd = null;
    }
  }

  public String getLastUpdateTimeStart() {
    return this.lastUpdateTimeStart;
  }

  public OrderQueryConditions setLastUpdateTimeStart(String lastUpdateTimeStart) {
    this.lastUpdateTimeStart = lastUpdateTimeStart;
    
    return this;
  }

  public void unsetLastUpdateTimeStart() {
    this.lastUpdateTimeStart = null;
  }

  /** Returns true if field lastUpdateTimeStart is set (has been asigned a value) and false otherwise */
  public boolean isSetLastUpdateTimeStart() {
    return this.lastUpdateTimeStart != null;
  }

  public void setLastUpdateTimeStartIsSet(boolean value) {
    if (!value) {
      this.lastUpdateTimeStart = null;
    }
  }

  public String getLastUpdateTimeEnd() {
    return this.lastUpdateTimeEnd;
  }

  public OrderQueryConditions setLastUpdateTimeEnd(String lastUpdateTimeEnd) {
    this.lastUpdateTimeEnd = lastUpdateTimeEnd;
    
    return this;
  }

  public void unsetLastUpdateTimeEnd() {
    this.lastUpdateTimeEnd = null;
  }

  /** Returns true if field lastUpdateTimeEnd is set (has been asigned a value) and false otherwise */
  public boolean isSetLastUpdateTimeEnd() {
    return this.lastUpdateTimeEnd != null;
  }

  public void setLastUpdateTimeEndIsSet(boolean value) {
    if (!value) {
      this.lastUpdateTimeEnd = null;
    }
  }

  public int getOrderTag() {
    return this.orderTag;
  }

  public OrderQueryConditions setOrderTag(int orderTag) {
    this.orderTag = orderTag;
    setOrderTagIsSet(true);

    return this;
  }

  public void unsetOrderTag() {
  __isset_bit_vector.clear(__ORDERTAG_ISSET_ID);
  }

  /** Returns true if field orderTag is set (has been asigned a value) and false otherwise */
  public boolean isSetOrderTag() {
    return __isset_bit_vector.get(__ORDERTAG_ISSET_ID);
  }

  public void setOrderTagIsSet(boolean value) {
    __isset_bit_vector.set(__ORDERTAG_ISSET_ID, value);
  }

  public int getDeliverLimitTimeState() {
    return this.deliverLimitTimeState;
  }

  public OrderQueryConditions setDeliverLimitTimeState(int deliverLimitTimeState) {
    this.deliverLimitTimeState = deliverLimitTimeState;
    setDeliverLimitTimeStateIsSet(true);

    return this;
  }

  public void unsetDeliverLimitTimeState() {
  __isset_bit_vector.clear(__DELIVERLIMITTIMESTATE_ISSET_ID);
  }

  /** Returns true if field deliverLimitTimeState is set (has been asigned a value) and false otherwise */
  public boolean isSetDeliverLimitTimeState() {
    return __isset_bit_vector.get(__DELIVERLIMITTIMESTATE_ISSET_ID);
  }

  public void setDeliverLimitTimeStateIsSet(boolean value) {
    __isset_bit_vector.set(__DELIVERLIMITTIMESTATE_ISSET_ID, value);
  }

  public int getIsHaveBuyerComment() {
    return this.isHaveBuyerComment;
  }

  public OrderQueryConditions setIsHaveBuyerComment(int isHaveBuyerComment) {
    this.isHaveBuyerComment = isHaveBuyerComment;
    setIsHaveBuyerCommentIsSet(true);

    return this;
  }

  public void unsetIsHaveBuyerComment() {
  __isset_bit_vector.clear(__ISHAVEBUYERCOMMENT_ISSET_ID);
  }

  /** Returns true if field isHaveBuyerComment is set (has been asigned a value) and false otherwise */
  public boolean isSetIsHaveBuyerComment() {
    return __isset_bit_vector.get(__ISHAVEBUYERCOMMENT_ISSET_ID);
  }

  public void setIsHaveBuyerCommentIsSet(boolean value) {
    __isset_bit_vector.set(__ISHAVEBUYERCOMMENT_ISSET_ID, value);
  }

  public int getIsHaveSellerComment() {
    return this.isHaveSellerComment;
  }

  public OrderQueryConditions setIsHaveSellerComment(int isHaveSellerComment) {
    this.isHaveSellerComment = isHaveSellerComment;
    setIsHaveSellerCommentIsSet(true);

    return this;
  }

  public void unsetIsHaveSellerComment() {
  __isset_bit_vector.clear(__ISHAVESELLERCOMMENT_ISSET_ID);
  }

  /** Returns true if field isHaveSellerComment is set (has been asigned a value) and false otherwise */
  public boolean isSetIsHaveSellerComment() {
    return __isset_bit_vector.get(__ISHAVESELLERCOMMENT_ISSET_ID);
  }

  public void setIsHaveSellerCommentIsSet(boolean value) {
    __isset_bit_vector.set(__ISHAVESELLERCOMMENT_ISSET_ID, value);
  }

  public int getDownType() {
    return this.downType;
  }

  public OrderQueryConditions setDownType(int downType) {
    this.downType = downType;
    setDownTypeIsSet(true);

    return this;
  }

  public void unsetDownType() {
  __isset_bit_vector.clear(__DOWNTYPE_ISSET_ID);
  }

  /** Returns true if field downType is set (has been asigned a value) and false otherwise */
  public boolean isSetDownType() {
    return __isset_bit_vector.get(__DOWNTYPE_ISSET_ID);
  }

  public void setDownTypeIsSet(boolean value) {
    __isset_bit_vector.set(__DOWNTYPE_ISSET_ID, value);
  }

  public int getOrderIdsSize() {
    return (this.orderIds == null) ? 0 : this.orderIds.size();
  }

  public java.util.Iterator<String> getOrderIdsIterator() {
    return (this.orderIds == null) ? null : this.orderIds.iterator();
  }

  public void addToOrderIds(String elem) {
    if (this.orderIds == null) {
      this.orderIds = new ArrayList<String>();
    }
    this.orderIds.add(elem);
  }

  public List<String> getOrderIds() {
    return this.orderIds;
  }

  public OrderQueryConditions setOrderIds(List<String> orderIds) {
    this.orderIds = orderIds;
    
    return this;
  }

  public void unsetOrderIds() {
    this.orderIds = null;
  }

  /** Returns true if field orderIds is set (has been asigned a value) and false otherwise */
  public boolean isSetOrderIds() {
    return this.orderIds != null;
  }

  public void setOrderIdsIsSet(boolean value) {
    if (!value) {
      this.orderIds = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SELLER_ID:
      if (value == null) {
        unsetSellerId();
      } else {
        setSellerId((Integer)value);
      }
      break;
    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;
    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;
    case ORDER_STATE:
      if (value == null) {
        unsetOrderState();
      } else {
        setOrderState((Integer)value);
      }
      break;
    case USER_NAME:
      if (value == null) {
        unsetUserName();
      } else {
        setUserName((String)value);
      }
      break;
    case MOBILE:
      if (value == null) {
        unsetMobile();
      } else {
        setMobile((String)value);
      }
      break;
    case ORDER_TYPE:
      if (value == null) {
        unsetOrderType();
      } else {
        setOrderType((Integer)value);
      }
      break;
    case PROVINCE_ID:
      if (value == null) {
        unsetProvinceId();
      } else {
        setProvinceId((Integer)value);
      }
      break;
    case CITY_ID:
      if (value == null) {
        unsetCityId();
      } else {
        setCityId((Integer)value);
      }
      break;
    case COUNTY_ID:
      if (value == null) {
        unsetCountyId();
      } else {
        setCountyId((Integer)value);
      }
      break;
    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((String)value);
      }
      break;
    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((String)value);
      }
      break;
    case COUNT:
      if (value == null) {
        unsetCount();
      } else {
        setCount((Integer)value);
      }
      break;
    case CUR_PAGE:
      if (value == null) {
        unsetCurPage();
      } else {
        setCurPage((Integer)value);
      }
      break;
    case EXPRESS_NO:
      if (value == null) {
        unsetExpressNo();
      } else {
        setExpressNo((String)value);
      }
      break;
    case EXPRESS_ID:
      if (value == null) {
        unsetExpressId();
      } else {
        setExpressId((Integer)value);
      }
      break;
    case NICK_NAME:
      if (value == null) {
        unsetNickName();
      } else {
        setNickName((String)value);
      }
      break;
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;
    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;
    case SORT_RULE:
      if (value == null) {
        unsetSortRule();
      } else {
        setSortRule((Integer)value);
      }
      break;
    case PAY_TIME_START:
      if (value == null) {
        unsetPayTimeStart();
      } else {
        setPayTimeStart((String)value);
      }
      break;
    case PAY_TIME_END:
      if (value == null) {
        unsetPayTimeEnd();
      } else {
        setPayTimeEnd((String)value);
      }
      break;
    case DELIVER_TIME_START:
      if (value == null) {
        unsetDeliverTimeStart();
      } else {
        setDeliverTimeStart((String)value);
      }
      break;
    case DELIVER_TIME_END:
      if (value == null) {
        unsetDeliverTimeEnd();
      } else {
        setDeliverTimeEnd((String)value);
      }
      break;
    case SUCCESS_TIME_START:
      if (value == null) {
        unsetSuccessTimeStart();
      } else {
        setSuccessTimeStart((String)value);
      }
      break;
    case SUCCESS_TIME_END:
      if (value == null) {
        unsetSuccessTimeEnd();
      } else {
        setSuccessTimeEnd((String)value);
      }
      break;
    case LAST_UPDATE_TIME_START:
      if (value == null) {
        unsetLastUpdateTimeStart();
      } else {
        setLastUpdateTimeStart((String)value);
      }
      break;
    case LAST_UPDATE_TIME_END:
      if (value == null) {
        unsetLastUpdateTimeEnd();
      } else {
        setLastUpdateTimeEnd((String)value);
      }
      break;
    case ORDER_TAG:
      if (value == null) {
        unsetOrderTag();
      } else {
        setOrderTag((Integer)value);
      }
      break;
    case DELIVER_LIMIT_TIME_STATE:
      if (value == null) {
        unsetDeliverLimitTimeState();
      } else {
        setDeliverLimitTimeState((Integer)value);
      }
      break;
    case IS_HAVE_BUYER_COMMENT:
      if (value == null) {
        unsetIsHaveBuyerComment();
      } else {
        setIsHaveBuyerComment((Integer)value);
      }
      break;
    case IS_HAVE_SELLER_COMMENT:
      if (value == null) {
        unsetIsHaveSellerComment();
      } else {
        setIsHaveSellerComment((Integer)value);
      }
      break;
    case DOWN_TYPE:
      if (value == null) {
        unsetDownType();
      } else {
        setDownType((Integer)value);
      }
      break;
    case ORDER_IDS:
      if (value == null) {
        unsetOrderIds();
      } else {
        setOrderIds((List<String>)value);
      }
      break;
    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SELLER_ID:
      return new Integer(getSellerId());
    case PRODUCT_NAME:
      return getProductName();
    case ORDER_ID:
      return getOrderId();
    case ORDER_STATE:
      return new Integer(getOrderState());
    case USER_NAME:
      return getUserName();
    case MOBILE:
      return getMobile();
    case ORDER_TYPE:
      return new Integer(getOrderType());
    case PROVINCE_ID:
      return new Integer(getProvinceId());
    case CITY_ID:
      return new Integer(getCityId());
    case COUNTY_ID:
      return new Integer(getCountyId());
    case START_TIME:
      return getStartTime();
    case END_TIME:
      return getEndTime();
    case COUNT:
      return new Integer(getCount());
    case CUR_PAGE:
      return new Integer(getCurPage());
    case EXPRESS_NO:
      return getExpressNo();
    case EXPRESS_ID:
      return new Integer(getExpressId());
    case NICK_NAME:
      return getNickName();
    case PRODUCT_ID:
      return getProductId();
    case USER_ID:
      return new Integer(getUserId());
    case SORT_RULE:
      return new Integer(getSortRule());
    case PAY_TIME_START:
      return getPayTimeStart();
    case PAY_TIME_END:
      return getPayTimeEnd();
    case DELIVER_TIME_START:
      return getDeliverTimeStart();
    case DELIVER_TIME_END:
      return getDeliverTimeEnd();
    case SUCCESS_TIME_START:
      return getSuccessTimeStart();
    case SUCCESS_TIME_END:
      return getSuccessTimeEnd();
    case LAST_UPDATE_TIME_START:
      return getLastUpdateTimeStart();
    case LAST_UPDATE_TIME_END:
      return getLastUpdateTimeEnd();
    case ORDER_TAG:
      return new Integer(getOrderTag());
    case DELIVER_LIMIT_TIME_STATE:
      return new Integer(getDeliverLimitTimeState());
    case IS_HAVE_BUYER_COMMENT:
      return new Integer(getIsHaveBuyerComment());
    case IS_HAVE_SELLER_COMMENT:
      return new Integer(getIsHaveSellerComment());
    case DOWN_TYPE:
      return new Integer(getDownType());
    case ORDER_IDS:
      return getOrderIds();
    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SELLER_ID:
      return isSetSellerId();
    case PRODUCT_NAME:
      return isSetProductName();
    case ORDER_ID:
      return isSetOrderId();
    case ORDER_STATE:
      return isSetOrderState();
    case USER_NAME:
      return isSetUserName();
    case MOBILE:
      return isSetMobile();
    case ORDER_TYPE:
      return isSetOrderType();
    case PROVINCE_ID:
      return isSetProvinceId();
    case CITY_ID:
      return isSetCityId();
    case COUNTY_ID:
      return isSetCountyId();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case COUNT:
      return isSetCount();
    case CUR_PAGE:
      return isSetCurPage();
    case EXPRESS_NO:
      return isSetExpressNo();
    case EXPRESS_ID:
      return isSetExpressId();
    case NICK_NAME:
      return isSetNickName();
    case PRODUCT_ID:
      return isSetProductId();
    case USER_ID:
      return isSetUserId();
    case SORT_RULE:
      return isSetSortRule();
    case PAY_TIME_START:
      return isSetPayTimeStart();
    case PAY_TIME_END:
      return isSetPayTimeEnd();
    case DELIVER_TIME_START:
      return isSetDeliverTimeStart();
    case DELIVER_TIME_END:
      return isSetDeliverTimeEnd();
    case SUCCESS_TIME_START:
      return isSetSuccessTimeStart();
    case SUCCESS_TIME_END:
      return isSetSuccessTimeEnd();
    case LAST_UPDATE_TIME_START:
      return isSetLastUpdateTimeStart();
    case LAST_UPDATE_TIME_END:
      return isSetLastUpdateTimeEnd();
    case ORDER_TAG:
      return isSetOrderTag();
    case DELIVER_LIMIT_TIME_STATE:
      return isSetDeliverLimitTimeState();
    case IS_HAVE_BUYER_COMMENT:
      return isSetIsHaveBuyerComment();
    case IS_HAVE_SELLER_COMMENT:
      return isSetIsHaveSellerComment();
    case DOWN_TYPE:
      return isSetDownType();
    case ORDER_IDS:
      return isSetOrderIds();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrderQueryConditions)
      return this.equals((OrderQueryConditions)that);
    return false;
  }

  public boolean equals(OrderQueryConditions that) {
    if (that == null)
      return false;
    boolean this_present_sellerId = true;
    boolean that_present_sellerId = true;
    if (this_present_sellerId || that_present_sellerId) {
      if (!(this_present_sellerId && that_present_sellerId))
        return false;
      if (this.sellerId != that.sellerId)
        return false;
    }
    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }
    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }
    boolean this_present_orderState = true;
    boolean that_present_orderState = true;
    if (this_present_orderState || that_present_orderState) {
      if (!(this_present_orderState && that_present_orderState))
        return false;
      if (this.orderState != that.orderState)
        return false;
    }
    boolean this_present_userName = true && this.isSetUserName();
    boolean that_present_userName = true && that.isSetUserName();
    if (this_present_userName || that_present_userName) {
      if (!(this_present_userName && that_present_userName))
        return false;
      if (!this.userName.equals(that.userName))
        return false;
    }
    boolean this_present_mobile = true && this.isSetMobile();
    boolean that_present_mobile = true && that.isSetMobile();
    if (this_present_mobile || that_present_mobile) {
      if (!(this_present_mobile && that_present_mobile))
        return false;
      if (!this.mobile.equals(that.mobile))
        return false;
    }
    boolean this_present_orderType = true;
    boolean that_present_orderType = true;
    if (this_present_orderType || that_present_orderType) {
      if (!(this_present_orderType && that_present_orderType))
        return false;
      if (this.orderType != that.orderType)
        return false;
    }
    boolean this_present_provinceId = true;
    boolean that_present_provinceId = true;
    if (this_present_provinceId || that_present_provinceId) {
      if (!(this_present_provinceId && that_present_provinceId))
        return false;
      if (this.provinceId != that.provinceId)
        return false;
    }
    boolean this_present_cityId = true;
    boolean that_present_cityId = true;
    if (this_present_cityId || that_present_cityId) {
      if (!(this_present_cityId && that_present_cityId))
        return false;
      if (this.cityId != that.cityId)
        return false;
    }
    boolean this_present_countyId = true;
    boolean that_present_countyId = true;
    if (this_present_countyId || that_present_countyId) {
      if (!(this_present_countyId && that_present_countyId))
        return false;
      if (this.countyId != that.countyId)
        return false;
    }
    boolean this_present_startTime = true && this.isSetStartTime();
    boolean that_present_startTime = true && that.isSetStartTime();
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (!this.startTime.equals(that.startTime))
        return false;
    }
    boolean this_present_endTime = true && this.isSetEndTime();
    boolean that_present_endTime = true && that.isSetEndTime();
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (!this.endTime.equals(that.endTime))
        return false;
    }
    boolean this_present_count = true;
    boolean that_present_count = true;
    if (this_present_count || that_present_count) {
      if (!(this_present_count && that_present_count))
        return false;
      if (this.count != that.count)
        return false;
    }
    boolean this_present_curPage = true;
    boolean that_present_curPage = true;
    if (this_present_curPage || that_present_curPage) {
      if (!(this_present_curPage && that_present_curPage))
        return false;
      if (this.curPage != that.curPage)
        return false;
    }
    boolean this_present_expressNo = true && this.isSetExpressNo();
    boolean that_present_expressNo = true && that.isSetExpressNo();
    if (this_present_expressNo || that_present_expressNo) {
      if (!(this_present_expressNo && that_present_expressNo))
        return false;
      if (!this.expressNo.equals(that.expressNo))
        return false;
    }
    boolean this_present_expressId = true && this.isSetExpressId();
    boolean that_present_expressId = true && that.isSetExpressId();
    if (this_present_expressId || that_present_expressId) {
      if (!(this_present_expressId && that_present_expressId))
        return false;
      if (this.expressId != that.expressId)
        return false;
    }
    boolean this_present_nickName = true && this.isSetNickName();
    boolean that_present_nickName = true && that.isSetNickName();
    if (this_present_nickName || that_present_nickName) {
      if (!(this_present_nickName && that_present_nickName))
        return false;
      if (!this.nickName.equals(that.nickName))
        return false;
    }
    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }
    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }
    boolean this_present_sortRule = true && this.isSetSortRule();
    boolean that_present_sortRule = true && that.isSetSortRule();
    if (this_present_sortRule || that_present_sortRule) {
      if (!(this_present_sortRule && that_present_sortRule))
        return false;
      if (this.sortRule != that.sortRule)
        return false;
    }
    boolean this_present_payTimeStart = true && this.isSetPayTimeStart();
    boolean that_present_payTimeStart = true && that.isSetPayTimeStart();
    if (this_present_payTimeStart || that_present_payTimeStart) {
      if (!(this_present_payTimeStart && that_present_payTimeStart))
        return false;
      if (!this.payTimeStart.equals(that.payTimeStart))
        return false;
    }
    boolean this_present_payTimeEnd = true && this.isSetPayTimeEnd();
    boolean that_present_payTimeEnd = true && that.isSetPayTimeEnd();
    if (this_present_payTimeEnd || that_present_payTimeEnd) {
      if (!(this_present_payTimeEnd && that_present_payTimeEnd))
        return false;
      if (!this.payTimeEnd.equals(that.payTimeEnd))
        return false;
    }
    boolean this_present_deliverTimeStart = true && this.isSetDeliverTimeStart();
    boolean that_present_deliverTimeStart = true && that.isSetDeliverTimeStart();
    if (this_present_deliverTimeStart || that_present_deliverTimeStart) {
      if (!(this_present_deliverTimeStart && that_present_deliverTimeStart))
        return false;
      if (!this.deliverTimeStart.equals(that.deliverTimeStart))
        return false;
    }
    boolean this_present_deliverTimeEnd = true && this.isSetDeliverTimeEnd();
    boolean that_present_deliverTimeEnd = true && that.isSetDeliverTimeEnd();
    if (this_present_deliverTimeEnd || that_present_deliverTimeEnd) {
      if (!(this_present_deliverTimeEnd && that_present_deliverTimeEnd))
        return false;
      if (!this.deliverTimeEnd.equals(that.deliverTimeEnd))
        return false;
    }
    boolean this_present_successTimeStart = true && this.isSetSuccessTimeStart();
    boolean that_present_successTimeStart = true && that.isSetSuccessTimeStart();
    if (this_present_successTimeStart || that_present_successTimeStart) {
      if (!(this_present_successTimeStart && that_present_successTimeStart))
        return false;
      if (!this.successTimeStart.equals(that.successTimeStart))
        return false;
    }
    boolean this_present_successTimeEnd = true && this.isSetSuccessTimeEnd();
    boolean that_present_successTimeEnd = true && that.isSetSuccessTimeEnd();
    if (this_present_successTimeEnd || that_present_successTimeEnd) {
      if (!(this_present_successTimeEnd && that_present_successTimeEnd))
        return false;
      if (!this.successTimeEnd.equals(that.successTimeEnd))
        return false;
    }
    boolean this_present_lastUpdateTimeStart = true && this.isSetLastUpdateTimeStart();
    boolean that_present_lastUpdateTimeStart = true && that.isSetLastUpdateTimeStart();
    if (this_present_lastUpdateTimeStart || that_present_lastUpdateTimeStart) {
      if (!(this_present_lastUpdateTimeStart && that_present_lastUpdateTimeStart))
        return false;
      if (!this.lastUpdateTimeStart.equals(that.lastUpdateTimeStart))
        return false;
    }
    boolean this_present_lastUpdateTimeEnd = true && this.isSetLastUpdateTimeEnd();
    boolean that_present_lastUpdateTimeEnd = true && that.isSetLastUpdateTimeEnd();
    if (this_present_lastUpdateTimeEnd || that_present_lastUpdateTimeEnd) {
      if (!(this_present_lastUpdateTimeEnd && that_present_lastUpdateTimeEnd))
        return false;
      if (!this.lastUpdateTimeEnd.equals(that.lastUpdateTimeEnd))
        return false;
    }
    boolean this_present_orderTag = true && this.isSetOrderTag();
    boolean that_present_orderTag = true && that.isSetOrderTag();
    if (this_present_orderTag || that_present_orderTag) {
      if (!(this_present_orderTag && that_present_orderTag))
        return false;
      if (this.orderTag != that.orderTag)
        return false;
    }
    boolean this_present_deliverLimitTimeState = true && this.isSetDeliverLimitTimeState();
    boolean that_present_deliverLimitTimeState = true && that.isSetDeliverLimitTimeState();
    if (this_present_deliverLimitTimeState || that_present_deliverLimitTimeState) {
      if (!(this_present_deliverLimitTimeState && that_present_deliverLimitTimeState))
        return false;
      if (this.deliverLimitTimeState != that.deliverLimitTimeState)
        return false;
    }
    boolean this_present_isHaveBuyerComment = true && this.isSetIsHaveBuyerComment();
    boolean that_present_isHaveBuyerComment = true && that.isSetIsHaveBuyerComment();
    if (this_present_isHaveBuyerComment || that_present_isHaveBuyerComment) {
      if (!(this_present_isHaveBuyerComment && that_present_isHaveBuyerComment))
        return false;
      if (this.isHaveBuyerComment != that.isHaveBuyerComment)
        return false;
    }
    boolean this_present_isHaveSellerComment = true && this.isSetIsHaveSellerComment();
    boolean that_present_isHaveSellerComment = true && that.isSetIsHaveSellerComment();
    if (this_present_isHaveSellerComment || that_present_isHaveSellerComment) {
      if (!(this_present_isHaveSellerComment && that_present_isHaveSellerComment))
        return false;
      if (this.isHaveSellerComment != that.isHaveSellerComment)
        return false;
    }
    boolean this_present_downType = true && this.isSetDownType();
    boolean that_present_downType = true && that.isSetDownType();
    if (this_present_downType || that_present_downType) {
      if (!(this_present_downType && that_present_downType))
        return false;
      if (this.downType != that.downType)
        return false;
    }
    boolean this_present_orderIds = true && this.isSetOrderIds();
    boolean that_present_orderIds = true && that.isSetOrderIds();
    if (this_present_orderIds || that_present_orderIds) {
      if (!(this_present_orderIds && that_present_orderIds))
        return false;
      if (!this.orderIds.equals(that.orderIds))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();
    boolean present_sellerId = true;
    builder.append(present_sellerId);
    if (present_sellerId)
      builder.append(sellerId);
    boolean present_productName = true && (isSetProductName());
    builder.append(present_productName);
    if (present_productName)
      builder.append(productName);
    boolean present_orderId = true && (isSetOrderId());
    builder.append(present_orderId);
    if (present_orderId)
      builder.append(orderId);
    boolean present_orderState = true;
    builder.append(present_orderState);
    if (present_orderState)
      builder.append(orderState);
    boolean present_userName = true && (isSetUserName());
    builder.append(present_userName);
    if (present_userName)
      builder.append(userName);
    boolean present_mobile = true && (isSetMobile());
    builder.append(present_mobile);
    if (present_mobile)
      builder.append(mobile);
    boolean present_orderType = true;
    builder.append(present_orderType);
    if (present_orderType)
      builder.append(orderType);
    boolean present_provinceId = true;
    builder.append(present_provinceId);
    if (present_provinceId)
      builder.append(provinceId);
    boolean present_cityId = true;
    builder.append(present_cityId);
    if (present_cityId)
      builder.append(cityId);
    boolean present_countyId = true;
    builder.append(present_countyId);
    if (present_countyId)
      builder.append(countyId);
    boolean present_startTime = true && (isSetStartTime());
    builder.append(present_startTime);
    if (present_startTime)
      builder.append(startTime);
    boolean present_endTime = true && (isSetEndTime());
    builder.append(present_endTime);
    if (present_endTime)
      builder.append(endTime);
    boolean present_count = true;
    builder.append(present_count);
    if (present_count)
      builder.append(count);
    boolean present_curPage = true;
    builder.append(present_curPage);
    if (present_curPage)
      builder.append(curPage);
    boolean present_expressNo = true && (isSetExpressNo());
    builder.append(present_expressNo);
    if (present_expressNo)
      builder.append(expressNo);
    boolean present_expressId = true && (isSetExpressId());
    builder.append(present_expressId);
    if (present_expressId)
      builder.append(expressId);
    boolean present_nickName = true && (isSetNickName());
    builder.append(present_nickName);
    if (present_nickName)
      builder.append(nickName);
    boolean present_productId = true && (isSetProductId());
    builder.append(present_productId);
    if (present_productId)
      builder.append(productId);
    boolean present_userId = true;
    builder.append(present_userId);
    if (present_userId)
      builder.append(userId);
    boolean present_sortRule = true && (isSetSortRule());
    builder.append(present_sortRule);
    if (present_sortRule)
      builder.append(sortRule);
    boolean present_payTimeStart = true && (isSetPayTimeStart());
    builder.append(present_payTimeStart);
    if (present_payTimeStart)
      builder.append(payTimeStart);
    boolean present_payTimeEnd = true && (isSetPayTimeEnd());
    builder.append(present_payTimeEnd);
    if (present_payTimeEnd)
      builder.append(payTimeEnd);
    boolean present_deliverTimeStart = true && (isSetDeliverTimeStart());
    builder.append(present_deliverTimeStart);
    if (present_deliverTimeStart)
      builder.append(deliverTimeStart);
    boolean present_deliverTimeEnd = true && (isSetDeliverTimeEnd());
    builder.append(present_deliverTimeEnd);
    if (present_deliverTimeEnd)
      builder.append(deliverTimeEnd);
    boolean present_successTimeStart = true && (isSetSuccessTimeStart());
    builder.append(present_successTimeStart);
    if (present_successTimeStart)
      builder.append(successTimeStart);
    boolean present_successTimeEnd = true && (isSetSuccessTimeEnd());
    builder.append(present_successTimeEnd);
    if (present_successTimeEnd)
      builder.append(successTimeEnd);
    boolean present_lastUpdateTimeStart = true && (isSetLastUpdateTimeStart());
    builder.append(present_lastUpdateTimeStart);
    if (present_lastUpdateTimeStart)
      builder.append(lastUpdateTimeStart);
    boolean present_lastUpdateTimeEnd = true && (isSetLastUpdateTimeEnd());
    builder.append(present_lastUpdateTimeEnd);
    if (present_lastUpdateTimeEnd)
      builder.append(lastUpdateTimeEnd);
    boolean present_orderTag = true && (isSetOrderTag());
    builder.append(present_orderTag);
    if (present_orderTag)
      builder.append(orderTag);
    boolean present_deliverLimitTimeState = true && (isSetDeliverLimitTimeState());
    builder.append(present_deliverLimitTimeState);
    if (present_deliverLimitTimeState)
      builder.append(deliverLimitTimeState);
    boolean present_isHaveBuyerComment = true && (isSetIsHaveBuyerComment());
    builder.append(present_isHaveBuyerComment);
    if (present_isHaveBuyerComment)
      builder.append(isHaveBuyerComment);
    boolean present_isHaveSellerComment = true && (isSetIsHaveSellerComment());
    builder.append(present_isHaveSellerComment);
    if (present_isHaveSellerComment)
      builder.append(isHaveSellerComment);
    boolean present_downType = true && (isSetDownType());
    builder.append(present_downType);
    if (present_downType)
      builder.append(downType);
    boolean present_orderIds = true && (isSetOrderIds());
    builder.append(present_orderIds);
    if (present_orderIds)
      builder.append(orderIds);
    return builder.toHashCode();
  }

  public int compareTo(OrderQueryConditions other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    OrderQueryConditions typedOther = (OrderQueryConditions)other;

    lastComparison = Boolean.valueOf(isSetSellerId()).compareTo(typedOther.isSetSellerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerId()) {
      lastComparison = TBaseHelper.compareTo(this.sellerId, typedOther.sellerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(typedOther.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = TBaseHelper.compareTo(this.productName, typedOther.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(typedOther.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = TBaseHelper.compareTo(this.orderId, typedOther.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderState()).compareTo(typedOther.isSetOrderState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderState()) {
      lastComparison = TBaseHelper.compareTo(this.orderState, typedOther.orderState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserName()).compareTo(typedOther.isSetUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserName()) {
      lastComparison = TBaseHelper.compareTo(this.userName, typedOther.userName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMobile()).compareTo(typedOther.isSetMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobile()) {
      lastComparison = TBaseHelper.compareTo(this.mobile, typedOther.mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderType()).compareTo(typedOther.isSetOrderType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderType()) {
      lastComparison = TBaseHelper.compareTo(this.orderType, typedOther.orderType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceId()).compareTo(typedOther.isSetProvinceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceId()) {
      lastComparison = TBaseHelper.compareTo(this.provinceId, typedOther.provinceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityId()).compareTo(typedOther.isSetCityId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityId()) {
      lastComparison = TBaseHelper.compareTo(this.cityId, typedOther.cityId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountyId()).compareTo(typedOther.isSetCountyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountyId()) {
      lastComparison = TBaseHelper.compareTo(this.countyId, typedOther.countyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartTime()).compareTo(typedOther.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = TBaseHelper.compareTo(this.startTime, typedOther.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(typedOther.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = TBaseHelper.compareTo(this.endTime, typedOther.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCount()).compareTo(typedOther.isSetCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCount()) {
      lastComparison = TBaseHelper.compareTo(this.count, typedOther.count);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCurPage()).compareTo(typedOther.isSetCurPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurPage()) {
      lastComparison = TBaseHelper.compareTo(this.curPage, typedOther.curPage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpressNo()).compareTo(typedOther.isSetExpressNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpressNo()) {
      lastComparison = TBaseHelper.compareTo(this.expressNo, typedOther.expressNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpressId()).compareTo(typedOther.isSetExpressId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpressId()) {
      lastComparison = TBaseHelper.compareTo(this.expressId, typedOther.expressId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNickName()).compareTo(typedOther.isSetNickName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNickName()) {
      lastComparison = TBaseHelper.compareTo(this.nickName, typedOther.nickName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(typedOther.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = TBaseHelper.compareTo(this.productId, typedOther.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(typedOther.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = TBaseHelper.compareTo(this.userId, typedOther.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSortRule()).compareTo(typedOther.isSetSortRule());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSortRule()) {
      lastComparison = TBaseHelper.compareTo(this.sortRule, typedOther.sortRule);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayTimeStart()).compareTo(typedOther.isSetPayTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayTimeStart()) {
      lastComparison = TBaseHelper.compareTo(this.payTimeStart, typedOther.payTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayTimeEnd()).compareTo(typedOther.isSetPayTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayTimeEnd()) {
      lastComparison = TBaseHelper.compareTo(this.payTimeEnd, typedOther.payTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliverTimeStart()).compareTo(typedOther.isSetDeliverTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliverTimeStart()) {
      lastComparison = TBaseHelper.compareTo(this.deliverTimeStart, typedOther.deliverTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliverTimeEnd()).compareTo(typedOther.isSetDeliverTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliverTimeEnd()) {
      lastComparison = TBaseHelper.compareTo(this.deliverTimeEnd, typedOther.deliverTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSuccessTimeStart()).compareTo(typedOther.isSetSuccessTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSuccessTimeStart()) {
      lastComparison = TBaseHelper.compareTo(this.successTimeStart, typedOther.successTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSuccessTimeEnd()).compareTo(typedOther.isSetSuccessTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSuccessTimeEnd()) {
      lastComparison = TBaseHelper.compareTo(this.successTimeEnd, typedOther.successTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastUpdateTimeStart()).compareTo(typedOther.isSetLastUpdateTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastUpdateTimeStart()) {
      lastComparison = TBaseHelper.compareTo(this.lastUpdateTimeStart, typedOther.lastUpdateTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastUpdateTimeEnd()).compareTo(typedOther.isSetLastUpdateTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastUpdateTimeEnd()) {
      lastComparison = TBaseHelper.compareTo(this.lastUpdateTimeEnd, typedOther.lastUpdateTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderTag()).compareTo(typedOther.isSetOrderTag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderTag()) {
      lastComparison = TBaseHelper.compareTo(this.orderTag, typedOther.orderTag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeliverLimitTimeState()).compareTo(typedOther.isSetDeliverLimitTimeState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliverLimitTimeState()) {
      lastComparison = TBaseHelper.compareTo(this.deliverLimitTimeState, typedOther.deliverLimitTimeState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsHaveBuyerComment()).compareTo(typedOther.isSetIsHaveBuyerComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsHaveBuyerComment()) {
      lastComparison = TBaseHelper.compareTo(this.isHaveBuyerComment, typedOther.isHaveBuyerComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsHaveSellerComment()).compareTo(typedOther.isSetIsHaveSellerComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsHaveSellerComment()) {
      lastComparison = TBaseHelper.compareTo(this.isHaveSellerComment, typedOther.isHaveSellerComment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDownType()).compareTo(typedOther.isSetDownType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDownType()) {
      lastComparison = TBaseHelper.compareTo(this.downType, typedOther.downType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderIds()).compareTo(typedOther.isSetOrderIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderIds()) {
      lastComparison = TBaseHelper.compareTo(this.orderIds, typedOther.orderIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case 1: // SELLER_ID
          if (field.type == TType.I32) {
            this.sellerId = iprot.readI32();
            setSellerIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // PRODUCT_NAME
          if (field.type == TType.STRING) {
            this.productName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // ORDER_ID
          if (field.type == TType.STRING) {
            this.orderId = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // ORDER_STATE
          if (field.type == TType.I32) {
            this.orderState = iprot.readI32();
            setOrderStateIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // USER_NAME
          if (field.type == TType.STRING) {
            this.userName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // MOBILE
          if (field.type == TType.STRING) {
            this.mobile = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // ORDER_TYPE
          if (field.type == TType.I32) {
            this.orderType = iprot.readI32();
            setOrderTypeIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // PROVINCE_ID
          if (field.type == TType.I32) {
            this.provinceId = iprot.readI32();
            setProvinceIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // CITY_ID
          if (field.type == TType.I32) {
            this.cityId = iprot.readI32();
            setCityIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // COUNTY_ID
          if (field.type == TType.I32) {
            this.countyId = iprot.readI32();
            setCountyIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // START_TIME
          if (field.type == TType.STRING) {
            this.startTime = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // END_TIME
          if (field.type == TType.STRING) {
            this.endTime = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // COUNT
          if (field.type == TType.I32) {
            this.count = iprot.readI32();
            setCountIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // CUR_PAGE
          if (field.type == TType.I32) {
            this.curPage = iprot.readI32();
            setCurPageIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // EXPRESS_NO
          if (field.type == TType.STRING) {
            this.expressNo = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // EXPRESS_ID
          if (field.type == TType.I32) {
            this.expressId = iprot.readI32();
            setExpressIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // NICK_NAME
          if (field.type == TType.STRING) {
            this.nickName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 18: // PRODUCT_ID
          if (field.type == TType.STRING) {
            this.productId = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 19: // USER_ID
          if (field.type == TType.I32) {
            this.userId = iprot.readI32();
            setUserIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // SORT_RULE
          if (field.type == TType.I32) {
            this.sortRule = iprot.readI32();
            setSortRuleIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 21: // PAY_TIME_START
          if (field.type == TType.STRING) {
            this.payTimeStart = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 22: // PAY_TIME_END
          if (field.type == TType.STRING) {
            this.payTimeEnd = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 23: // DELIVER_TIME_START
          if (field.type == TType.STRING) {
            this.deliverTimeStart = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 24: // DELIVER_TIME_END
          if (field.type == TType.STRING) {
            this.deliverTimeEnd = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 25: // SUCCESS_TIME_START
          if (field.type == TType.STRING) {
            this.successTimeStart = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 26: // SUCCESS_TIME_END
          if (field.type == TType.STRING) {
            this.successTimeEnd = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 27: // LAST_UPDATE_TIME_START
          if (field.type == TType.STRING) {
            this.lastUpdateTimeStart = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 28: // LAST_UPDATE_TIME_END
          if (field.type == TType.STRING) {
            this.lastUpdateTimeEnd = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 29: // ORDER_TAG
          if (field.type == TType.I32) {
            this.orderTag = iprot.readI32();
            setOrderTagIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 30: // DELIVER_LIMIT_TIME_STATE
          if (field.type == TType.I32) {
            this.deliverLimitTimeState = iprot.readI32();
            setDeliverLimitTimeStateIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 31: // IS_HAVE_BUYER_COMMENT
          if (field.type == TType.I32) {
            this.isHaveBuyerComment = iprot.readI32();
            setIsHaveBuyerCommentIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 32: // IS_HAVE_SELLER_COMMENT
          if (field.type == TType.I32) {
            this.isHaveSellerComment = iprot.readI32();
            setIsHaveSellerCommentIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 33: // DOWN_TYPE
          if (field.type == TType.I32) {
            this.downType = iprot.readI32();
            setDownTypeIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 34: // ORDER_IDS
          if (field.type == TType.LIST) {
            {
            TList _list4 = iprot.readListBegin();
            this.orderIds = new ArrayList<String>(_list4.size);
            for (int _i5 = 0; _i5 < _list4.size; ++_i5)
            {
              String _elem6;
              _elem6 = iprot.readString();
              this.orderIds.add(_elem6);
            }
            iprot.readListEnd();
            }
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();
    
    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(SELLER_ID_FIELD_DESC);
    oprot.writeI32(this.sellerId);
    oprot.writeFieldEnd();
    if (this.productName != null) {
      oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
      oprot.writeString(this.productName);
      oprot.writeFieldEnd();
    }
    if (this.orderId != null) {
      oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
      oprot.writeString(this.orderId);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(ORDER_STATE_FIELD_DESC);
    oprot.writeI32(this.orderState);
    oprot.writeFieldEnd();
    if (this.userName != null) {
      oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
      oprot.writeString(this.userName);
      oprot.writeFieldEnd();
    }
    if (this.mobile != null) {
      oprot.writeFieldBegin(MOBILE_FIELD_DESC);
      oprot.writeString(this.mobile);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(ORDER_TYPE_FIELD_DESC);
    oprot.writeI32(this.orderType);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PROVINCE_ID_FIELD_DESC);
    oprot.writeI32(this.provinceId);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CITY_ID_FIELD_DESC);
    oprot.writeI32(this.cityId);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(COUNTY_ID_FIELD_DESC);
    oprot.writeI32(this.countyId);
    oprot.writeFieldEnd();
    if (this.startTime != null) {
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeString(this.startTime);
      oprot.writeFieldEnd();
    }
    if (this.endTime != null) {
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeString(this.endTime);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(COUNT_FIELD_DESC);
    oprot.writeI32(this.count);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CUR_PAGE_FIELD_DESC);
    oprot.writeI32(this.curPage);
    oprot.writeFieldEnd();
    if (this.expressNo != null) {
      if (isSetExpressNo()) {
        oprot.writeFieldBegin(EXPRESS_NO_FIELD_DESC);
        oprot.writeString(this.expressNo);
        oprot.writeFieldEnd();
      }
    }
    if (isSetExpressId()) {
      oprot.writeFieldBegin(EXPRESS_ID_FIELD_DESC);
      oprot.writeI32(this.expressId);
      oprot.writeFieldEnd();
    }
    if (this.nickName != null) {
      if (isSetNickName()) {
        oprot.writeFieldBegin(NICK_NAME_FIELD_DESC);
        oprot.writeString(this.nickName);
        oprot.writeFieldEnd();
      }
    }
    if (this.productId != null) {
      oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
      oprot.writeString(this.productId);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(USER_ID_FIELD_DESC);
    oprot.writeI32(this.userId);
    oprot.writeFieldEnd();
    if (isSetSortRule()) {
      oprot.writeFieldBegin(SORT_RULE_FIELD_DESC);
      oprot.writeI32(this.sortRule);
      oprot.writeFieldEnd();
    }
    if (this.payTimeStart != null) {
      if (isSetPayTimeStart()) {
        oprot.writeFieldBegin(PAY_TIME_START_FIELD_DESC);
        oprot.writeString(this.payTimeStart);
        oprot.writeFieldEnd();
      }
    }
    if (this.payTimeEnd != null) {
      if (isSetPayTimeEnd()) {
        oprot.writeFieldBegin(PAY_TIME_END_FIELD_DESC);
        oprot.writeString(this.payTimeEnd);
        oprot.writeFieldEnd();
      }
    }
    if (this.deliverTimeStart != null) {
      if (isSetDeliverTimeStart()) {
        oprot.writeFieldBegin(DELIVER_TIME_START_FIELD_DESC);
        oprot.writeString(this.deliverTimeStart);
        oprot.writeFieldEnd();
      }
    }
    if (this.deliverTimeEnd != null) {
      if (isSetDeliverTimeEnd()) {
        oprot.writeFieldBegin(DELIVER_TIME_END_FIELD_DESC);
        oprot.writeString(this.deliverTimeEnd);
        oprot.writeFieldEnd();
      }
    }
    if (this.successTimeStart != null) {
      if (isSetSuccessTimeStart()) {
        oprot.writeFieldBegin(SUCCESS_TIME_START_FIELD_DESC);
        oprot.writeString(this.successTimeStart);
        oprot.writeFieldEnd();
      }
    }
    if (this.successTimeEnd != null) {
      if (isSetSuccessTimeEnd()) {
        oprot.writeFieldBegin(SUCCESS_TIME_END_FIELD_DESC);
        oprot.writeString(this.successTimeEnd);
        oprot.writeFieldEnd();
      }
    }
    if (this.lastUpdateTimeStart != null) {
      if (isSetLastUpdateTimeStart()) {
        oprot.writeFieldBegin(LAST_UPDATE_TIME_START_FIELD_DESC);
        oprot.writeString(this.lastUpdateTimeStart);
        oprot.writeFieldEnd();
      }
    }
    if (this.lastUpdateTimeEnd != null) {
      if (isSetLastUpdateTimeEnd()) {
        oprot.writeFieldBegin(LAST_UPDATE_TIME_END_FIELD_DESC);
        oprot.writeString(this.lastUpdateTimeEnd);
        oprot.writeFieldEnd();
      }
    }
    if (isSetOrderTag()) {
      oprot.writeFieldBegin(ORDER_TAG_FIELD_DESC);
      oprot.writeI32(this.orderTag);
      oprot.writeFieldEnd();
    }
    if (isSetDeliverLimitTimeState()) {
      oprot.writeFieldBegin(DELIVER_LIMIT_TIME_STATE_FIELD_DESC);
      oprot.writeI32(this.deliverLimitTimeState);
      oprot.writeFieldEnd();
    }
    if (isSetIsHaveBuyerComment()) {
      oprot.writeFieldBegin(IS_HAVE_BUYER_COMMENT_FIELD_DESC);
      oprot.writeI32(this.isHaveBuyerComment);
      oprot.writeFieldEnd();
    }
    if (isSetIsHaveSellerComment()) {
      oprot.writeFieldBegin(IS_HAVE_SELLER_COMMENT_FIELD_DESC);
      oprot.writeI32(this.isHaveSellerComment);
      oprot.writeFieldEnd();
    }
    if (isSetDownType()) {
      oprot.writeFieldBegin(DOWN_TYPE_FIELD_DESC);
      oprot.writeI32(this.downType);
      oprot.writeFieldEnd();
    }
    if (this.orderIds != null) {
      if (isSetOrderIds()) {
        oprot.writeFieldBegin(ORDER_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.orderIds.size()));
          for (String _iter7 : this.orderIds)
          {
            oprot.writeString(_iter7);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrderQueryConditions(");
    boolean first = true;
    sb.append("sellerId:");
    sb.append(this.sellerId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderState:");
    sb.append(this.orderState);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userName:");
    if (this.userName == null) {
      sb.append("null");
    } else {
      sb.append(this.userName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mobile:");
    if (this.mobile == null) {
      sb.append("null");
    } else {
      sb.append(this.mobile);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderType:");
    sb.append(this.orderType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("provinceId:");
    sb.append(this.provinceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cityId:");
    sb.append(this.cityId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("countyId:");
    sb.append(this.countyId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    if (this.startTime == null) {
      sb.append("null");
    } else {
      sb.append(this.startTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    if (this.endTime == null) {
      sb.append("null");
    } else {
      sb.append(this.endTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("count:");
    sb.append(this.count);
    first = false;
    if (!first) sb.append(", ");
    sb.append("curPage:");
    sb.append(this.curPage);
    first = false;
    if (isSetExpressNo()) {
      if (!first) sb.append(", ");
      sb.append("expressNo:");
      if (this.expressNo == null) {
        sb.append("null");
      } else {
        sb.append(this.expressNo);
      }
      first = false;
      }
    if (isSetExpressId()) {
      if (!first) sb.append(", ");
      sb.append("expressId:");
      sb.append(this.expressId);
      first = false;
      }
    if (isSetNickName()) {
      if (!first) sb.append(", ");
      sb.append("nickName:");
      if (this.nickName == null) {
        sb.append("null");
      } else {
        sb.append(this.nickName);
      }
      first = false;
      }
    if (!first) sb.append(", ");
    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (isSetSortRule()) {
      if (!first) sb.append(", ");
      sb.append("sortRule:");
      sb.append(this.sortRule);
      first = false;
      }
    if (isSetPayTimeStart()) {
      if (!first) sb.append(", ");
      sb.append("payTimeStart:");
      if (this.payTimeStart == null) {
        sb.append("null");
      } else {
        sb.append(this.payTimeStart);
      }
      first = false;
      }
    if (isSetPayTimeEnd()) {
      if (!first) sb.append(", ");
      sb.append("payTimeEnd:");
      if (this.payTimeEnd == null) {
        sb.append("null");
      } else {
        sb.append(this.payTimeEnd);
      }
      first = false;
      }
    if (isSetDeliverTimeStart()) {
      if (!first) sb.append(", ");
      sb.append("deliverTimeStart:");
      if (this.deliverTimeStart == null) {
        sb.append("null");
      } else {
        sb.append(this.deliverTimeStart);
      }
      first = false;
      }
    if (isSetDeliverTimeEnd()) {
      if (!first) sb.append(", ");
      sb.append("deliverTimeEnd:");
      if (this.deliverTimeEnd == null) {
        sb.append("null");
      } else {
        sb.append(this.deliverTimeEnd);
      }
      first = false;
      }
    if (isSetSuccessTimeStart()) {
      if (!first) sb.append(", ");
      sb.append("successTimeStart:");
      if (this.successTimeStart == null) {
        sb.append("null");
      } else {
        sb.append(this.successTimeStart);
      }
      first = false;
      }
    if (isSetSuccessTimeEnd()) {
      if (!first) sb.append(", ");
      sb.append("successTimeEnd:");
      if (this.successTimeEnd == null) {
        sb.append("null");
      } else {
        sb.append(this.successTimeEnd);
      }
      first = false;
      }
    if (isSetLastUpdateTimeStart()) {
      if (!first) sb.append(", ");
      sb.append("lastUpdateTimeStart:");
      if (this.lastUpdateTimeStart == null) {
        sb.append("null");
      } else {
        sb.append(this.lastUpdateTimeStart);
      }
      first = false;
      }
    if (isSetLastUpdateTimeEnd()) {
      if (!first) sb.append(", ");
      sb.append("lastUpdateTimeEnd:");
      if (this.lastUpdateTimeEnd == null) {
        sb.append("null");
      } else {
        sb.append(this.lastUpdateTimeEnd);
      }
      first = false;
      }
    if (isSetOrderTag()) {
      if (!first) sb.append(", ");
      sb.append("orderTag:");
      sb.append(this.orderTag);
      first = false;
      }
    if (isSetDeliverLimitTimeState()) {
      if (!first) sb.append(", ");
      sb.append("deliverLimitTimeState:");
      sb.append(this.deliverLimitTimeState);
      first = false;
      }
    if (isSetIsHaveBuyerComment()) {
      if (!first) sb.append(", ");
      sb.append("isHaveBuyerComment:");
      sb.append(this.isHaveBuyerComment);
      first = false;
      }
    if (isSetIsHaveSellerComment()) {
      if (!first) sb.append(", ");
      sb.append("isHaveSellerComment:");
      sb.append(this.isHaveSellerComment);
      first = false;
      }
    if (isSetDownType()) {
      if (!first) sb.append(", ");
      sb.append("downType:");
      sb.append(this.downType);
      first = false;
      }
    if (isSetOrderIds()) {
      if (!first) sb.append(", ");
      sb.append("orderIds:");
      if (this.orderIds == null) {
        sb.append("null");
      } else {
        sb.append(this.orderIds);
      }
      first = false;
      }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }
}
