/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.jfshare.finagle.thrift.order;

import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.thrift.*;
import org.apache.thrift.meta_data.FieldMetaData;
import org.apache.thrift.meta_data.FieldValueMetaData;
import org.apache.thrift.protocol.*;

import java.util.*;

// No additional import required for struct/union.

public class ThirdPartNotifyInfo implements TBase<ThirdPartNotifyInfo, ThirdPartNotifyInfo._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("ThirdPartNotifyInfo");

  private static final TField ORDER_ID_FIELD_DESC = new TField("orderId", TType.STRING, (short)1);
  private static final TField THIRD_ID_FIELD_DESC = new TField("thirdId", TType.STRING, (short)2);
  private static final TField HANDLETIME_FIELD_DESC = new TField("handletime", TType.STRING, (short)3);
  private static final TField STATE_FIELD_DESC = new TField("state", TType.I32, (short)4);
  private static final TField DESC_FIELD_DESC = new TField("desc", TType.STRING, (short)5);
  private static final TField ORDER_TYPE_FIELD_DESC = new TField("orderType", TType.STRING, (short)6);
  private static final TField CUSTOMER_ID_FIELD_DESC = new TField("customerId", TType.STRING, (short)7);
  private static final TField PAY_TOOL_FIELD_DESC = new TField("payTool", TType.STRING, (short)8);
  private static final TField ZHE_ORDER_ID_FIELD_DESC = new TField("zheOrderId", TType.STRING, (short)9);
  private static final TField AMOUNT_FIELD_DESC = new TField("amount", TType.STRING, (short)10);
  private static final TField PROCESSTIME_FIELD_DESC = new TField("processtime", TType.STRING, (short)11);
  private static final TField RECVTIME_FIELD_DESC = new TField("recvtime", TType.STRING, (short)12);


  public String orderId;
  public String thirdId;
  public String handletime;
  public int state;
  public String desc;
  public String orderType;
  public String customerId;
  public String payTool;
  public String zheOrderId;
  public String amount;
  public String processtime;
  public String recvtime;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    ORDER_ID((short)1, "orderId"),
    THIRD_ID((short)2, "thirdId"),
    HANDLETIME((short)3, "handletime"),
    STATE((short)4, "state"),
    DESC((short)5, "desc"),
    ORDER_TYPE((short)6, "orderType"),
    CUSTOMER_ID((short)7, "customerId"),
    PAY_TOOL((short)8, "payTool"),
    ZHE_ORDER_ID((short)9, "zheOrderId"),
    AMOUNT((short)10, "amount"),
    PROCESSTIME((short)11, "processtime"),
    RECVTIME((short)12, "recvtime");
  
    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
  
    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_ID
  	return ORDER_ID;
        case 2: // THIRD_ID
  	return THIRD_ID;
        case 3: // HANDLETIME
  	return HANDLETIME;
        case 4: // STATE
  	return STATE;
        case 5: // DESC
  	return DESC;
        case 6: // ORDER_TYPE
  	return ORDER_TYPE;
        case 7: // CUSTOMER_ID
  	return CUSTOMER_ID;
        case 8: // PAY_TOOL
  	return PAY_TOOL;
        case 9: // ZHE_ORDER_ID
  	return ZHE_ORDER_ID;
        case 10: // AMOUNT
  	return AMOUNT;
        case 11: // PROCESSTIME
  	return PROCESSTIME;
        case 12: // RECVTIME
  	return RECVTIME;
        default:
  	return null;
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }
  
    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }
  
    private final short _thriftId;
    private final String _fieldName;
  
    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }
  
    public short getThriftFieldId() {
      return _thriftId;
    }
  
    public String getFieldName() {
      return _fieldName;
    }
  }


  // isset id assignments
  private static final int __STATE_ISSET_ID = 0;
  private BitSet __isset_bit_vector = new BitSet(1);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_ID, new FieldMetaData("orderId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.THIRD_ID, new FieldMetaData("thirdId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.HANDLETIME, new FieldMetaData("handletime", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.STATE, new FieldMetaData("state", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.DESC, new FieldMetaData("desc", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.ORDER_TYPE, new FieldMetaData("orderType", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CUSTOMER_ID, new FieldMetaData("customerId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.PAY_TOOL, new FieldMetaData("payTool", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.ZHE_ORDER_ID, new FieldMetaData("zheOrderId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.AMOUNT, new FieldMetaData("amount", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.PROCESSTIME, new FieldMetaData("processtime", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.RECVTIME, new FieldMetaData("recvtime", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(ThirdPartNotifyInfo.class, metaDataMap);
  }


  public ThirdPartNotifyInfo() {
  }

  public ThirdPartNotifyInfo(
    String orderId,
    String thirdId,
    String handletime,
    int state,
    String desc,
    String orderType,
    String customerId,
    String payTool,
    String zheOrderId,
    String amount)
  {
    this();
    this.orderId = orderId;
    this.thirdId = thirdId;
    this.handletime = handletime;
    this.state = state;
    setStateIsSet(true);
    this.desc = desc;
    this.orderType = orderType;
    this.customerId = customerId;
    this.payTool = payTool;
    this.zheOrderId = zheOrderId;
    this.amount = amount;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThirdPartNotifyInfo(ThirdPartNotifyInfo other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    if (other.isSetThirdId()) {
      this.thirdId = other.thirdId;
    }
    if (other.isSetHandletime()) {
      this.handletime = other.handletime;
    }
    this.state = other.state;
    if (other.isSetDesc()) {
      this.desc = other.desc;
    }
    if (other.isSetOrderType()) {
      this.orderType = other.orderType;
    }
    if (other.isSetCustomerId()) {
      this.customerId = other.customerId;
    }
    if (other.isSetPayTool()) {
      this.payTool = other.payTool;
    }
    if (other.isSetZheOrderId()) {
      this.zheOrderId = other.zheOrderId;
    }
    if (other.isSetAmount()) {
      this.amount = other.amount;
    }
    if (other.isSetProcesstime()) {
      this.processtime = other.processtime;
    }
    if (other.isSetRecvtime()) {
      this.recvtime = other.recvtime;
    }
  }

  public ThirdPartNotifyInfo deepCopy() {
    return new ThirdPartNotifyInfo(this);
  }

  @Override
  public void clear() {
    this.orderId = null;
    this.thirdId = null;
    this.handletime = null;
    setStateIsSet(false);
    this.state = 0;
    this.desc = null;
    this.orderType = null;
    this.customerId = null;
    this.payTool = null;
    this.zheOrderId = null;
    this.amount = null;
    this.processtime = null;
    this.recvtime = null;
  }

  public String getOrderId() {
    return this.orderId;
  }

  public ThirdPartNotifyInfo setOrderId(String orderId) {
    this.orderId = orderId;
    
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been asigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  public String getThirdId() {
    return this.thirdId;
  }

  public ThirdPartNotifyInfo setThirdId(String thirdId) {
    this.thirdId = thirdId;
    
    return this;
  }

  public void unsetThirdId() {
    this.thirdId = null;
  }

  /** Returns true if field thirdId is set (has been asigned a value) and false otherwise */
  public boolean isSetThirdId() {
    return this.thirdId != null;
  }

  public void setThirdIdIsSet(boolean value) {
    if (!value) {
      this.thirdId = null;
    }
  }

  public String getHandletime() {
    return this.handletime;
  }

  public ThirdPartNotifyInfo setHandletime(String handletime) {
    this.handletime = handletime;
    
    return this;
  }

  public void unsetHandletime() {
    this.handletime = null;
  }

  /** Returns true if field handletime is set (has been asigned a value) and false otherwise */
  public boolean isSetHandletime() {
    return this.handletime != null;
  }

  public void setHandletimeIsSet(boolean value) {
    if (!value) {
      this.handletime = null;
    }
  }

  public int getState() {
    return this.state;
  }

  public ThirdPartNotifyInfo setState(int state) {
    this.state = state;
    setStateIsSet(true);

    return this;
  }

  public void unsetState() {
  __isset_bit_vector.clear(__STATE_ISSET_ID);
  }

  /** Returns true if field state is set (has been asigned a value) and false otherwise */
  public boolean isSetState() {
    return __isset_bit_vector.get(__STATE_ISSET_ID);
  }

  public void setStateIsSet(boolean value) {
    __isset_bit_vector.set(__STATE_ISSET_ID, value);
  }

  public String getDesc() {
    return this.desc;
  }

  public ThirdPartNotifyInfo setDesc(String desc) {
    this.desc = desc;
    
    return this;
  }

  public void unsetDesc() {
    this.desc = null;
  }

  /** Returns true if field desc is set (has been asigned a value) and false otherwise */
  public boolean isSetDesc() {
    return this.desc != null;
  }

  public void setDescIsSet(boolean value) {
    if (!value) {
      this.desc = null;
    }
  }

  public String getOrderType() {
    return this.orderType;
  }

  public ThirdPartNotifyInfo setOrderType(String orderType) {
    this.orderType = orderType;
    
    return this;
  }

  public void unsetOrderType() {
    this.orderType = null;
  }

  /** Returns true if field orderType is set (has been asigned a value) and false otherwise */
  public boolean isSetOrderType() {
    return this.orderType != null;
  }

  public void setOrderTypeIsSet(boolean value) {
    if (!value) {
      this.orderType = null;
    }
  }

  public String getCustomerId() {
    return this.customerId;
  }

  public ThirdPartNotifyInfo setCustomerId(String customerId) {
    this.customerId = customerId;
    
    return this;
  }

  public void unsetCustomerId() {
    this.customerId = null;
  }

  /** Returns true if field customerId is set (has been asigned a value) and false otherwise */
  public boolean isSetCustomerId() {
    return this.customerId != null;
  }

  public void setCustomerIdIsSet(boolean value) {
    if (!value) {
      this.customerId = null;
    }
  }

  public String getPayTool() {
    return this.payTool;
  }

  public ThirdPartNotifyInfo setPayTool(String payTool) {
    this.payTool = payTool;
    
    return this;
  }

  public void unsetPayTool() {
    this.payTool = null;
  }

  /** Returns true if field payTool is set (has been asigned a value) and false otherwise */
  public boolean isSetPayTool() {
    return this.payTool != null;
  }

  public void setPayToolIsSet(boolean value) {
    if (!value) {
      this.payTool = null;
    }
  }

  public String getZheOrderId() {
    return this.zheOrderId;
  }

  public ThirdPartNotifyInfo setZheOrderId(String zheOrderId) {
    this.zheOrderId = zheOrderId;
    
    return this;
  }

  public void unsetZheOrderId() {
    this.zheOrderId = null;
  }

  /** Returns true if field zheOrderId is set (has been asigned a value) and false otherwise */
  public boolean isSetZheOrderId() {
    return this.zheOrderId != null;
  }

  public void setZheOrderIdIsSet(boolean value) {
    if (!value) {
      this.zheOrderId = null;
    }
  }

  public String getAmount() {
    return this.amount;
  }

  public ThirdPartNotifyInfo setAmount(String amount) {
    this.amount = amount;
    
    return this;
  }

  public void unsetAmount() {
    this.amount = null;
  }

  /** Returns true if field amount is set (has been asigned a value) and false otherwise */
  public boolean isSetAmount() {
    return this.amount != null;
  }

  public void setAmountIsSet(boolean value) {
    if (!value) {
      this.amount = null;
    }
  }

  public String getProcesstime() {
    return this.processtime;
  }

  public ThirdPartNotifyInfo setProcesstime(String processtime) {
    this.processtime = processtime;
    
    return this;
  }

  public void unsetProcesstime() {
    this.processtime = null;
  }

  /** Returns true if field processtime is set (has been asigned a value) and false otherwise */
  public boolean isSetProcesstime() {
    return this.processtime != null;
  }

  public void setProcesstimeIsSet(boolean value) {
    if (!value) {
      this.processtime = null;
    }
  }

  public String getRecvtime() {
    return this.recvtime;
  }

  public ThirdPartNotifyInfo setRecvtime(String recvtime) {
    this.recvtime = recvtime;
    
    return this;
  }

  public void unsetRecvtime() {
    this.recvtime = null;
  }

  /** Returns true if field recvtime is set (has been asigned a value) and false otherwise */
  public boolean isSetRecvtime() {
    return this.recvtime != null;
  }

  public void setRecvtimeIsSet(boolean value) {
    if (!value) {
      this.recvtime = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((String)value);
      }
      break;
    case THIRD_ID:
      if (value == null) {
        unsetThirdId();
      } else {
        setThirdId((String)value);
      }
      break;
    case HANDLETIME:
      if (value == null) {
        unsetHandletime();
      } else {
        setHandletime((String)value);
      }
      break;
    case STATE:
      if (value == null) {
        unsetState();
      } else {
        setState((Integer)value);
      }
      break;
    case DESC:
      if (value == null) {
        unsetDesc();
      } else {
        setDesc((String)value);
      }
      break;
    case ORDER_TYPE:
      if (value == null) {
        unsetOrderType();
      } else {
        setOrderType((String)value);
      }
      break;
    case CUSTOMER_ID:
      if (value == null) {
        unsetCustomerId();
      } else {
        setCustomerId((String)value);
      }
      break;
    case PAY_TOOL:
      if (value == null) {
        unsetPayTool();
      } else {
        setPayTool((String)value);
      }
      break;
    case ZHE_ORDER_ID:
      if (value == null) {
        unsetZheOrderId();
      } else {
        setZheOrderId((String)value);
      }
      break;
    case AMOUNT:
      if (value == null) {
        unsetAmount();
      } else {
        setAmount((String)value);
      }
      break;
    case PROCESSTIME:
      if (value == null) {
        unsetProcesstime();
      } else {
        setProcesstime((String)value);
      }
      break;
    case RECVTIME:
      if (value == null) {
        unsetRecvtime();
      } else {
        setRecvtime((String)value);
      }
      break;
    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_ID:
      return getOrderId();
    case THIRD_ID:
      return getThirdId();
    case HANDLETIME:
      return getHandletime();
    case STATE:
      return new Integer(getState());
    case DESC:
      return getDesc();
    case ORDER_TYPE:
      return getOrderType();
    case CUSTOMER_ID:
      return getCustomerId();
    case PAY_TOOL:
      return getPayTool();
    case ZHE_ORDER_ID:
      return getZheOrderId();
    case AMOUNT:
      return getAmount();
    case PROCESSTIME:
      return getProcesstime();
    case RECVTIME:
      return getRecvtime();
    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORDER_ID:
      return isSetOrderId();
    case THIRD_ID:
      return isSetThirdId();
    case HANDLETIME:
      return isSetHandletime();
    case STATE:
      return isSetState();
    case DESC:
      return isSetDesc();
    case ORDER_TYPE:
      return isSetOrderType();
    case CUSTOMER_ID:
      return isSetCustomerId();
    case PAY_TOOL:
      return isSetPayTool();
    case ZHE_ORDER_ID:
      return isSetZheOrderId();
    case AMOUNT:
      return isSetAmount();
    case PROCESSTIME:
      return isSetProcesstime();
    case RECVTIME:
      return isSetRecvtime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ThirdPartNotifyInfo)
      return this.equals((ThirdPartNotifyInfo)that);
    return false;
  }

  public boolean equals(ThirdPartNotifyInfo that) {
    if (that == null)
      return false;
    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }
    boolean this_present_thirdId = true && this.isSetThirdId();
    boolean that_present_thirdId = true && that.isSetThirdId();
    if (this_present_thirdId || that_present_thirdId) {
      if (!(this_present_thirdId && that_present_thirdId))
        return false;
      if (!this.thirdId.equals(that.thirdId))
        return false;
    }
    boolean this_present_handletime = true && this.isSetHandletime();
    boolean that_present_handletime = true && that.isSetHandletime();
    if (this_present_handletime || that_present_handletime) {
      if (!(this_present_handletime && that_present_handletime))
        return false;
      if (!this.handletime.equals(that.handletime))
        return false;
    }
    boolean this_present_state = true;
    boolean that_present_state = true;
    if (this_present_state || that_present_state) {
      if (!(this_present_state && that_present_state))
        return false;
      if (this.state != that.state)
        return false;
    }
    boolean this_present_desc = true && this.isSetDesc();
    boolean that_present_desc = true && that.isSetDesc();
    if (this_present_desc || that_present_desc) {
      if (!(this_present_desc && that_present_desc))
        return false;
      if (!this.desc.equals(that.desc))
        return false;
    }
    boolean this_present_orderType = true && this.isSetOrderType();
    boolean that_present_orderType = true && that.isSetOrderType();
    if (this_present_orderType || that_present_orderType) {
      if (!(this_present_orderType && that_present_orderType))
        return false;
      if (!this.orderType.equals(that.orderType))
        return false;
    }
    boolean this_present_customerId = true && this.isSetCustomerId();
    boolean that_present_customerId = true && that.isSetCustomerId();
    if (this_present_customerId || that_present_customerId) {
      if (!(this_present_customerId && that_present_customerId))
        return false;
      if (!this.customerId.equals(that.customerId))
        return false;
    }
    boolean this_present_payTool = true && this.isSetPayTool();
    boolean that_present_payTool = true && that.isSetPayTool();
    if (this_present_payTool || that_present_payTool) {
      if (!(this_present_payTool && that_present_payTool))
        return false;
      if (!this.payTool.equals(that.payTool))
        return false;
    }
    boolean this_present_zheOrderId = true && this.isSetZheOrderId();
    boolean that_present_zheOrderId = true && that.isSetZheOrderId();
    if (this_present_zheOrderId || that_present_zheOrderId) {
      if (!(this_present_zheOrderId && that_present_zheOrderId))
        return false;
      if (!this.zheOrderId.equals(that.zheOrderId))
        return false;
    }
    boolean this_present_amount = true && this.isSetAmount();
    boolean that_present_amount = true && that.isSetAmount();
    if (this_present_amount || that_present_amount) {
      if (!(this_present_amount && that_present_amount))
        return false;
      if (!this.amount.equals(that.amount))
        return false;
    }
    boolean this_present_processtime = true && this.isSetProcesstime();
    boolean that_present_processtime = true && that.isSetProcesstime();
    if (this_present_processtime || that_present_processtime) {
      if (!(this_present_processtime && that_present_processtime))
        return false;
      if (!this.processtime.equals(that.processtime))
        return false;
    }
    boolean this_present_recvtime = true && this.isSetRecvtime();
    boolean that_present_recvtime = true && that.isSetRecvtime();
    if (this_present_recvtime || that_present_recvtime) {
      if (!(this_present_recvtime && that_present_recvtime))
        return false;
      if (!this.recvtime.equals(that.recvtime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();
    boolean present_orderId = true && (isSetOrderId());
    builder.append(present_orderId);
    if (present_orderId)
      builder.append(orderId);
    boolean present_thirdId = true && (isSetThirdId());
    builder.append(present_thirdId);
    if (present_thirdId)
      builder.append(thirdId);
    boolean present_handletime = true && (isSetHandletime());
    builder.append(present_handletime);
    if (present_handletime)
      builder.append(handletime);
    boolean present_state = true;
    builder.append(present_state);
    if (present_state)
      builder.append(state);
    boolean present_desc = true && (isSetDesc());
    builder.append(present_desc);
    if (present_desc)
      builder.append(desc);
    boolean present_orderType = true && (isSetOrderType());
    builder.append(present_orderType);
    if (present_orderType)
      builder.append(orderType);
    boolean present_customerId = true && (isSetCustomerId());
    builder.append(present_customerId);
    if (present_customerId)
      builder.append(customerId);
    boolean present_payTool = true && (isSetPayTool());
    builder.append(present_payTool);
    if (present_payTool)
      builder.append(payTool);
    boolean present_zheOrderId = true && (isSetZheOrderId());
    builder.append(present_zheOrderId);
    if (present_zheOrderId)
      builder.append(zheOrderId);
    boolean present_amount = true && (isSetAmount());
    builder.append(present_amount);
    if (present_amount)
      builder.append(amount);
    boolean present_processtime = true && (isSetProcesstime());
    builder.append(present_processtime);
    if (present_processtime)
      builder.append(processtime);
    boolean present_recvtime = true && (isSetRecvtime());
    builder.append(present_recvtime);
    if (present_recvtime)
      builder.append(recvtime);
    return builder.toHashCode();
  }

  public int compareTo(ThirdPartNotifyInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    ThirdPartNotifyInfo typedOther = (ThirdPartNotifyInfo)other;

    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(typedOther.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = TBaseHelper.compareTo(this.orderId, typedOther.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdId()).compareTo(typedOther.isSetThirdId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdId()) {
      lastComparison = TBaseHelper.compareTo(this.thirdId, typedOther.thirdId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHandletime()).compareTo(typedOther.isSetHandletime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHandletime()) {
      lastComparison = TBaseHelper.compareTo(this.handletime, typedOther.handletime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetState()).compareTo(typedOther.isSetState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetState()) {
      lastComparison = TBaseHelper.compareTo(this.state, typedOther.state);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDesc()).compareTo(typedOther.isSetDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDesc()) {
      lastComparison = TBaseHelper.compareTo(this.desc, typedOther.desc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderType()).compareTo(typedOther.isSetOrderType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderType()) {
      lastComparison = TBaseHelper.compareTo(this.orderType, typedOther.orderType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustomerId()).compareTo(typedOther.isSetCustomerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomerId()) {
      lastComparison = TBaseHelper.compareTo(this.customerId, typedOther.customerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayTool()).compareTo(typedOther.isSetPayTool());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayTool()) {
      lastComparison = TBaseHelper.compareTo(this.payTool, typedOther.payTool);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetZheOrderId()).compareTo(typedOther.isSetZheOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetZheOrderId()) {
      lastComparison = TBaseHelper.compareTo(this.zheOrderId, typedOther.zheOrderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAmount()).compareTo(typedOther.isSetAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAmount()) {
      lastComparison = TBaseHelper.compareTo(this.amount, typedOther.amount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProcesstime()).compareTo(typedOther.isSetProcesstime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProcesstime()) {
      lastComparison = TBaseHelper.compareTo(this.processtime, typedOther.processtime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecvtime()).compareTo(typedOther.isSetRecvtime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecvtime()) {
      lastComparison = TBaseHelper.compareTo(this.recvtime, typedOther.recvtime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case 1: // ORDER_ID
          if (field.type == TType.STRING) {
            this.orderId = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // THIRD_ID
          if (field.type == TType.STRING) {
            this.thirdId = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // HANDLETIME
          if (field.type == TType.STRING) {
            this.handletime = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // STATE
          if (field.type == TType.I32) {
            this.state = iprot.readI32();
            setStateIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // DESC
          if (field.type == TType.STRING) {
            this.desc = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // ORDER_TYPE
          if (field.type == TType.STRING) {
            this.orderType = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // CUSTOMER_ID
          if (field.type == TType.STRING) {
            this.customerId = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // PAY_TOOL
          if (field.type == TType.STRING) {
            this.payTool = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // ZHE_ORDER_ID
          if (field.type == TType.STRING) {
            this.zheOrderId = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // AMOUNT
          if (field.type == TType.STRING) {
            this.amount = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // PROCESSTIME
          if (field.type == TType.STRING) {
            this.processtime = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // RECVTIME
          if (field.type == TType.STRING) {
            this.recvtime = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();
    
    oprot.writeStructBegin(STRUCT_DESC);
    if (this.orderId != null) {
      oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
      oprot.writeString(this.orderId);
      oprot.writeFieldEnd();
    }
    if (this.thirdId != null) {
      oprot.writeFieldBegin(THIRD_ID_FIELD_DESC);
      oprot.writeString(this.thirdId);
      oprot.writeFieldEnd();
    }
    if (this.handletime != null) {
      oprot.writeFieldBegin(HANDLETIME_FIELD_DESC);
      oprot.writeString(this.handletime);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(STATE_FIELD_DESC);
    oprot.writeI32(this.state);
    oprot.writeFieldEnd();
    if (this.desc != null) {
      oprot.writeFieldBegin(DESC_FIELD_DESC);
      oprot.writeString(this.desc);
      oprot.writeFieldEnd();
    }
    if (this.orderType != null) {
      oprot.writeFieldBegin(ORDER_TYPE_FIELD_DESC);
      oprot.writeString(this.orderType);
      oprot.writeFieldEnd();
    }
    if (this.customerId != null) {
      oprot.writeFieldBegin(CUSTOMER_ID_FIELD_DESC);
      oprot.writeString(this.customerId);
      oprot.writeFieldEnd();
    }
    if (this.payTool != null) {
      oprot.writeFieldBegin(PAY_TOOL_FIELD_DESC);
      oprot.writeString(this.payTool);
      oprot.writeFieldEnd();
    }
    if (this.zheOrderId != null) {
      oprot.writeFieldBegin(ZHE_ORDER_ID_FIELD_DESC);
      oprot.writeString(this.zheOrderId);
      oprot.writeFieldEnd();
    }
    if (this.amount != null) {
      oprot.writeFieldBegin(AMOUNT_FIELD_DESC);
      oprot.writeString(this.amount);
      oprot.writeFieldEnd();
    }
    if (this.processtime != null) {
      if (isSetProcesstime()) {
        oprot.writeFieldBegin(PROCESSTIME_FIELD_DESC);
        oprot.writeString(this.processtime);
        oprot.writeFieldEnd();
      }
    }
    if (this.recvtime != null) {
      if (isSetRecvtime()) {
        oprot.writeFieldBegin(RECVTIME_FIELD_DESC);
        oprot.writeString(this.recvtime);
        oprot.writeFieldEnd();
      }
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ThirdPartNotifyInfo(");
    boolean first = true;
    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thirdId:");
    if (this.thirdId == null) {
      sb.append("null");
    } else {
      sb.append(this.thirdId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("handletime:");
    if (this.handletime == null) {
      sb.append("null");
    } else {
      sb.append(this.handletime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("state:");
    sb.append(this.state);
    first = false;
    if (!first) sb.append(", ");
    sb.append("desc:");
    if (this.desc == null) {
      sb.append("null");
    } else {
      sb.append(this.desc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderType:");
    if (this.orderType == null) {
      sb.append("null");
    } else {
      sb.append(this.orderType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("customerId:");
    if (this.customerId == null) {
      sb.append("null");
    } else {
      sb.append(this.customerId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("payTool:");
    if (this.payTool == null) {
      sb.append("null");
    } else {
      sb.append(this.payTool);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("zheOrderId:");
    if (this.zheOrderId == null) {
      sb.append("null");
    } else {
      sb.append(this.zheOrderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("amount:");
    if (this.amount == null) {
      sb.append("null");
    } else {
      sb.append(this.amount);
    }
    first = false;
    if (isSetProcesstime()) {
      if (!first) sb.append(", ");
      sb.append("processtime:");
      if (this.processtime == null) {
        sb.append("null");
      } else {
        sb.append(this.processtime);
      }
      first = false;
      }
    if (isSetRecvtime()) {
      if (!first) sb.append(", ");
      sb.append("recvtime:");
      if (this.recvtime == null) {
        sb.append("null");
      } else {
        sb.append(this.recvtime);
      }
      first = false;
      }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }
}
