<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/aop
                      	   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       default-autowire="byName">

    <context:annotation-config/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass">
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property name="jdbcUrl">
            <value>#{configManager.getMysqlConfig('jfx_public_mysql','master','jfshare').url}</value>
        </property>
        <property name="user">
            <value>#{configManager.getMysqlConfig('jfx_public_mysql','master','jfshare').user}</value>
        </property>
        <property name="password">
            <value>#{configManager.getMysqlConfig('jfx_public_mysql','master','jfshare').pwd}</value>
        </property>
        <property name="acquireIncrement">
            <value>3</value>
        </property>
        <property name="initialPoolSize">
            <value>3</value>
        </property>
        <property name="minPoolSize">
            <value>10</value>
        </property>
        <property name="maxPoolSize">
            <value>100</value>
        </property>
        <property name="maxIdleTime">
            <value>600</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>900</value>
        </property>
        <property name="maxStatements">
            <value>100</value>
        </property>
        <property name="numHelperThreads">
            <value>10</value>
        </property>
    </bean>

    <!-- mybatis integrate spring sessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="mapperLocations">
            <array>
                <value>classpath:mybatis/sqlmap/express/*.xml</value>
                <value>classpath:mybatis/sqlmap/manual/*.xml</value>
            </array>
        </property>
    </bean>

    <!-- mybatis integrate spring mapper -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.jfshare.express.model.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- support db transaction -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <bean id="dataSourceRead"
          class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass">
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property name="jdbcUrl">
            <value>#{configManager.getMysqlConfig('jfx_public_mysql','slave1','jfshare').url}</value>
        </property>
        <property name="user">
            <value>#{configManager.getMysqlConfig('jfx_public_mysql','slave1','jfshare').user}</value>
        </property>
        <property name="password">
            <value>#{configManager.getMysqlConfig('jfx_public_mysql','slave1','jfshare').pwd}</value>
        </property>
        <property name="acquireIncrement">
            <value>3</value>
        </property>
        <property name="initialPoolSize">
            <value>3</value>
        </property>
        <property name="minPoolSize">
            <value>2</value>
        </property>
        <property name="maxPoolSize">
            <value>50</value>
        </property>
        <property name="maxIdleTime">
            <value>600</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>900</value>
        </property>
        <property name="maxStatements">
            <value>100</value>
        </property>
        <property name="numHelperThreads">
            <value>10</value>
        </property>
    </bean>

    <bean id="sqlSessionFactoryRead" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceRead"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="mapperLocations">
            <array>
                <value>classpath:mybatis/sqlmap/express/*.xml</value>
                <value>classpath:mybatis/sqlmap/manual/*.xml</value>
            </array>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.jfshare.express.model.mapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactoryRead"/>
    </bean>


    <!-- pool配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="minIdle" value="100"/>
        <property name="maxIdle" value="300"/>
        <property name="maxTotal" value="1000"/>
        <property name="testOnBorrow" value="true"/>
        <property name="maxWaitMillis" value="2000"/>
    </bean>
    <!-- jedis pool配置 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1">
            <value>#{configManager.getRedisConfig('jfx_public_redis','alone').ip}</value>
        </constructor-arg>
        <constructor-arg index="2">
            <value>#{configManager.getRedisConfig('jfx_public_redis','alone').port}</value>
        </constructor-arg>
        <constructor-arg index="3">
            <value>2000</value>
        </constructor-arg>
        <constructor-arg index="4">
            <value>#{configManager.getRedisConfig('jfx_public_redis','alone').pwd}</value>
        </constructor-arg>
    </bean>
</beans>