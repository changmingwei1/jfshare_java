/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.jfshare.finagle.thrift.express;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

// No additional import required for struct/union.

public class ExpressInfo implements TBase<ExpressInfo, ExpressInfo._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("ExpressInfo");

  private static final TField ID_FIELD_DESC = new TField("id", TType.I32, (short)1);
  private static final TField NAME_FIELD_DESC = new TField("name", TType.STRING, (short)2);
  private static final TField QUERY_URL_FIELD_DESC = new TField("queryUrl", TType.STRING, (short)3);
  private static final TField STATUS_FIELD_DESC = new TField("status", TType.I32, (short)4);
  private static final TField COMMENT_FIELD_DESC = new TField("comment", TType.STRING, (short)5);
  private static final TField CREATE_TIME_FIELD_DESC = new TField("createTime", TType.STRING, (short)6);
  private static final TField CREATE_USER_ID_FIELD_DESC = new TField("createUserId", TType.I32, (short)7);
  private static final TField LAST_UPDATE_TIME_FIELD_DESC = new TField("lastUpdateTime", TType.STRING, (short)8);
  private static final TField LAST_UPDATE_USER_ID_FIELD_DESC = new TField("lastUpdateUserId", TType.I32, (short)9);
  private static final TField KUAIDI_KEY_FIELD_DESC = new TField("kuaidiKey", TType.STRING, (short)10);
  private static final TField NAME_RULE_FIELD_DESC = new TField("nameRule", TType.STRING, (short)11);
  private static final TField EXPRESS_NO_RULE_FIELD_DESC = new TField("expressNoRule", TType.STRING, (short)12);
  private static final TField GRAB_STATE_FIELD_DESC = new TField("grabState", TType.I32, (short)13);
  private static final TField TYPE_STATE_FIELD_DESC = new TField("typeState", TType.I32, (short)14);
  private static final TField DNF_TEL_FIELD_DESC = new TField("dnfTel", TType.STRING, (short)15);
  private static final TField USER_TYPE_FIELD_DESC = new TField("userType", TType.I32, (short)16);
  private static final TField SERIAL_NUM_FIELD_DESC = new TField("serialNum", TType.I32, (short)17);


  public int id;
  public String name;
  public String queryUrl;
  public int status;
  public String comment;
  public String createTime;
  public int createUserId;
  public String lastUpdateTime;
  public int lastUpdateUserId;
  public String kuaidiKey;
  public String nameRule;
  public String expressNoRule;
  public int grabState;
  public int typeState;
  public String dnfTel;
  public int userType;
  public int serialNum;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    QUERY_URL((short)3, "queryUrl"),
    STATUS((short)4, "status"),
    COMMENT((short)5, "comment"),
    CREATE_TIME((short)6, "createTime"),
    CREATE_USER_ID((short)7, "createUserId"),
    LAST_UPDATE_TIME((short)8, "lastUpdateTime"),
    LAST_UPDATE_USER_ID((short)9, "lastUpdateUserId"),
    KUAIDI_KEY((short)10, "kuaidiKey"),
    NAME_RULE((short)11, "nameRule"),
    EXPRESS_NO_RULE((short)12, "expressNoRule"),
    GRAB_STATE((short)13, "grabState"),
    TYPE_STATE((short)14, "typeState"),
    DNF_TEL((short)15, "dnfTel"),
    USER_TYPE((short)16, "userType"),
    SERIAL_NUM((short)17, "serialNum");
  
    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
  
    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
  	return ID;
        case 2: // NAME
  	return NAME;
        case 3: // QUERY_URL
  	return QUERY_URL;
        case 4: // STATUS
  	return STATUS;
        case 5: // COMMENT
  	return COMMENT;
        case 6: // CREATE_TIME
  	return CREATE_TIME;
        case 7: // CREATE_USER_ID
  	return CREATE_USER_ID;
        case 8: // LAST_UPDATE_TIME
  	return LAST_UPDATE_TIME;
        case 9: // LAST_UPDATE_USER_ID
  	return LAST_UPDATE_USER_ID;
        case 10: // KUAIDI_KEY
  	return KUAIDI_KEY;
        case 11: // NAME_RULE
  	return NAME_RULE;
        case 12: // EXPRESS_NO_RULE
  	return EXPRESS_NO_RULE;
        case 13: // GRAB_STATE
  	return GRAB_STATE;
        case 14: // TYPE_STATE
  	return TYPE_STATE;
        case 15: // DNF_TEL
  	return DNF_TEL;
        case 16: // USER_TYPE
  	return USER_TYPE;
        case 17: // SERIAL_NUM
  	return SERIAL_NUM;
        default:
  	return null;
      }
    }
  
    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }
  
    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }
  
    private final short _thriftId;
    private final String _fieldName;
  
    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }
  
    public short getThriftFieldId() {
      return _thriftId;
    }
  
    public String getFieldName() {
      return _fieldName;
    }
  }


  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __STATUS_ISSET_ID = 1;
  private static final int __CREATEUSERID_ISSET_ID = 2;
  private static final int __LASTUPDATEUSERID_ISSET_ID = 3;
  private static final int __GRABSTATE_ISSET_ID = 4;
  private static final int __TYPESTATE_ISSET_ID = 5;
  private static final int __USERTYPE_ISSET_ID = 6;
  private static final int __SERIALNUM_ISSET_ID = 7;
  private BitSet __isset_bit_vector = new BitSet(8);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new FieldMetaData("id", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.NAME, new FieldMetaData("name", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.QUERY_URL, new FieldMetaData("queryUrl", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.STATUS, new FieldMetaData("status", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.COMMENT, new FieldMetaData("comment", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new FieldMetaData("createTime", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.CREATE_USER_ID, new FieldMetaData("createUserId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.LAST_UPDATE_TIME, new FieldMetaData("lastUpdateTime", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.LAST_UPDATE_USER_ID, new FieldMetaData("lastUpdateUserId", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.KUAIDI_KEY, new FieldMetaData("kuaidiKey", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.NAME_RULE, new FieldMetaData("nameRule", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXPRESS_NO_RULE, new FieldMetaData("expressNoRule", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.GRAB_STATE, new FieldMetaData("grabState", TFieldRequirementType.DEFAULT,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.TYPE_STATE, new FieldMetaData("typeState", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.DNF_TEL, new FieldMetaData("dnfTel", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.USER_TYPE, new FieldMetaData("userType", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.SERIAL_NUM, new FieldMetaData("serialNum", TFieldRequirementType.OPTIONAL,
      new FieldValueMetaData(TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(ExpressInfo.class, metaDataMap);
  }


  public ExpressInfo() {
  }

  public ExpressInfo(
    int id,
    String name,
    String queryUrl,
    int status,
    String comment,
    String createTime,
    int createUserId,
    String lastUpdateTime,
    int lastUpdateUserId,
    String kuaidiKey,
    String nameRule,
    String expressNoRule,
    int grabState)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.name = name;
    this.queryUrl = queryUrl;
    this.status = status;
    setStatusIsSet(true);
    this.comment = comment;
    this.createTime = createTime;
    this.createUserId = createUserId;
    setCreateUserIdIsSet(true);
    this.lastUpdateTime = lastUpdateTime;
    this.lastUpdateUserId = lastUpdateUserId;
    setLastUpdateUserIdIsSet(true);
    this.kuaidiKey = kuaidiKey;
    this.nameRule = nameRule;
    this.expressNoRule = expressNoRule;
    this.grabState = grabState;
    setGrabStateIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ExpressInfo(ExpressInfo other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetQueryUrl()) {
      this.queryUrl = other.queryUrl;
    }
    this.status = other.status;
    if (other.isSetComment()) {
      this.comment = other.comment;
    }
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    this.createUserId = other.createUserId;
    if (other.isSetLastUpdateTime()) {
      this.lastUpdateTime = other.lastUpdateTime;
    }
    this.lastUpdateUserId = other.lastUpdateUserId;
    if (other.isSetKuaidiKey()) {
      this.kuaidiKey = other.kuaidiKey;
    }
    if (other.isSetNameRule()) {
      this.nameRule = other.nameRule;
    }
    if (other.isSetExpressNoRule()) {
      this.expressNoRule = other.expressNoRule;
    }
    this.grabState = other.grabState;
    this.typeState = other.typeState;
    if (other.isSetDnfTel()) {
      this.dnfTel = other.dnfTel;
    }
    this.userType = other.userType;
    this.serialNum = other.serialNum;
  }

  public ExpressInfo deepCopy() {
    return new ExpressInfo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    this.queryUrl = null;
    setStatusIsSet(false);
    this.status = 0;
    this.comment = null;
    this.createTime = null;
    setCreateUserIdIsSet(false);
    this.createUserId = 0;
    this.lastUpdateTime = null;
    setLastUpdateUserIdIsSet(false);
    this.lastUpdateUserId = 0;
    this.kuaidiKey = null;
    this.nameRule = null;
    this.expressNoRule = null;
    setGrabStateIsSet(false);
    this.grabState = 0;
    setTypeStateIsSet(false);
    this.typeState = 0;
    this.dnfTel = null;
    setUserTypeIsSet(false);
    this.userType = 0;
    setSerialNumIsSet(false);
    this.serialNum = 0;
  }

  public int getId() {
    return this.id;
  }

  public ExpressInfo setId(int id) {
    this.id = id;
    setIdIsSet(true);

    return this;
  }

  public void unsetId() {
  __isset_bit_vector.clear(__ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been asigned a value) and false otherwise */
  public boolean isSetId() {
    return __isset_bit_vector.get(__ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bit_vector.set(__ID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public ExpressInfo setName(String name) {
    this.name = name;
    
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been asigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getQueryUrl() {
    return this.queryUrl;
  }

  public ExpressInfo setQueryUrl(String queryUrl) {
    this.queryUrl = queryUrl;
    
    return this;
  }

  public void unsetQueryUrl() {
    this.queryUrl = null;
  }

  /** Returns true if field queryUrl is set (has been asigned a value) and false otherwise */
  public boolean isSetQueryUrl() {
    return this.queryUrl != null;
  }

  public void setQueryUrlIsSet(boolean value) {
    if (!value) {
      this.queryUrl = null;
    }
  }

  public int getStatus() {
    return this.status;
  }

  public ExpressInfo setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);

    return this;
  }

  public void unsetStatus() {
  __isset_bit_vector.clear(__STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been asigned a value) and false otherwise */
  public boolean isSetStatus() {
    return __isset_bit_vector.get(__STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bit_vector.set(__STATUS_ISSET_ID, value);
  }

  public String getComment() {
    return this.comment;
  }

  public ExpressInfo setComment(String comment) {
    this.comment = comment;
    
    return this;
  }

  public void unsetComment() {
    this.comment = null;
  }

  /** Returns true if field comment is set (has been asigned a value) and false otherwise */
  public boolean isSetComment() {
    return this.comment != null;
  }

  public void setCommentIsSet(boolean value) {
    if (!value) {
      this.comment = null;
    }
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public ExpressInfo setCreateTime(String createTime) {
    this.createTime = createTime;
    
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been asigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public int getCreateUserId() {
    return this.createUserId;
  }

  public ExpressInfo setCreateUserId(int createUserId) {
    this.createUserId = createUserId;
    setCreateUserIdIsSet(true);

    return this;
  }

  public void unsetCreateUserId() {
  __isset_bit_vector.clear(__CREATEUSERID_ISSET_ID);
  }

  /** Returns true if field createUserId is set (has been asigned a value) and false otherwise */
  public boolean isSetCreateUserId() {
    return __isset_bit_vector.get(__CREATEUSERID_ISSET_ID);
  }

  public void setCreateUserIdIsSet(boolean value) {
    __isset_bit_vector.set(__CREATEUSERID_ISSET_ID, value);
  }

  public String getLastUpdateTime() {
    return this.lastUpdateTime;
  }

  public ExpressInfo setLastUpdateTime(String lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    
    return this;
  }

  public void unsetLastUpdateTime() {
    this.lastUpdateTime = null;
  }

  /** Returns true if field lastUpdateTime is set (has been asigned a value) and false otherwise */
  public boolean isSetLastUpdateTime() {
    return this.lastUpdateTime != null;
  }

  public void setLastUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.lastUpdateTime = null;
    }
  }

  public int getLastUpdateUserId() {
    return this.lastUpdateUserId;
  }

  public ExpressInfo setLastUpdateUserId(int lastUpdateUserId) {
    this.lastUpdateUserId = lastUpdateUserId;
    setLastUpdateUserIdIsSet(true);

    return this;
  }

  public void unsetLastUpdateUserId() {
  __isset_bit_vector.clear(__LASTUPDATEUSERID_ISSET_ID);
  }

  /** Returns true if field lastUpdateUserId is set (has been asigned a value) and false otherwise */
  public boolean isSetLastUpdateUserId() {
    return __isset_bit_vector.get(__LASTUPDATEUSERID_ISSET_ID);
  }

  public void setLastUpdateUserIdIsSet(boolean value) {
    __isset_bit_vector.set(__LASTUPDATEUSERID_ISSET_ID, value);
  }

  public String getKuaidiKey() {
    return this.kuaidiKey;
  }

  public ExpressInfo setKuaidiKey(String kuaidiKey) {
    this.kuaidiKey = kuaidiKey;
    
    return this;
  }

  public void unsetKuaidiKey() {
    this.kuaidiKey = null;
  }

  /** Returns true if field kuaidiKey is set (has been asigned a value) and false otherwise */
  public boolean isSetKuaidiKey() {
    return this.kuaidiKey != null;
  }

  public void setKuaidiKeyIsSet(boolean value) {
    if (!value) {
      this.kuaidiKey = null;
    }
  }

  public String getNameRule() {
    return this.nameRule;
  }

  public ExpressInfo setNameRule(String nameRule) {
    this.nameRule = nameRule;
    
    return this;
  }

  public void unsetNameRule() {
    this.nameRule = null;
  }

  /** Returns true if field nameRule is set (has been asigned a value) and false otherwise */
  public boolean isSetNameRule() {
    return this.nameRule != null;
  }

  public void setNameRuleIsSet(boolean value) {
    if (!value) {
      this.nameRule = null;
    }
  }

  public String getExpressNoRule() {
    return this.expressNoRule;
  }

  public ExpressInfo setExpressNoRule(String expressNoRule) {
    this.expressNoRule = expressNoRule;
    
    return this;
  }

  public void unsetExpressNoRule() {
    this.expressNoRule = null;
  }

  /** Returns true if field expressNoRule is set (has been asigned a value) and false otherwise */
  public boolean isSetExpressNoRule() {
    return this.expressNoRule != null;
  }

  public void setExpressNoRuleIsSet(boolean value) {
    if (!value) {
      this.expressNoRule = null;
    }
  }

  public int getGrabState() {
    return this.grabState;
  }

  public ExpressInfo setGrabState(int grabState) {
    this.grabState = grabState;
    setGrabStateIsSet(true);

    return this;
  }

  public void unsetGrabState() {
  __isset_bit_vector.clear(__GRABSTATE_ISSET_ID);
  }

  /** Returns true if field grabState is set (has been asigned a value) and false otherwise */
  public boolean isSetGrabState() {
    return __isset_bit_vector.get(__GRABSTATE_ISSET_ID);
  }

  public void setGrabStateIsSet(boolean value) {
    __isset_bit_vector.set(__GRABSTATE_ISSET_ID, value);
  }

  public int getTypeState() {
    return this.typeState;
  }

  public ExpressInfo setTypeState(int typeState) {
    this.typeState = typeState;
    setTypeStateIsSet(true);

    return this;
  }

  public void unsetTypeState() {
  __isset_bit_vector.clear(__TYPESTATE_ISSET_ID);
  }

  /** Returns true if field typeState is set (has been asigned a value) and false otherwise */
  public boolean isSetTypeState() {
    return __isset_bit_vector.get(__TYPESTATE_ISSET_ID);
  }

  public void setTypeStateIsSet(boolean value) {
    __isset_bit_vector.set(__TYPESTATE_ISSET_ID, value);
  }

  public String getDnfTel() {
    return this.dnfTel;
  }

  public ExpressInfo setDnfTel(String dnfTel) {
    this.dnfTel = dnfTel;
    
    return this;
  }

  public void unsetDnfTel() {
    this.dnfTel = null;
  }

  /** Returns true if field dnfTel is set (has been asigned a value) and false otherwise */
  public boolean isSetDnfTel() {
    return this.dnfTel != null;
  }

  public void setDnfTelIsSet(boolean value) {
    if (!value) {
      this.dnfTel = null;
    }
  }

  public int getUserType() {
    return this.userType;
  }

  public ExpressInfo setUserType(int userType) {
    this.userType = userType;
    setUserTypeIsSet(true);

    return this;
  }

  public void unsetUserType() {
  __isset_bit_vector.clear(__USERTYPE_ISSET_ID);
  }

  /** Returns true if field userType is set (has been asigned a value) and false otherwise */
  public boolean isSetUserType() {
    return __isset_bit_vector.get(__USERTYPE_ISSET_ID);
  }

  public void setUserTypeIsSet(boolean value) {
    __isset_bit_vector.set(__USERTYPE_ISSET_ID, value);
  }

  public int getSerialNum() {
    return this.serialNum;
  }

  public ExpressInfo setSerialNum(int serialNum) {
    this.serialNum = serialNum;
    setSerialNumIsSet(true);

    return this;
  }

  public void unsetSerialNum() {
  __isset_bit_vector.clear(__SERIALNUM_ISSET_ID);
  }

  /** Returns true if field serialNum is set (has been asigned a value) and false otherwise */
  public boolean isSetSerialNum() {
    return __isset_bit_vector.get(__SERIALNUM_ISSET_ID);
  }

  public void setSerialNumIsSet(boolean value) {
    __isset_bit_vector.set(__SERIALNUM_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;
    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;
    case QUERY_URL:
      if (value == null) {
        unsetQueryUrl();
      } else {
        setQueryUrl((String)value);
      }
      break;
    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;
    case COMMENT:
      if (value == null) {
        unsetComment();
      } else {
        setComment((String)value);
      }
      break;
    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;
    case CREATE_USER_ID:
      if (value == null) {
        unsetCreateUserId();
      } else {
        setCreateUserId((Integer)value);
      }
      break;
    case LAST_UPDATE_TIME:
      if (value == null) {
        unsetLastUpdateTime();
      } else {
        setLastUpdateTime((String)value);
      }
      break;
    case LAST_UPDATE_USER_ID:
      if (value == null) {
        unsetLastUpdateUserId();
      } else {
        setLastUpdateUserId((Integer)value);
      }
      break;
    case KUAIDI_KEY:
      if (value == null) {
        unsetKuaidiKey();
      } else {
        setKuaidiKey((String)value);
      }
      break;
    case NAME_RULE:
      if (value == null) {
        unsetNameRule();
      } else {
        setNameRule((String)value);
      }
      break;
    case EXPRESS_NO_RULE:
      if (value == null) {
        unsetExpressNoRule();
      } else {
        setExpressNoRule((String)value);
      }
      break;
    case GRAB_STATE:
      if (value == null) {
        unsetGrabState();
      } else {
        setGrabState((Integer)value);
      }
      break;
    case TYPE_STATE:
      if (value == null) {
        unsetTypeState();
      } else {
        setTypeState((Integer)value);
      }
      break;
    case DNF_TEL:
      if (value == null) {
        unsetDnfTel();
      } else {
        setDnfTel((String)value);
      }
      break;
    case USER_TYPE:
      if (value == null) {
        unsetUserType();
      } else {
        setUserType((Integer)value);
      }
      break;
    case SERIAL_NUM:
      if (value == null) {
        unsetSerialNum();
      } else {
        setSerialNum((Integer)value);
      }
      break;
    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return new Integer(getId());
    case NAME:
      return getName();
    case QUERY_URL:
      return getQueryUrl();
    case STATUS:
      return new Integer(getStatus());
    case COMMENT:
      return getComment();
    case CREATE_TIME:
      return getCreateTime();
    case CREATE_USER_ID:
      return new Integer(getCreateUserId());
    case LAST_UPDATE_TIME:
      return getLastUpdateTime();
    case LAST_UPDATE_USER_ID:
      return new Integer(getLastUpdateUserId());
    case KUAIDI_KEY:
      return getKuaidiKey();
    case NAME_RULE:
      return getNameRule();
    case EXPRESS_NO_RULE:
      return getExpressNoRule();
    case GRAB_STATE:
      return new Integer(getGrabState());
    case TYPE_STATE:
      return new Integer(getTypeState());
    case DNF_TEL:
      return getDnfTel();
    case USER_TYPE:
      return new Integer(getUserType());
    case SERIAL_NUM:
      return new Integer(getSerialNum());
    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case QUERY_URL:
      return isSetQueryUrl();
    case STATUS:
      return isSetStatus();
    case COMMENT:
      return isSetComment();
    case CREATE_TIME:
      return isSetCreateTime();
    case CREATE_USER_ID:
      return isSetCreateUserId();
    case LAST_UPDATE_TIME:
      return isSetLastUpdateTime();
    case LAST_UPDATE_USER_ID:
      return isSetLastUpdateUserId();
    case KUAIDI_KEY:
      return isSetKuaidiKey();
    case NAME_RULE:
      return isSetNameRule();
    case EXPRESS_NO_RULE:
      return isSetExpressNoRule();
    case GRAB_STATE:
      return isSetGrabState();
    case TYPE_STATE:
      return isSetTypeState();
    case DNF_TEL:
      return isSetDnfTel();
    case USER_TYPE:
      return isSetUserType();
    case SERIAL_NUM:
      return isSetSerialNum();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ExpressInfo)
      return this.equals((ExpressInfo)that);
    return false;
  }

  public boolean equals(ExpressInfo that) {
    if (that == null)
      return false;
    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }
    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }
    boolean this_present_queryUrl = true && this.isSetQueryUrl();
    boolean that_present_queryUrl = true && that.isSetQueryUrl();
    if (this_present_queryUrl || that_present_queryUrl) {
      if (!(this_present_queryUrl && that_present_queryUrl))
        return false;
      if (!this.queryUrl.equals(that.queryUrl))
        return false;
    }
    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }
    boolean this_present_comment = true && this.isSetComment();
    boolean that_present_comment = true && that.isSetComment();
    if (this_present_comment || that_present_comment) {
      if (!(this_present_comment && that_present_comment))
        return false;
      if (!this.comment.equals(that.comment))
        return false;
    }
    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }
    boolean this_present_createUserId = true;
    boolean that_present_createUserId = true;
    if (this_present_createUserId || that_present_createUserId) {
      if (!(this_present_createUserId && that_present_createUserId))
        return false;
      if (this.createUserId != that.createUserId)
        return false;
    }
    boolean this_present_lastUpdateTime = true && this.isSetLastUpdateTime();
    boolean that_present_lastUpdateTime = true && that.isSetLastUpdateTime();
    if (this_present_lastUpdateTime || that_present_lastUpdateTime) {
      if (!(this_present_lastUpdateTime && that_present_lastUpdateTime))
        return false;
      if (!this.lastUpdateTime.equals(that.lastUpdateTime))
        return false;
    }
    boolean this_present_lastUpdateUserId = true;
    boolean that_present_lastUpdateUserId = true;
    if (this_present_lastUpdateUserId || that_present_lastUpdateUserId) {
      if (!(this_present_lastUpdateUserId && that_present_lastUpdateUserId))
        return false;
      if (this.lastUpdateUserId != that.lastUpdateUserId)
        return false;
    }
    boolean this_present_kuaidiKey = true && this.isSetKuaidiKey();
    boolean that_present_kuaidiKey = true && that.isSetKuaidiKey();
    if (this_present_kuaidiKey || that_present_kuaidiKey) {
      if (!(this_present_kuaidiKey && that_present_kuaidiKey))
        return false;
      if (!this.kuaidiKey.equals(that.kuaidiKey))
        return false;
    }
    boolean this_present_nameRule = true && this.isSetNameRule();
    boolean that_present_nameRule = true && that.isSetNameRule();
    if (this_present_nameRule || that_present_nameRule) {
      if (!(this_present_nameRule && that_present_nameRule))
        return false;
      if (!this.nameRule.equals(that.nameRule))
        return false;
    }
    boolean this_present_expressNoRule = true && this.isSetExpressNoRule();
    boolean that_present_expressNoRule = true && that.isSetExpressNoRule();
    if (this_present_expressNoRule || that_present_expressNoRule) {
      if (!(this_present_expressNoRule && that_present_expressNoRule))
        return false;
      if (!this.expressNoRule.equals(that.expressNoRule))
        return false;
    }
    boolean this_present_grabState = true;
    boolean that_present_grabState = true;
    if (this_present_grabState || that_present_grabState) {
      if (!(this_present_grabState && that_present_grabState))
        return false;
      if (this.grabState != that.grabState)
        return false;
    }
    boolean this_present_typeState = true && this.isSetTypeState();
    boolean that_present_typeState = true && that.isSetTypeState();
    if (this_present_typeState || that_present_typeState) {
      if (!(this_present_typeState && that_present_typeState))
        return false;
      if (this.typeState != that.typeState)
        return false;
    }
    boolean this_present_dnfTel = true && this.isSetDnfTel();
    boolean that_present_dnfTel = true && that.isSetDnfTel();
    if (this_present_dnfTel || that_present_dnfTel) {
      if (!(this_present_dnfTel && that_present_dnfTel))
        return false;
      if (!this.dnfTel.equals(that.dnfTel))
        return false;
    }
    boolean this_present_userType = true && this.isSetUserType();
    boolean that_present_userType = true && that.isSetUserType();
    if (this_present_userType || that_present_userType) {
      if (!(this_present_userType && that_present_userType))
        return false;
      if (this.userType != that.userType)
        return false;
    }
    boolean this_present_serialNum = true && this.isSetSerialNum();
    boolean that_present_serialNum = true && that.isSetSerialNum();
    if (this_present_serialNum || that_present_serialNum) {
      if (!(this_present_serialNum && that_present_serialNum))
        return false;
      if (this.serialNum != that.serialNum)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();
    boolean present_id = true;
    builder.append(present_id);
    if (present_id)
      builder.append(id);
    boolean present_name = true && (isSetName());
    builder.append(present_name);
    if (present_name)
      builder.append(name);
    boolean present_queryUrl = true && (isSetQueryUrl());
    builder.append(present_queryUrl);
    if (present_queryUrl)
      builder.append(queryUrl);
    boolean present_status = true;
    builder.append(present_status);
    if (present_status)
      builder.append(status);
    boolean present_comment = true && (isSetComment());
    builder.append(present_comment);
    if (present_comment)
      builder.append(comment);
    boolean present_createTime = true && (isSetCreateTime());
    builder.append(present_createTime);
    if (present_createTime)
      builder.append(createTime);
    boolean present_createUserId = true;
    builder.append(present_createUserId);
    if (present_createUserId)
      builder.append(createUserId);
    boolean present_lastUpdateTime = true && (isSetLastUpdateTime());
    builder.append(present_lastUpdateTime);
    if (present_lastUpdateTime)
      builder.append(lastUpdateTime);
    boolean present_lastUpdateUserId = true;
    builder.append(present_lastUpdateUserId);
    if (present_lastUpdateUserId)
      builder.append(lastUpdateUserId);
    boolean present_kuaidiKey = true && (isSetKuaidiKey());
    builder.append(present_kuaidiKey);
    if (present_kuaidiKey)
      builder.append(kuaidiKey);
    boolean present_nameRule = true && (isSetNameRule());
    builder.append(present_nameRule);
    if (present_nameRule)
      builder.append(nameRule);
    boolean present_expressNoRule = true && (isSetExpressNoRule());
    builder.append(present_expressNoRule);
    if (present_expressNoRule)
      builder.append(expressNoRule);
    boolean present_grabState = true;
    builder.append(present_grabState);
    if (present_grabState)
      builder.append(grabState);
    boolean present_typeState = true && (isSetTypeState());
    builder.append(present_typeState);
    if (present_typeState)
      builder.append(typeState);
    boolean present_dnfTel = true && (isSetDnfTel());
    builder.append(present_dnfTel);
    if (present_dnfTel)
      builder.append(dnfTel);
    boolean present_userType = true && (isSetUserType());
    builder.append(present_userType);
    if (present_userType)
      builder.append(userType);
    boolean present_serialNum = true && (isSetSerialNum());
    builder.append(present_serialNum);
    if (present_serialNum)
      builder.append(serialNum);
    return builder.toHashCode();
  }

  public int compareTo(ExpressInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    ExpressInfo typedOther = (ExpressInfo)other;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(typedOther.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = TBaseHelper.compareTo(this.id, typedOther.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(typedOther.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = TBaseHelper.compareTo(this.name, typedOther.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQueryUrl()).compareTo(typedOther.isSetQueryUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQueryUrl()) {
      lastComparison = TBaseHelper.compareTo(this.queryUrl, typedOther.queryUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComment()).compareTo(typedOther.isSetComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComment()) {
      lastComparison = TBaseHelper.compareTo(this.comment, typedOther.comment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(typedOther.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = TBaseHelper.compareTo(this.createTime, typedOther.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateUserId()).compareTo(typedOther.isSetCreateUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateUserId()) {
      lastComparison = TBaseHelper.compareTo(this.createUserId, typedOther.createUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastUpdateTime()).compareTo(typedOther.isSetLastUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastUpdateTime()) {
      lastComparison = TBaseHelper.compareTo(this.lastUpdateTime, typedOther.lastUpdateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastUpdateUserId()).compareTo(typedOther.isSetLastUpdateUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastUpdateUserId()) {
      lastComparison = TBaseHelper.compareTo(this.lastUpdateUserId, typedOther.lastUpdateUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetKuaidiKey()).compareTo(typedOther.isSetKuaidiKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKuaidiKey()) {
      lastComparison = TBaseHelper.compareTo(this.kuaidiKey, typedOther.kuaidiKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNameRule()).compareTo(typedOther.isSetNameRule());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNameRule()) {
      lastComparison = TBaseHelper.compareTo(this.nameRule, typedOther.nameRule);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpressNoRule()).compareTo(typedOther.isSetExpressNoRule());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpressNoRule()) {
      lastComparison = TBaseHelper.compareTo(this.expressNoRule, typedOther.expressNoRule);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGrabState()).compareTo(typedOther.isSetGrabState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGrabState()) {
      lastComparison = TBaseHelper.compareTo(this.grabState, typedOther.grabState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTypeState()).compareTo(typedOther.isSetTypeState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTypeState()) {
      lastComparison = TBaseHelper.compareTo(this.typeState, typedOther.typeState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDnfTel()).compareTo(typedOther.isSetDnfTel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDnfTel()) {
      lastComparison = TBaseHelper.compareTo(this.dnfTel, typedOther.dnfTel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserType()).compareTo(typedOther.isSetUserType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserType()) {
      lastComparison = TBaseHelper.compareTo(this.userType, typedOther.userType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSerialNum()).compareTo(typedOther.isSetSerialNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSerialNum()) {
      lastComparison = TBaseHelper.compareTo(this.serialNum, typedOther.serialNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case 1: // ID
          if (field.type == TType.I32) {
            this.id = iprot.readI32();
            setIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // NAME
          if (field.type == TType.STRING) {
            this.name = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // QUERY_URL
          if (field.type == TType.STRING) {
            this.queryUrl = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // STATUS
          if (field.type == TType.I32) {
            this.status = iprot.readI32();
            setStatusIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // COMMENT
          if (field.type == TType.STRING) {
            this.comment = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // CREATE_TIME
          if (field.type == TType.STRING) {
            this.createTime = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // CREATE_USER_ID
          if (field.type == TType.I32) {
            this.createUserId = iprot.readI32();
            setCreateUserIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // LAST_UPDATE_TIME
          if (field.type == TType.STRING) {
            this.lastUpdateTime = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // LAST_UPDATE_USER_ID
          if (field.type == TType.I32) {
            this.lastUpdateUserId = iprot.readI32();
            setLastUpdateUserIdIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // KUAIDI_KEY
          if (field.type == TType.STRING) {
            this.kuaidiKey = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // NAME_RULE
          if (field.type == TType.STRING) {
            this.nameRule = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // EXPRESS_NO_RULE
          if (field.type == TType.STRING) {
            this.expressNoRule = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // GRAB_STATE
          if (field.type == TType.I32) {
            this.grabState = iprot.readI32();
            setGrabStateIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // TYPE_STATE
          if (field.type == TType.I32) {
            this.typeState = iprot.readI32();
            setTypeStateIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // DNF_TEL
          if (field.type == TType.STRING) {
            this.dnfTel = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // USER_TYPE
          if (field.type == TType.I32) {
            this.userType = iprot.readI32();
            setUserTypeIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // SERIAL_NUM
          if (field.type == TType.I32) {
            this.serialNum = iprot.readI32();
            setSerialNumIsSet(true);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();
    
    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(ID_FIELD_DESC);
    oprot.writeI32(this.id);
    oprot.writeFieldEnd();
    if (this.name != null) {
      oprot.writeFieldBegin(NAME_FIELD_DESC);
      oprot.writeString(this.name);
      oprot.writeFieldEnd();
    }
    if (this.queryUrl != null) {
      oprot.writeFieldBegin(QUERY_URL_FIELD_DESC);
      oprot.writeString(this.queryUrl);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(STATUS_FIELD_DESC);
    oprot.writeI32(this.status);
    oprot.writeFieldEnd();
    if (this.comment != null) {
      oprot.writeFieldBegin(COMMENT_FIELD_DESC);
      oprot.writeString(this.comment);
      oprot.writeFieldEnd();
    }
    if (this.createTime != null) {
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeString(this.createTime);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(CREATE_USER_ID_FIELD_DESC);
    oprot.writeI32(this.createUserId);
    oprot.writeFieldEnd();
    if (this.lastUpdateTime != null) {
      oprot.writeFieldBegin(LAST_UPDATE_TIME_FIELD_DESC);
      oprot.writeString(this.lastUpdateTime);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(LAST_UPDATE_USER_ID_FIELD_DESC);
    oprot.writeI32(this.lastUpdateUserId);
    oprot.writeFieldEnd();
    if (this.kuaidiKey != null) {
      oprot.writeFieldBegin(KUAIDI_KEY_FIELD_DESC);
      oprot.writeString(this.kuaidiKey);
      oprot.writeFieldEnd();
    }
    if (this.nameRule != null) {
      oprot.writeFieldBegin(NAME_RULE_FIELD_DESC);
      oprot.writeString(this.nameRule);
      oprot.writeFieldEnd();
    }
    if (this.expressNoRule != null) {
      oprot.writeFieldBegin(EXPRESS_NO_RULE_FIELD_DESC);
      oprot.writeString(this.expressNoRule);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(GRAB_STATE_FIELD_DESC);
    oprot.writeI32(this.grabState);
    oprot.writeFieldEnd();
    if (isSetTypeState()) {
      oprot.writeFieldBegin(TYPE_STATE_FIELD_DESC);
      oprot.writeI32(this.typeState);
      oprot.writeFieldEnd();
    }
    if (this.dnfTel != null) {
      if (isSetDnfTel()) {
        oprot.writeFieldBegin(DNF_TEL_FIELD_DESC);
        oprot.writeString(this.dnfTel);
        oprot.writeFieldEnd();
      }
    }
    if (isSetUserType()) {
      oprot.writeFieldBegin(USER_TYPE_FIELD_DESC);
      oprot.writeI32(this.userType);
      oprot.writeFieldEnd();
    }
    if (isSetSerialNum()) {
      oprot.writeFieldBegin(SERIAL_NUM_FIELD_DESC);
      oprot.writeI32(this.serialNum);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ExpressInfo(");
    boolean first = true;
    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("queryUrl:");
    if (this.queryUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.queryUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("comment:");
    if (this.comment == null) {
      sb.append("null");
    } else {
      sb.append(this.comment);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    if (this.createTime == null) {
      sb.append("null");
    } else {
      sb.append(this.createTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createUserId:");
    sb.append(this.createUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastUpdateTime:");
    if (this.lastUpdateTime == null) {
      sb.append("null");
    } else {
      sb.append(this.lastUpdateTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastUpdateUserId:");
    sb.append(this.lastUpdateUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("kuaidiKey:");
    if (this.kuaidiKey == null) {
      sb.append("null");
    } else {
      sb.append(this.kuaidiKey);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nameRule:");
    if (this.nameRule == null) {
      sb.append("null");
    } else {
      sb.append(this.nameRule);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("expressNoRule:");
    if (this.expressNoRule == null) {
      sb.append("null");
    } else {
      sb.append(this.expressNoRule);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("grabState:");
    sb.append(this.grabState);
    first = false;
    if (isSetTypeState()) {
      if (!first) sb.append(", ");
      sb.append("typeState:");
      sb.append(this.typeState);
      first = false;
      }
    if (isSetDnfTel()) {
      if (!first) sb.append(", ");
      sb.append("dnfTel:");
      if (this.dnfTel == null) {
        sb.append("null");
      } else {
        sb.append(this.dnfTel);
      }
      first = false;
      }
    if (isSetUserType()) {
      if (!first) sb.append(", ");
      sb.append("userType:");
      sb.append(this.userType);
      first = false;
      }
    if (isSetSerialNum()) {
      if (!first) sb.append(", ");
      sb.append("serialNum:");
      sb.append(this.serialNum);
      first = false;
      }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }
}
